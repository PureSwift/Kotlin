// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaKitReflection
import JavaRuntime
import JavaUtil

@JavaClass("kotlin.jvm.internal.ClassReference", implements: KClass<JavaObject>.self, ClassBasedDeclarationContainer.self)
open class ClassReference: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaClass<JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getVisibility() -> KVisibility!

  @JavaMethod
  open func getQualifiedName() -> String

  @JavaMethod
  open func getMembers() -> JavaCollection<KCallable<JavaObject>>!

  @JavaMethod
  open func getNestedClasses() -> JavaCollection<KClass<JavaObject>>!

  @JavaMethod
  open func getObjectInstance() -> JavaObject!

  @JavaMethod
  open func getSupertypes() -> List<KType>!

  @JavaMethod
  open func getSealedSubclasses() -> List<KClass<JavaObject>>!

  @JavaMethod
  open func isData() -> Bool

  @JavaMethod
  open func isInner() -> Bool

  @JavaMethod
  open func isCompanion() -> Bool

  @JavaMethod
  open func isFun() -> Bool

  @JavaMethod
  open func isValue() -> Bool

  @JavaMethod
  open func getJClass() -> JavaClass<JavaObject>!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func isInstance(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func getTypeParameters() -> List<KTypeParameter>!

  @JavaMethod
  open func isFinal() -> Bool

  @JavaMethod
  open func isSealed() -> Bool

  @JavaMethod
  open func getSimpleName() -> String

  @JavaMethod
  open func isOpen() -> Bool

  @JavaMethod
  open func getConstructors() -> JavaCollection<KFunction<JavaObject>>!

  @JavaMethod
  open func getAnnotations() -> List<Annotation>!

  @JavaMethod
  open func isAbstract() -> Bool
}
extension JavaClass<ClassReference> {
  @JavaStaticField(isFinal: true)
  public var Companion: ClassReference.Companion!

  @JavaStaticMethod
  public func isAbstract$annotations()

  @JavaStaticMethod
  public func isFinal$annotations()

  @JavaStaticMethod
  public func isOpen$annotations()

  @JavaStaticMethod
  public func getTypeParameters$annotations()

  @JavaStaticMethod
  public func getVisibility$annotations()

  @JavaStaticMethod
  public func getSupertypes$annotations()

  @JavaStaticMethod
  public func getSealedSubclasses$annotations()

  @JavaStaticMethod
  public func isSealed$annotations()

  @JavaStaticMethod
  public func isData$annotations()

  @JavaStaticMethod
  public func isInner$annotations()

  @JavaStaticMethod
  public func isCompanion$annotations()

  @JavaStaticMethod
  public func isFun$annotations()

  @JavaStaticMethod
  public func isValue$annotations()

  @JavaStaticMethod
  public func access$getSimpleNames$cp() -> Map!

  @JavaStaticMethod
  public func access$getClassFqNames$cp() -> HashMap!

  @JavaStaticMethod
  public func access$getFUNCTION_CLASSES$cp() -> Map!
}

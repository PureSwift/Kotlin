// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.reflect.KVariance")
open class KVariance: JavaObject {
  public enum KVarianceCases: Equatable {
    case INVARIANT
    case IN
    case OUT
  }

  public var enumValue: KVarianceCases! {
    let classObj = self.javaClass
    if self.equals(classObj.INVARIANT?.as(JavaObject.self)) {
      return KVarianceCases.INVARIANT
    } else if self.equals(classObj.IN?.as(JavaObject.self)) {
      return KVarianceCases.IN
    } else if self.equals(classObj.OUT?.as(JavaObject.self)) {
      return KVarianceCases.OUT
    } else {
      return nil
    }
  }

  public convenience init(_ enumValue: KVarianceCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<KVariance>(environment: _environment)
    switch enumValue {
      case .INVARIANT:
        if let INVARIANT = classObj.INVARIANT {
          self.init(javaHolder: INVARIANT.javaHolder)
        } else {
          fatalError("Enum value INVARIANT was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .IN:
        if let IN = classObj.IN {
          self.init(javaHolder: IN.javaHolder)
        } else {
          fatalError("Enum value IN was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .OUT:
        if let OUT = classObj.OUT {
          self.init(javaHolder: OUT.javaHolder)
        } else {
          fatalError("Enum value OUT was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
}
extension JavaClass<KVariance> {
  @JavaStaticField(isFinal: true)
  public var INVARIANT: KVariance!

  @JavaStaticField(isFinal: true)
  public var IN: KVariance!

  @JavaStaticField(isFinal: true)
  public var OUT: KVariance!

  @JavaStaticMethod
  public func values() -> [KVariance?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> KVariance!

  @JavaStaticMethod
  public func getEntries() -> EnumEntries<KVariance>!
}

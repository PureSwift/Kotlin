// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.collections.builders.MapBuilder")
open class MapBuilder<K: AnyJavaObject, V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getValues() -> JavaCollection<JavaObject>!

  @JavaMethod
  open func entriesIterator$kotlin_stdlib() -> MapBuilder.EntriesItr<JavaObject, JavaObject>!

  @JavaMethod
  open func containsAllEntries$kotlin_stdlib(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func isReadOnly$kotlin_stdlib() -> Bool

  @JavaMethod
  open func addKey$kotlin_stdlib(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func getCapacity$kotlin_stdlib() -> Int32

  @JavaMethod
  open func removeValue$kotlin_stdlib(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func valuesIterator$kotlin_stdlib() -> MapBuilder.ValuesItr<JavaObject, JavaObject>!

  @JavaMethod
  open func checkIsMutable$kotlin_stdlib()

  @JavaMethod
  open func removeKey$kotlin_stdlib(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func keysIterator$kotlin_stdlib() -> MapBuilder.KeysItr<JavaObject, JavaObject>!

  @JavaMethod
  open func remove(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open func get(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func put(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func values() -> JavaCollection<JavaObject>!

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func clear()

  @JavaMethod
  open func isEmpty() -> Bool

  @JavaMethod
  open func keySet() -> JavaSet<JavaObject>!

  @JavaMethod
  open func containsValue(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func containsKey(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func getSize() -> Int32

  @JavaMethod
  open func getKeys() -> JavaSet<JavaObject>!
}
extension JavaClass {
  @JavaStaticField(isFinal: true)
  public var Companion: MapBuilder.Companion!

  @JavaStaticMethod
  public func access$getEmpty$cp<K: AnyJavaObject, V: AnyJavaObject>() -> MapBuilder! where ObjectType == MapBuilder<K, V>

  @JavaStaticMethod
  public func access$getLength$p<K: AnyJavaObject, V: AnyJavaObject>(_ arg0: MapBuilder?) -> Int32 where ObjectType == MapBuilder<K, V>

  @JavaStaticMethod
  public func access$getValuesArray$p<K: AnyJavaObject, V: AnyJavaObject>(_ arg0: MapBuilder?) -> [JavaObject?] where ObjectType == MapBuilder<K, V>

  @JavaStaticMethod
  public func access$allocateValuesArray<K: AnyJavaObject, V: AnyJavaObject>(_ arg0: MapBuilder?) -> [JavaObject?] where ObjectType == MapBuilder<K, V>

  @JavaStaticMethod
  public func access$getModCount$p<K: AnyJavaObject, V: AnyJavaObject>(_ arg0: MapBuilder?) -> Int32 where ObjectType == MapBuilder<K, V>

  @JavaStaticMethod
  public func access$getPresenceArray$p<K: AnyJavaObject, V: AnyJavaObject>(_ arg0: MapBuilder?) -> [Int32] where ObjectType == MapBuilder<K, V>

  @JavaStaticMethod
  public func access$removeEntryAt<K: AnyJavaObject, V: AnyJavaObject>(_ arg0: MapBuilder?, _ arg1: Int32) where ObjectType == MapBuilder<K, V>

  @JavaStaticMethod
  public func access$getKeysArray$p<K: AnyJavaObject, V: AnyJavaObject>(_ arg0: MapBuilder?) -> [JavaObject?] where ObjectType == MapBuilder<K, V>
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaKitIO
import JavaRuntime

@JavaClass("kotlin.io.FilesKt__FileReadWriteKt")
open class FilesKt__FileReadWriteKt: FilesKt__FilePathComponentsKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<FilesKt__FileReadWriteKt> {
  @JavaStaticMethod
  public func appendBytes(_ arg0: File?, _ arg1: [Int8])

  @JavaStaticMethod
  public func readText(_ arg0: File?, _ arg1: Charset?) -> String

  @JavaStaticMethod
  public func readText$default(_ arg0: File?, _ arg1: Charset?, _ arg2: Int32, _ arg3: JavaObject?) -> String

  @JavaStaticMethod
  public func writeText(_ arg0: File?, _ arg1: String, _ arg2: Charset?)

  @JavaStaticMethod
  public func writeTextImpl(_ arg0: OutputStream?, _ arg1: String, _ arg2: Charset?)

  @JavaStaticMethod
  public func writeText$default(_ arg0: File?, _ arg1: String, _ arg2: Charset?, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func appendText$default(_ arg0: File?, _ arg1: String, _ arg2: Charset?, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func forEachLine(_ arg0: File?, _ arg1: Charset?, _ arg2: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func readLines(_ arg0: File?, _ arg1: Charset?) -> List<JavaString>!

  @JavaStaticMethod
  public func readLines$default(_ arg0: File?, _ arg1: Charset?, _ arg2: Int32, _ arg3: JavaObject?) -> List!

  @JavaStaticMethod
  public func useLines(_ arg0: File?, _ arg1: Charset?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func useLines$default(_ arg0: File?, _ arg1: Charset?, _ arg2: Function1?, _ arg3: Int32, _ arg4: JavaObject?) -> JavaObject!

  @JavaStaticMethod
  public func forEachBlock(_ arg0: File?, _ arg1: Int32, _ arg2: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEachBlock(_ arg0: File?, _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEachLine$default(_ arg0: File?, _ arg1: Charset?, _ arg2: Function1?, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func readBytes(_ arg0: File?) -> [Int8]

  @JavaStaticMethod
  public func writeBytes(_ arg0: File?, _ arg1: [Int8])

  @JavaStaticMethod
  public func appendText(_ arg0: File?, _ arg1: String, _ arg2: Charset?)
}

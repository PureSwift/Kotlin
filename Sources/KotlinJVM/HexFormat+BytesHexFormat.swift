// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaLang
import JavaRuntime

extension HexFormat {
  @JavaClass("kotlin.text.HexFormat$BytesHexFormat")
  open class BytesHexFormat: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, _ arg2: String, _ arg3: String, _ arg4: String, _ arg5: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getShortByteSeparatorNoPrefixAndSuffix$kotlin_stdlib() -> Bool

  @JavaMethod
  open func getBytesPerLine() -> Int32

  @JavaMethod
  open func getBytesPerGroup() -> Int32

  @JavaMethod
  open func getGroupSeparator() -> String

  @JavaMethod
  open func getByteSeparator() -> String

  @JavaMethod
  open func getBytePrefix() -> String

  @JavaMethod
  open func getByteSuffix() -> String

  @JavaMethod
  open func getNoLineAndGroupSeparator$kotlin_stdlib() -> Bool

  @JavaMethod
  open func getIgnoreCase$kotlin_stdlib() -> Bool

  @JavaMethod
  open func appendOptionsTo$kotlin_stdlib(_ arg0: StringBuilder?, _ arg1: String) -> StringBuilder!

  @JavaMethod
  open override func toString() -> String
  }
}
extension JavaClass<HexFormat.BytesHexFormat> {
  @JavaStaticField(isFinal: true)
  public var Companion: HexFormat.BytesHexFormat.Companion!

  @JavaStaticMethod
  public func access$getDefault$cp() -> HexFormat.BytesHexFormat!
}

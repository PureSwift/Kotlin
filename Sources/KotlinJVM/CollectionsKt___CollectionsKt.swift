// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaLang
import JavaRuntime
import JavaUtil

@JavaClass("kotlin.collections.CollectionsKt___CollectionsKt")
open class CollectionsKt___CollectionsKt: CollectionsKt___CollectionsJvmKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<CollectionsKt___CollectionsKt> {
  @JavaStaticMethod
  public func partition(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Pair<List<JavaObject>, List<JavaObject>>!

  @JavaStaticMethod
  public func indexOf(_ arg0: List<JavaObject>?, _ arg1: JavaObject?) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: List<JavaObject>?, _ arg1: JavaObject?) -> Int32

  @JavaStaticMethod
  public func map(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func toList(_ arg0: Iterable<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func toCharArray(_ arg0: JavaCollection<JavaCharacter>?) -> [UInt16]

  @JavaStaticMethod
  public func count(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func count(_ arg0: Iterable<JavaObject>?) -> Int32

  @JavaStaticMethod
  public func contains(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?) -> Bool

  @JavaStaticMethod
  public func last(_ arg0: Iterable<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func last(_ arg0: List<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func last(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func last(_ arg0: List<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func single(_ arg0: Iterable<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func single(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func single(_ arg0: List<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func filter(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func first(_ arg0: List<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func first(_ arg0: Iterable<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func first(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func forEach(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func toSet(_ arg0: Iterable<JavaObject>?) -> JavaSet<JavaObject>!

  @JavaStaticMethod
  public func withIndex(_ arg0: Iterable<JavaObject>?) -> Iterable<IndexedValue<JavaObject>>!

  @JavaStaticMethod
  public func reduce(_ arg0: Iterable<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func elementAt(_ arg0: Iterable<JavaObject>?, _ arg1: Int32) -> JavaObject!

  @JavaStaticMethod
  public func reversed(_ arg0: Iterable<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func slice(_ arg0: List<JavaObject>?, _ arg1: IntRange?) -> List<JavaObject>!

  @JavaStaticMethod
  public func slice(_ arg0: List<JavaObject>?, _ arg1: Iterable<JavaInteger>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func toByteArray(_ arg0: JavaCollection<JavaByte>?) -> [Int8]

  @JavaStaticMethod
  public func all(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func random(_ arg0: JavaCollection<JavaObject>?, _ arg1: Random?) -> JavaObject!

  @JavaStaticMethod
  public func shuffle(_ arg0: List<JavaObject>?, _ arg1: Random?)

  @JavaStaticMethod
  public func flatMap(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Iterable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func distinct(_ arg0: Iterable<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func sorted(_ arg0: Iterable<Comparable<JavaObject>>?) -> List<Comparable<JavaObject>>!

  @JavaStaticMethod
  public func scan(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func takeWhile(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func dropWhile(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func groupingBy(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?) -> Grouping<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func subtract(_ arg0: Iterable<JavaObject>?, _ arg1: Iterable<JavaObject>?) -> JavaSet<JavaObject>!

  @JavaStaticMethod
  public func toIntArray(_ arg0: JavaCollection<JavaInteger>?) -> [Int32]

  @JavaStaticMethod
  public func minus(_ arg0: Iterable<JavaObject>?, _ arg1: Iterable<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func minus(_ arg0: Iterable<JavaObject>?, _ arg1: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func minus(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?) -> List<JavaObject>!

  @JavaStaticMethod
  public func minus(_ arg0: Iterable<JavaObject>?, _ arg1: Sequence<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: Iterable<JavaObject>?, _ arg1: Sequence<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: JavaCollection<JavaObject>?, _ arg1: Iterable<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: JavaCollection<JavaObject>?, _ arg1: Sequence<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: Iterable<JavaObject>?, _ arg1: Iterable<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: JavaCollection<JavaObject>?, _ arg1: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?) -> List<JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: JavaCollection<JavaObject>?, _ arg1: JavaObject?) -> List<JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: Iterable<JavaObject>?, _ arg1: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func toLongArray(_ arg0: JavaCollection<JavaLong>?) -> [Int64]

  @JavaStaticMethod
  public func take(_ arg0: Iterable<JavaObject>?, _ arg1: Int32) -> List<JavaObject>!

  @JavaStaticMethod
  public func toCollection(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func union(_ arg0: Iterable<JavaObject>?, _ arg1: Iterable<JavaObject>?) -> JavaSet<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: Iterable<JavaObject>?, _ arg1: [JavaObject?]) -> List<Pair<JavaObject, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: Iterable<JavaObject>?, _ arg1: [JavaObject?], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: Iterable<JavaObject>?, _ arg1: Iterable<JavaObject>?) -> List<Pair<JavaObject, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: Iterable<JavaObject>?, _ arg1: Iterable<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func any(_ arg0: Iterable<JavaObject>?) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func mapIndexedNotNullTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func reduceIndexedOrNull(_ arg0: Iterable<JavaObject>?, _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceRightIndexedOrNull(_ arg0: List<JavaObject>?, _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func runningReduceIndexed(_ arg0: Iterable<JavaObject>?, _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func joinToString$default(_ arg0: Iterable?, _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1?, _ arg7: Int32, _ arg8: JavaObject?) -> String

  @JavaStaticMethod
  public func foldIndexed(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRight(_ arg0: List<JavaObject>?, _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRightIndexed(_ arg0: List<JavaObject>?, _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func forEachIndexed(_ arg0: Iterable<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: Iterable<JavaFloat>?) -> Float

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: Iterable<Comparable<JavaObject>>?) -> Comparable<JavaObject>!

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: Iterable<JavaDouble>?) -> Double

  @JavaStaticMethod
  public func maxByOrThrow(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Comparable<JavaObject>>?) -> JavaObject!

  @JavaStaticMethod
  public func maxByOrNull(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Comparable<JavaObject>>?) -> JavaObject!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: Iterable<JavaDouble>?) -> JavaDouble!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: Iterable<JavaFloat>?) -> JavaFloat!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: Iterable<Comparable<JavaObject>>?) -> Comparable<JavaObject>!

  @JavaStaticMethod
  public func minOrThrow(_ arg0: Iterable<JavaDouble>?) -> Double

  @JavaStaticMethod
  public func minOrThrow(_ arg0: Iterable<Comparable<JavaObject>>?) -> Comparable<JavaObject>!

  @JavaStaticMethod
  public func minOrThrow(_ arg0: Iterable<JavaFloat>?) -> Float

  @JavaStaticMethod
  public func minByOrThrow(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Comparable<JavaObject>>?) -> JavaObject!

  @JavaStaticMethod
  public func minByOrNull(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Comparable<JavaObject>>?) -> JavaObject!

  @JavaStaticMethod
  public func minOrNull(_ arg0: Iterable<JavaFloat>?) -> JavaFloat!

  @JavaStaticMethod
  public func minOrNull(_ arg0: Iterable<Comparable<JavaObject>>?) -> Comparable<JavaObject>!

  @JavaStaticMethod
  public func minOrNull(_ arg0: Iterable<JavaDouble>?) -> JavaDouble!

  @JavaStaticMethod
  public func none(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: Iterable<JavaObject>?) -> Bool

  @JavaStaticMethod
  public func onEach(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Unit>?) -> Iterable<JavaObject>!

  @JavaStaticMethod
  public func onEachIndexed(_ arg0: Iterable<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, Unit>?) -> Iterable<JavaObject>!

  @JavaStaticMethod
  public func reduceIndexed(_ arg0: Iterable<JavaObject>?, _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceOrNull(_ arg0: Iterable<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceRight(_ arg0: List<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceRightIndexed(_ arg0: List<JavaObject>?, _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceRightOrNull(_ arg0: List<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func runningFold(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func runningFoldIndexed(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func runningReduce(_ arg0: Iterable<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func scanIndexed(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func sumBy(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumByDouble(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumOfDouble(_ arg0: Iterable<JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumOfInt(_ arg0: Iterable<JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumOfLong(_ arg0: Iterable<JavaLong>?) -> Int64

  @JavaStaticMethod
  public func requireNoNulls(_ arg0: List<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func requireNoNulls(_ arg0: Iterable<JavaObject>?) -> Iterable<JavaObject>!

  @JavaStaticMethod
  public func joinTo(_ arg0: Iterable<JavaObject>?, _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1<JavaObject, CharSequence>?) -> Appendable!

  @JavaStaticMethod
  public func joinTo$default(_ arg0: Iterable?, _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1?, _ arg8: Int32, _ arg9: JavaObject?) -> Appendable!

  @JavaStaticMethod
  public func joinToString(_ arg0: Iterable<JavaObject>?, _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1<JavaObject, CharSequence>?) -> String

  @JavaStaticMethod
  public func asSequence(_ arg0: Iterable<JavaObject>?) -> Sequence<JavaObject>!

  @JavaStaticMethod
  public func averageOfByte(_ arg0: Iterable<JavaByte>?) -> Double

  @JavaStaticMethod
  public func averageOfShort(_ arg0: Iterable<JavaShort>?) -> Double

  @JavaStaticMethod
  public func averageOfInt(_ arg0: Iterable<JavaInteger>?) -> Double

  @JavaStaticMethod
  public func averageOfLong(_ arg0: Iterable<JavaLong>?) -> Double

  @JavaStaticMethod
  public func averageOfFloat(_ arg0: Iterable<JavaFloat>?) -> Double

  @JavaStaticMethod
  public func averageOfDouble(_ arg0: Iterable<JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumOfByte(_ arg0: Iterable<JavaByte>?) -> Int32

  @JavaStaticMethod
  public func sumOfShort(_ arg0: Iterable<JavaShort>?) -> Int32

  @JavaStaticMethod
  public func sumOfFloat(_ arg0: Iterable<JavaFloat>?) -> Float

  @JavaStaticMethod
  public func chunked(_ arg0: Iterable<JavaObject>?, _ arg1: Int32, _ arg2: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func chunked(_ arg0: Iterable<JavaObject>?, _ arg1: Int32) -> List<List<JavaObject>>!

  @JavaStaticMethod
  public func windowed(_ arg0: Iterable<JavaObject>?, _ arg1: Int32, _ arg2: Int32, _ arg3: Bool) -> List<List<JavaObject>>!

  @JavaStaticMethod
  public func windowed(_ arg0: Iterable<JavaObject>?, _ arg1: Int32, _ arg2: Int32, _ arg3: Bool, _ arg4: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func windowed$default(_ arg0: Iterable?, _ arg1: Int32, _ arg2: Int32, _ arg3: Bool, _ arg4: Function1?, _ arg5: Int32, _ arg6: JavaObject?) -> List!

  @JavaStaticMethod
  public func windowed$default(_ arg0: Iterable?, _ arg1: Int32, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> List!

  @JavaStaticMethod
  public func zipWithNext(_ arg0: Iterable<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zipWithNext(_ arg0: Iterable<JavaObject>?) -> List<Pair<JavaObject, JavaObject>>!

  @JavaStaticMethod
  public func elementAtOrElse(_ arg0: Iterable<JavaObject>?, _ arg1: Int32, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func elementAtOrNull(_ arg0: Iterable<JavaObject>?, _ arg1: Int32) -> JavaObject!

  @JavaStaticMethod
  public func getOrNull(_ arg0: List<JavaObject>?, _ arg1: Int32) -> JavaObject!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: Iterable<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: List<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: List<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: List<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func lastOrNull(_ arg0: List<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: List<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: Iterable<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: JavaCollection<JavaObject>?, _ arg1: Random?) -> JavaObject!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: Iterable<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: List<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func drop(_ arg0: Iterable<JavaObject>?, _ arg1: Int32) -> List<JavaObject>!

  @JavaStaticMethod
  public func takeLast(_ arg0: List<JavaObject>?, _ arg1: Int32) -> List<JavaObject>!

  @JavaStaticMethod
  public func dropLast(_ arg0: List<JavaObject>?, _ arg1: Int32) -> List<JavaObject>!

  @JavaStaticMethod
  public func dropLastWhile(_ arg0: List<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterIndexed(_ arg0: Iterable<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterIndexedTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterIsInstance(_ arg0: Iterable<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterIsInstanceTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNot(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterNotNull(_ arg0: Iterable<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterNotNullTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func takeLastWhile(_ arg0: List<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: Iterable<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: JavaCollection<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func sortBy(_ arg0: List<JavaObject>?, _ arg1: Function1<JavaObject, Comparable<JavaObject>>?)

  @JavaStaticMethod
  public func sortByDescending(_ arg0: List<JavaObject>?, _ arg1: Function1<JavaObject, Comparable<JavaObject>>?)

  @JavaStaticMethod
  public func sortDescending(_ arg0: List<Comparable<JavaObject>>?)

  @JavaStaticMethod
  public func sortedBy(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Comparable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func sortedByDescending(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Comparable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func sortedDescending(_ arg0: Iterable<Comparable<JavaObject>>?) -> List<Comparable<JavaObject>>!

  @JavaStaticMethod
  public func toBooleanArray(_ arg0: JavaCollection<JavaBoolean>?) -> [Bool]

  @JavaStaticMethod
  public func toDoubleArray(_ arg0: JavaCollection<JavaDouble>?) -> [Double]

  @JavaStaticMethod
  public func toFloatArray(_ arg0: JavaCollection<JavaFloat>?) -> [Float]

  @JavaStaticMethod
  public func toShortArray(_ arg0: JavaCollection<JavaShort>?) -> [Int16]

  @JavaStaticMethod
  public func associate(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: Iterable<JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: Iterable<JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateTo(_ arg0: Iterable<JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateWith(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateWithTo(_ arg0: Iterable<JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func toHashSet(_ arg0: Iterable<JavaObject>?) -> HashSet<JavaObject>!

  @JavaStaticMethod
  public func flatMapSequence(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Sequence<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func flatMapTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Iterable<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func flatMapSequenceTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Sequence<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func groupBy(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: Iterable<JavaObject>?, _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: Iterable<JavaObject>?, _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func mapIndexed(_ arg0: Iterable<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedNotNull(_ arg0: Iterable<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapNotNull(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapNotNullTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toMutableSet(_ arg0: Iterable<JavaObject>?) -> JavaSet<JavaObject>!

  @JavaStaticMethod
  public func distinctBy(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func intersect(_ arg0: Iterable<JavaObject>?, _ arg1: Iterable<JavaObject>?) -> JavaSet<JavaObject>!

  @JavaStaticMethod
  public func fold(_ arg0: Iterable<JavaObject>?, _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.Pair")
open class Pair<A: AnyJavaObject, B: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, _ arg1: JavaObject?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func component1() -> JavaObject!

  @JavaMethod
  open func component2() -> JavaObject!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func copy(_ arg0: JavaObject?, _ arg1: JavaObject?) -> Pair<JavaObject, JavaObject>!

  @JavaMethod
  open func getFirst() -> JavaObject!

  @JavaMethod
  open func getSecond() -> JavaObject!
}
extension JavaClass {
  @JavaStaticMethod
  public func copy$default<A: AnyJavaObject, B: AnyJavaObject>(_ arg0: Pair?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: Int32, _ arg4: JavaObject?) -> Pair! where ObjectType == Pair<A, B>
}

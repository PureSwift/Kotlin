// Auto-generated by Java-to-Swift wrapper generator.
import JavaIO
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.io.FilePathComponents")
open class FilePathComponents: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, _ arg1: List<File>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func component1() -> File!

  @JavaMethod
  open func component2() -> List<File>!

  @JavaMethod
  open func getSegments() -> List<File>!

  @JavaMethod
  open func getRootName() -> String

  @JavaMethod
  open func isRooted() -> Bool

  @JavaMethod
  open func subPath(_ arg0: Int32, _ arg1: Int32) -> File!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func copy(_ arg0: File?, _ arg1: List<File>?) -> FilePathComponents!

  @JavaMethod
  open func getRoot() -> File!

  @JavaMethod
  open func getSize() -> Int32
}
extension JavaClass<FilePathComponents> {
  @JavaStaticMethod
  public func copy$default(_ arg0: FilePathComponents?, _ arg1: File?, _ arg2: List?, _ arg3: Int32, _ arg4: JavaObject?) -> FilePathComponents!
}

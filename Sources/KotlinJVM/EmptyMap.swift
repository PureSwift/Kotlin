// Auto-generated by Java-to-Swift wrapper generator.
import JavaIO
import JavaKit
import JavaKitCollection
import JavaRuntime
import JavaUtil

@JavaClass("kotlin.collections.EmptyMap", implements: Map.self, Serializable.self, KMappedMarker.self)
open class EmptyMap: JavaObject {
  @JavaMethod
  open func remove(_ arg0: JavaObject?) -> JavaVoid!

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open func get(_ arg0: JavaObject?) -> JavaVoid!

  @JavaMethod
  open func put(_ arg0: JavaObject?, _ arg1: JavaVoid?) -> JavaVoid!

  @JavaMethod
  open func put(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func values() -> JavaCollection<JavaObject>

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func clear()

  @JavaMethod
  open func isEmpty() -> Bool

  @JavaMethod
  open func entrySet() -> JavaSet<Map.Entry>!

  @JavaMethod
  open func putAll(_ arg0: Map?)

  @JavaMethod
  open func keySet() -> JavaSet<JavaObject>!

  @JavaMethod
  open func containsValue(_ arg0: JavaVoid?) -> Bool

  @JavaMethod
  open func containsValue(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func containsKey(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func getSize() -> Int32

  @JavaMethod
  open func getEntries() -> JavaSet<Map.Entry>!

  @JavaMethod
  open func getKeys() -> JavaSet<JavaObject>!

  @JavaMethod
  open func getValues() -> JavaCollection<JavaObject>
}
extension JavaClass<EmptyMap> {
  @JavaStaticField(isFinal: true)
  public var INSTANCE: EmptyMap!
}

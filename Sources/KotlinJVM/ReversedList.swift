// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.collections.ReversedList")
open class ReversedList<T: AnyJavaObject>: AbstractMutableList {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: List<JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func removeAt(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func get(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func clear()

  @JavaMethod
  open override func add(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open func iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  open override func set(_ arg0: Int32, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open override func getSize() -> Int32

  @JavaMethod
  open func listIterator() -> ListIterator<JavaObject>!

  @JavaMethod
  open func listIterator(_ arg0: Int32) -> ListIterator<JavaObject>!
}
extension JavaClass {
  @JavaStaticMethod
  public func access$getDelegate$p<T: AnyJavaObject>(_ arg0: ReversedList?) -> List! where ObjectType == ReversedList<T>
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension HexFormat {
  @JavaClass("kotlin.text.HexFormat$NumberHexFormat")
  open class NumberHexFormat: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, _ arg2: Bool, _ arg3: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getPrefix() -> String

  @JavaMethod
  open func getSuffix() -> String

  @JavaMethod
  open func getMinLength() -> Int32

  @JavaMethod
  open func getRemoveLeadingZeros() -> Bool

  @JavaMethod
  open func isDigitsOnly$kotlin_stdlib() -> Bool

  @JavaMethod
  open func getIgnoreCase$kotlin_stdlib() -> Bool

  @JavaMethod
  open func isDigitsOnlyAndNoPadding$kotlin_stdlib() -> Bool

  @JavaMethod
  open override func toString() -> String
  }
}
extension JavaClass<HexFormat.NumberHexFormat> {
  @JavaStaticField(isFinal: true)
  public var Companion: HexFormat.NumberHexFormat.Companion!

  @JavaStaticMethod
  public func getMinLength$annotations()

  @JavaStaticMethod
  public func access$getDefault$cp() -> HexFormat.NumberHexFormat!
}

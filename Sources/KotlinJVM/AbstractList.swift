// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.collections.AbstractList", implements: List<JavaObject>.self, KMappedMarker.self)
open class AbstractList<E: AnyJavaObject>: AbstractCollection {
  @JavaMethod
  open func remove(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open func get(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func indexOf(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func lastIndexOf(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func add(_ arg0: Int32, _ arg1: JavaObject?)

  @JavaMethod
  open func subList(_ arg0: Int32, _ arg1: Int32) -> List<JavaObject>!

  @JavaMethod
  open override func iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  open func addAll(_ arg0: Int32, _ arg1: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func set(_ arg0: Int32, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open override func getSize() -> Int32

  @JavaMethod
  open func listIterator(_ arg0: Int32) -> ListIterator<JavaObject>!

  @JavaMethod
  open func listIterator() -> ListIterator<JavaObject>!
}
extension JavaClass {
  @JavaStaticField(isFinal: true)
  public var Companion: AbstractList.Companion!
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaLang
import JavaRuntime

extension RequiresOptIn {
  @JavaClass("kotlin.RequiresOptIn$Level")
  open class Level: Enum {
    public enum LevelCases: Equatable {
      case WARNING
  case ERROR
    }

    public var enumValue: LevelCases! {
      let classObj = self.javaClass
      if self.equals(classObj.WARNING?.as(JavaObject.self)) {
        return LevelCases.WARNING
  } else if self.equals(classObj.ERROR?.as(JavaObject.self)) {
        return LevelCases.ERROR
  } else {
        return nil
      }
    }

  public convenience init(_ enumValue: LevelCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<Level>(environment: _environment)
    switch enumValue {
      case .WARNING:
        if let WARNING = classObj.WARNING {
          self.init(javaHolder: WARNING.javaHolder)
        } else {
          fatalError("Enum value WARNING was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .ERROR:
        if let ERROR = classObj.ERROR {
          self.init(javaHolder: ERROR.javaHolder)
        } else {
          fatalError("Enum value ERROR was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
  }
}
extension RequiresOptIn.Level {
  @JavaClass("java.lang.Enum$EnumDesc")
  open class EnumDesc<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  open override func toString() -> String
  }
}
extension JavaClass<RequiresOptIn.Level> {
  @JavaStaticField(isFinal: true)
  public var WARNING: RequiresOptIn.Level!

  @JavaStaticField(isFinal: true)
  public var ERROR: RequiresOptIn.Level!

  @JavaStaticMethod
  public func values() -> [RequiresOptIn.Level?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> RequiresOptIn.Level!

  @JavaStaticMethod
  public func getEntries() -> EnumEntries<RequiresOptIn.Level>!
}

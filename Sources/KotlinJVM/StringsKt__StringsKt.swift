// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.text.StringsKt__StringsKt")
open class StringsKt__StringsKt: StringsKt__StringsJVMKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<StringsKt__StringsKt> {
  @JavaStaticMethod
  public func trimStart(_ arg0: String, _ arg1: Function1<JavaObject, JavaBoolean>?) -> String

  @JavaStaticMethod
  public func trimStart(_ arg0: CharSequence?) -> CharSequence!

  @JavaStaticMethod
  public func trimStart(_ arg0: CharSequence?, _ arg1: [UInt16]) -> CharSequence!

  @JavaStaticMethod
  public func trimStart(_ arg0: String, _ arg1: [UInt16]) -> String

  @JavaStaticMethod
  public func trimStart(_ arg0: CharSequence?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> CharSequence!

  @JavaStaticMethod
  public func trimEnd(_ arg0: CharSequence?, _ arg1: [UInt16]) -> CharSequence!

  @JavaStaticMethod
  public func trimEnd(_ arg0: String, _ arg1: [UInt16]) -> String

  @JavaStaticMethod
  public func trimEnd(_ arg0: CharSequence?) -> CharSequence!

  @JavaStaticMethod
  public func trimEnd(_ arg0: String, _ arg1: Function1<JavaObject, JavaBoolean>?) -> String

  @JavaStaticMethod
  public func trimEnd(_ arg0: CharSequence?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> CharSequence!

  @JavaStaticMethod
  public func padStart(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: UInt16) -> CharSequence!

  @JavaStaticMethod
  public func padStart(_ arg0: String, _ arg1: Int32, _ arg2: UInt16) -> String

  @JavaStaticMethod
  public func padStart$default(_ arg0: String, _ arg1: Int32, _ arg2: UInt16, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func padStart$default(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: UInt16, _ arg3: Int32, _ arg4: JavaObject?) -> CharSequence!

  @JavaStaticMethod
  public func padEnd(_ arg0: String, _ arg1: Int32, _ arg2: UInt16) -> String

  @JavaStaticMethod
  public func padEnd(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: UInt16) -> CharSequence!

  @JavaStaticMethod
  public func padEnd$default(_ arg0: String, _ arg1: Int32, _ arg2: UInt16, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func padEnd$default(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: UInt16, _ arg3: Int32, _ arg4: JavaObject?) -> CharSequence!

  @JavaStaticMethod
  public func hasSurrogatePairAt(_ arg0: CharSequence?, _ arg1: Int32) -> Bool

  @JavaStaticMethod
  public func substringBefore(_ arg0: String, _ arg1: String, _ arg2: String) -> String

  @JavaStaticMethod
  public func substringBefore(_ arg0: String, _ arg1: UInt16, _ arg2: String) -> String

  @JavaStaticMethod
  public func substringBefore$default(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func substringBefore$default(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func substringAfter(_ arg0: String, _ arg1: UInt16, _ arg2: String) -> String

  @JavaStaticMethod
  public func substringAfter(_ arg0: String, _ arg1: String, _ arg2: String) -> String

  @JavaStaticMethod
  public func substringAfter$default(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func substringAfter$default(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func substringBeforeLast(_ arg0: String, _ arg1: UInt16, _ arg2: String) -> String

  @JavaStaticMethod
  public func substringBeforeLast(_ arg0: String, _ arg1: String, _ arg2: String) -> String

  @JavaStaticMethod
  public func lastIndexOf$default(_ arg0: CharSequence?, _ arg1: String, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func lastIndexOf$default(_ arg0: CharSequence?, _ arg1: UInt16, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func substringAfterLast$default(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func substringAfterLast$default(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func replaceRange(_ arg0: CharSequence?, _ arg1: IntRange?, _ arg2: CharSequence?) -> CharSequence!

  @JavaStaticMethod
  public func replaceRange(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: CharSequence?) -> CharSequence!

  @JavaStaticMethod
  public func removePrefix(_ arg0: String, _ arg1: CharSequence?) -> String

  @JavaStaticMethod
  public func removePrefix(_ arg0: CharSequence?, _ arg1: CharSequence?) -> CharSequence!

  @JavaStaticMethod
  public func removeSuffix(_ arg0: String, _ arg1: CharSequence?) -> String

  @JavaStaticMethod
  public func removeSuffix(_ arg0: CharSequence?, _ arg1: CharSequence?) -> CharSequence!

  @JavaStaticMethod
  public func removeSurrounding(_ arg0: String, _ arg1: CharSequence?) -> String

  @JavaStaticMethod
  public func removeSurrounding(_ arg0: CharSequence?, _ arg1: CharSequence?) -> CharSequence!

  @JavaStaticMethod
  public func removeSurrounding(_ arg0: String, _ arg1: CharSequence?, _ arg2: CharSequence?) -> String

  @JavaStaticMethod
  public func removeSurrounding(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: CharSequence?) -> CharSequence!

  @JavaStaticMethod
  public func replaceBefore(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: String) -> String

  @JavaStaticMethod
  public func replaceBefore(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: String) -> String

  @JavaStaticMethod
  public func replaceBefore$default(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: String, _ arg4: Int32, _ arg5: JavaObject?) -> String

  @JavaStaticMethod
  public func replaceBefore$default(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: String, _ arg4: Int32, _ arg5: JavaObject?) -> String

  @JavaStaticMethod
  public func replaceAfter(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: String) -> String

  @JavaStaticMethod
  public func replaceAfter(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: String) -> String

  @JavaStaticMethod
  public func replaceAfter$default(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: String, _ arg4: Int32, _ arg5: JavaObject?) -> String

  @JavaStaticMethod
  public func replaceAfter$default(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: String, _ arg4: Int32, _ arg5: JavaObject?) -> String

  @JavaStaticMethod
  public func replaceAfterLast(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: String) -> String

  @JavaStaticMethod
  public func replaceAfterLast(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: String) -> String

  @JavaStaticMethod
  public func replaceAfterLast$default(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: String, _ arg4: Int32, _ arg5: JavaObject?) -> String

  @JavaStaticMethod
  public func replaceAfterLast$default(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: String, _ arg4: Int32, _ arg5: JavaObject?) -> String

  @JavaStaticMethod
  public func replaceBeforeLast(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: String) -> String

  @JavaStaticMethod
  public func replaceBeforeLast(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: String) -> String

  @JavaStaticMethod
  public func replaceBeforeLast$default(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: String, _ arg4: Int32, _ arg5: JavaObject?) -> String

  @JavaStaticMethod
  public func replaceBeforeLast$default(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: String, _ arg4: Int32, _ arg5: JavaObject?) -> String

  @JavaStaticMethod
  public func regionMatchesImpl(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: CharSequence?, _ arg3: Int32, _ arg4: Int32, _ arg5: Bool) -> Bool

  @JavaStaticMethod
  public func commonPrefixWith(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Bool) -> String

  @JavaStaticMethod
  public func commonPrefixWith$default(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Bool, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func commonSuffixWith(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Bool) -> String

  @JavaStaticMethod
  public func commonSuffixWith$default(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Bool, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func indexOfAny(_ arg0: CharSequence?, _ arg1: JavaCollection<JavaString>?, _ arg2: Int32, _ arg3: Bool) -> Int32

  @JavaStaticMethod
  public func indexOfAny(_ arg0: CharSequence?, _ arg1: [UInt16], _ arg2: Int32, _ arg3: Bool) -> Int32

  @JavaStaticMethod
  public func indexOfAny$default(_ arg0: CharSequence?, _ arg1: JavaCollection?, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func indexOfAny$default(_ arg0: CharSequence?, _ arg1: [UInt16], _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func lastIndexOfAny(_ arg0: CharSequence?, _ arg1: [UInt16], _ arg2: Int32, _ arg3: Bool) -> Int32

  @JavaStaticMethod
  public func lastIndexOfAny(_ arg0: CharSequence?, _ arg1: JavaCollection<JavaString>?, _ arg2: Int32, _ arg3: Bool) -> Int32

  @JavaStaticMethod
  public func lastIndexOfAny$default(_ arg0: CharSequence?, _ arg1: JavaCollection?, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func lastIndexOfAny$default(_ arg0: CharSequence?, _ arg1: [UInt16], _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func findAnyOf(_ arg0: CharSequence?, _ arg1: JavaCollection<JavaString>?, _ arg2: Int32, _ arg3: Bool) -> Pair<JavaInteger, JavaString>!

  @JavaStaticMethod
  public func findAnyOf$default(_ arg0: CharSequence?, _ arg1: JavaCollection?, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Pair!

  @JavaStaticMethod
  public func findLastAnyOf(_ arg0: CharSequence?, _ arg1: JavaCollection<JavaString>?, _ arg2: Int32, _ arg3: Bool) -> Pair<JavaInteger, JavaString>!

  @JavaStaticMethod
  public func findLastAnyOf$default(_ arg0: CharSequence?, _ arg1: JavaCollection?, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Pair!

  @JavaStaticMethod
  public func contains$default(_ arg0: CharSequence?, _ arg1: UInt16, _ arg2: Bool, _ arg3: Int32, _ arg4: JavaObject?) -> Bool

  @JavaStaticMethod
  public func contains$default(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Bool, _ arg3: Int32, _ arg4: JavaObject?) -> Bool

  @JavaStaticMethod
  public func requireNonNegativeLimit(_ arg0: Int32)

  @JavaStaticMethod
  public func splitToSequence(_ arg0: CharSequence?, _ arg1: [String], _ arg2: Bool, _ arg3: Int32) -> Sequence<JavaString>!

  @JavaStaticMethod
  public func splitToSequence(_ arg0: CharSequence?, _ arg1: [UInt16], _ arg2: Bool, _ arg3: Int32) -> Sequence<JavaString>!

  @JavaStaticMethod
  public func splitToSequence$default(_ arg0: CharSequence?, _ arg1: [String], _ arg2: Bool, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Sequence!

  @JavaStaticMethod
  public func splitToSequence$default(_ arg0: CharSequence?, _ arg1: [UInt16], _ arg2: Bool, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Sequence!

  @JavaStaticMethod
  public func contentEqualsIgnoreCaseImpl(_ arg0: CharSequence?, _ arg1: CharSequence?) -> Bool

  @JavaStaticMethod
  public func contentEqualsImpl(_ arg0: CharSequence?, _ arg1: CharSequence?) -> Bool

  @JavaStaticMethod
  public func toBooleanStrict(_ arg0: String) -> Bool

  @JavaStaticMethod
  public func toBooleanStrictOrNull(_ arg0: String) -> JavaBoolean!

  @JavaStaticMethod
  public func access$findAnyOf(_ arg0: CharSequence?, _ arg1: JavaCollection?, _ arg2: Int32, _ arg3: Bool, _ arg4: Bool) -> Pair!

  @JavaStaticMethod
  public func substringAfterLast(_ arg0: String, _ arg1: String, _ arg2: String) -> String

  @JavaStaticMethod
  public func substringAfterLast(_ arg0: String, _ arg1: UInt16, _ arg2: String) -> String

  @JavaStaticMethod
  public func substringBeforeLast$default(_ arg0: String, _ arg1: UInt16, _ arg2: String, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func substringBeforeLast$default(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func endsWith$default(_ arg0: CharSequence?, _ arg1: UInt16, _ arg2: Bool, _ arg3: Int32, _ arg4: JavaObject?) -> Bool

  @JavaStaticMethod
  public func endsWith$default(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Bool, _ arg3: Int32, _ arg4: JavaObject?) -> Bool

  @JavaStaticMethod
  public func lineSequence(_ arg0: CharSequence?) -> Sequence<JavaString>!

  @JavaStaticMethod
  public func indexOf$default(_ arg0: CharSequence?, _ arg1: String, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func indexOf$default(_ arg0: CharSequence?, _ arg1: UInt16, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func split$default(_ arg0: CharSequence?, _ arg1: [UInt16], _ arg2: Bool, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> List!

  @JavaStaticMethod
  public func split$default(_ arg0: CharSequence?, _ arg1: [String], _ arg2: Bool, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> List!

  @JavaStaticMethod
  public func startsWith$default(_ arg0: CharSequence?, _ arg1: UInt16, _ arg2: Bool, _ arg3: Int32, _ arg4: JavaObject?) -> Bool

  @JavaStaticMethod
  public func startsWith$default(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Bool, _ arg3: Int32, _ arg4: JavaObject?) -> Bool

  @JavaStaticMethod
  public func startsWith$default(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Int32, _ arg3: Bool, _ arg4: Int32, _ arg5: JavaObject?) -> Bool

  @JavaStaticMethod
  public func getIndices(_ arg0: CharSequence?) -> IntRange!

  @JavaStaticMethod
  public func getLastIndex(_ arg0: CharSequence?) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: CharSequence?, _ arg1: String, _ arg2: Int32, _ arg3: Bool) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: CharSequence?, _ arg1: UInt16, _ arg2: Int32, _ arg3: Bool) -> Int32

  @JavaStaticMethod
  public func startsWith(_ arg0: CharSequence?, _ arg1: UInt16, _ arg2: Bool) -> Bool

  @JavaStaticMethod
  public func startsWith(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Bool) -> Bool

  @JavaStaticMethod
  public func startsWith(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Int32, _ arg3: Bool) -> Bool

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: CharSequence?, _ arg1: UInt16, _ arg2: Int32, _ arg3: Bool) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: CharSequence?, _ arg1: String, _ arg2: Int32, _ arg3: Bool) -> Int32

  @JavaStaticMethod
  public func substring(_ arg0: String, _ arg1: IntRange?) -> String

  @JavaStaticMethod
  public func substring(_ arg0: CharSequence?, _ arg1: IntRange?) -> String

  @JavaStaticMethod
  public func split(_ arg0: CharSequence?, _ arg1: [String], _ arg2: Bool, _ arg3: Int32) -> List<JavaString>!

  @JavaStaticMethod
  public func split(_ arg0: CharSequence?, _ arg1: [UInt16], _ arg2: Bool, _ arg3: Int32) -> List<JavaString>!

  @JavaStaticMethod
  public func iterator(_ arg0: CharSequence?) -> CharIterator!

  @JavaStaticMethod
  public func trim(_ arg0: String, _ arg1: Function1<JavaObject, JavaBoolean>?) -> String

  @JavaStaticMethod
  public func trim(_ arg0: CharSequence?, _ arg1: [UInt16]) -> CharSequence!

  @JavaStaticMethod
  public func trim(_ arg0: String, _ arg1: [UInt16]) -> String

  @JavaStaticMethod
  public func trim(_ arg0: CharSequence?) -> CharSequence!

  @JavaStaticMethod
  public func trim(_ arg0: CharSequence?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> CharSequence!

  @JavaStaticMethod
  public func lines(_ arg0: CharSequence?) -> List<JavaString>!

  @JavaStaticMethod
  public func isBlank(_ arg0: CharSequence?) -> Bool

  @JavaStaticMethod
  public func endsWith(_ arg0: CharSequence?, _ arg1: UInt16, _ arg2: Bool) -> Bool

  @JavaStaticMethod
  public func endsWith(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Bool) -> Bool

  @JavaStaticMethod
  public func subSequence(_ arg0: CharSequence?, _ arg1: IntRange?) -> CharSequence!

  @JavaStaticMethod
  public func contains(_ arg0: CharSequence?, _ arg1: UInt16, _ arg2: Bool) -> Bool

  @JavaStaticMethod
  public func contains(_ arg0: CharSequence?, _ arg1: CharSequence?, _ arg2: Bool) -> Bool

  @JavaStaticMethod
  public func removeRange(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) -> CharSequence!

  @JavaStaticMethod
  public func removeRange(_ arg0: CharSequence?, _ arg1: IntRange?) -> CharSequence!
}

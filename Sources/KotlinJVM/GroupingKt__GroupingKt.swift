// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime
import JavaUtil

@JavaClass("kotlin.collections.GroupingKt__GroupingKt")
open class GroupingKt__GroupingKt: GroupingKt__GroupingJVMKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<GroupingKt__GroupingKt> {
  @JavaStaticMethod
  public func fold(_ arg0: Grouping<JavaObject, JavaObject>?, _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func fold(_ arg0: Grouping<JavaObject, JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaObject>?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func aggregate(_ arg0: Grouping<JavaObject, JavaObject>?, _ arg1: Function4<JavaObject, JavaObject, JavaObject, JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func aggregateTo(_ arg0: Grouping<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function4<JavaObject, JavaObject, JavaObject, JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func foldTo(_ arg0: Grouping<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: JavaObject?, _ arg3: Function2<JavaObject, JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func foldTo(_ arg0: Grouping<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?, _ arg3: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func reduceTo(_ arg0: Grouping<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func eachCountTo(_ arg0: Grouping<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaInteger>?) -> Map<JavaObject, JavaInteger>!

  @JavaStaticMethod
  public func reduce(_ arg0: Grouping<JavaObject, JavaObject>?, _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!
}

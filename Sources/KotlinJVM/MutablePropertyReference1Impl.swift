// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.jvm.internal.MutablePropertyReference1Impl")
open class MutablePropertyReference1Impl: MutablePropertyReference1 {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, _ arg1: JavaClass?, _ arg2: String, _ arg3: String, _ arg4: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaClass?, _ arg1: String, _ arg2: String, _ arg3: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: KDeclarationContainer?, _ arg1: String, _ arg2: String, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func get(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func set(_ arg0: JavaObject?, _ arg1: JavaObject?)
}
extension JavaClass<MutablePropertyReference1Impl> {
  @JavaStaticField(isFinal: true)
  public var NO_RECEIVER: JavaObject!
}

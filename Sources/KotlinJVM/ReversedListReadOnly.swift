// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.collections.ReversedListReadOnly")
open class ReversedListReadOnly<T: AnyJavaObject>: AbstractList {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: List<JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func get(_ arg0: Int32) -> JavaObject!

  @JavaMethod
  open override func iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  open override func getSize() -> Int32

  @JavaMethod
  open override func listIterator(_ arg0: Int32) -> ListIterator<JavaObject>!

  @JavaMethod
  open override func listIterator() -> ListIterator<JavaObject>!
}
extension JavaClass {
  @JavaStaticField(isFinal: true)
  public var Companion: AbstractList.Companion!

  @JavaStaticMethod
  public func access$getDelegate$p<T: AnyJavaObject>(_ arg0: ReversedListReadOnly?) -> List! where ObjectType == ReversedListReadOnly<T>
}

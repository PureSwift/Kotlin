// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension Base64 {
  @JavaClass("kotlin.io.encoding.Base64$Default")
  open class Default: Base64 {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: DefaultConstructorMarker?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getMimeLineSeparatorSymbols$kotlin_stdlib() -> [Int8]

  @JavaMethod
  open func getUrlSafe() -> Base64!

  @JavaMethod
  open func getMime() -> Base64!
  }
}
extension JavaClass<Base64.Default> {
  @JavaStaticField(isFinal: true)
  public var Default: Base64.Default!

  @JavaStaticField(isFinal: true)
  public var bytesPerGroup: Int32

  @JavaStaticField(isFinal: true)
  public var symbolsPerGroup: Int32

  @JavaStaticField(isFinal: true)
  public var padSymbol: Int8

  @JavaStaticField(isFinal: true)
  public var mimeLineLength: Int32
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt")
open class IntrinsicsKt__IntrinsicsJvmKt: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<IntrinsicsKt__IntrinsicsJvmKt> {
  @JavaStaticMethod
  public func intercepted(_ arg0: Continuation<JavaObject>?) -> Continuation<JavaObject>!

  @JavaStaticMethod
  public func createCoroutineUnintercepted(_ arg0: Function2<JavaObject, JavaObject, JavaObject>?, _ arg1: JavaObject?, _ arg2: Continuation<JavaObject>?) -> Continuation<Unit>!

  @JavaStaticMethod
  public func createCoroutineUnintercepted(_ arg0: Function1<JavaObject, JavaObject>?, _ arg1: Continuation<JavaObject>?) -> Continuation<Unit>!

  @JavaStaticMethod
  public func wrapWithContinuationImpl(_ arg0: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: Continuation<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func wrapWithContinuationImpl(_ arg0: Function2<JavaObject, JavaObject, JavaObject>?, _ arg1: JavaObject?, _ arg2: Continuation<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func wrapWithContinuationImpl(_ arg0: Function1<JavaObject, JavaObject>?, _ arg1: Continuation<JavaObject>?) -> JavaObject!
}

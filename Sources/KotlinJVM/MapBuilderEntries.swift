// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime
import JavaUtil

@JavaClass("kotlin.collections.builders.MapBuilderEntries")
open class MapBuilderEntries<K: AnyJavaObject, V: AnyJavaObject>: AbstractMapBuilderEntrySet {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: MapBuilder<JavaObject, JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func remove(_ arg0: Map.Entry?) -> Bool

  @JavaMethod
  open func clear()

  @JavaMethod
  open func isEmpty() -> Bool

  @JavaMethod
  open func add(_ arg0: Map.Entry<JavaObject, JavaObject>?) -> Bool

  @JavaMethod
  open override func add(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func iterator() -> JavaIterator<Map.Entry<JavaObject, JavaObject>>!

  @JavaMethod
  open func addAll(_ arg0: JavaCollection<Map.Entry<JavaObject, JavaObject>>?) -> Bool

  @JavaMethod
  open override func getSize() -> Int32

  @JavaMethod
  open func removeAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func retainAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func containsAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func getBacking() -> MapBuilder<JavaObject, JavaObject>!

  @JavaMethod
  open override func containsEntry(_ arg0: Map.Entry<JavaObject, JavaObject>?) -> Bool
}

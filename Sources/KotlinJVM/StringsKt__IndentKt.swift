// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.text.StringsKt__IndentKt")
open class StringsKt__IndentKt: StringsKt__AppendableKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<StringsKt__IndentKt> {
  @JavaStaticMethod
  public func trimMargin(_ arg0: String, _ arg1: String) -> String

  @JavaStaticMethod
  public func trimMargin$default(_ arg0: String, _ arg1: String, _ arg2: Int32, _ arg3: JavaObject?) -> String

  @JavaStaticMethod
  public func trimIndent(_ arg0: String) -> String

  @JavaStaticMethod
  public func replaceIndent(_ arg0: String, _ arg1: String) -> String

  @JavaStaticMethod
  public func prependIndent(_ arg0: String, _ arg1: String) -> String

  @JavaStaticMethod
  public func replaceIndentByMargin(_ arg0: String, _ arg1: String, _ arg2: String) -> String

  @JavaStaticMethod
  public func replaceIndentByMargin$default(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: Int32, _ arg4: JavaObject?) -> String

  @JavaStaticMethod
  public func replaceIndent$default(_ arg0: String, _ arg1: String, _ arg2: Int32, _ arg3: JavaObject?) -> String

  @JavaStaticMethod
  public func prependIndent$default(_ arg0: String, _ arg1: String, _ arg2: Int32, _ arg3: JavaObject?) -> String
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.text.HexExtensionsKt")
open class HexExtensionsKt: JavaObject {

}
extension JavaClass<HexExtensionsKt> {
  @JavaStaticMethod
  public func hexToLong$default(_ arg0: String, _ arg1: HexFormat?, _ arg2: Int32, _ arg3: JavaObject?) -> Int64

  @JavaStaticMethod
  public func hexToLong$default(_ arg0: String, _ arg1: Int32, _ arg2: Int32, _ arg3: HexFormat?, _ arg4: Int32, _ arg5: JavaObject?) -> Int64

  @JavaStaticMethod
  public func hexToByte$default(_ arg0: String, _ arg1: HexFormat?, _ arg2: Int32, _ arg3: JavaObject?) -> Int8

  @JavaStaticMethod
  public func hexToShort$default(_ arg0: String, _ arg1: HexFormat?, _ arg2: Int32, _ arg3: JavaObject?) -> Int16

  @JavaStaticMethod
  public func hexToInt$default(_ arg0: String, _ arg1: HexFormat?, _ arg2: Int32, _ arg3: JavaObject?) -> Int32

  @JavaStaticMethod
  public func hexToByteArray(_ arg0: String, _ arg1: HexFormat?) -> [Int8]

  @JavaStaticMethod
  public func hexToByte(_ arg0: String, _ arg1: HexFormat?) -> Int8

  @JavaStaticMethod
  public func hexToShort(_ arg0: String, _ arg1: HexFormat?) -> Int16

  @JavaStaticMethod
  public func hexToInt(_ arg0: String, _ arg1: HexFormat?) -> Int32

  @JavaStaticMethod
  public func hexToLong(_ arg0: String, _ arg1: HexFormat?) -> Int64

  @JavaStaticMethod
  public func hexToLong(_ arg0: String, _ arg1: Int32, _ arg2: Int32, _ arg3: HexFormat?) -> Int64

  @JavaStaticMethod
  public func toHexString$default(_ arg0: Int32, _ arg1: HexFormat?, _ arg2: Int32, _ arg3: JavaObject?) -> String

  @JavaStaticMethod
  public func toHexString$default(_ arg0: Int16, _ arg1: HexFormat?, _ arg2: Int32, _ arg3: JavaObject?) -> String

  @JavaStaticMethod
  public func toHexString$default(_ arg0: Int64, _ arg1: HexFormat?, _ arg2: Int32, _ arg3: JavaObject?) -> String

  @JavaStaticMethod
  public func toHexString$default(_ arg0: [Int8], _ arg1: HexFormat?, _ arg2: Int32, _ arg3: JavaObject?) -> String

  @JavaStaticMethod
  public func toHexString$default(_ arg0: Int8, _ arg1: HexFormat?, _ arg2: Int32, _ arg3: JavaObject?) -> String

  @JavaStaticMethod
  public func toHexString$default(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32, _ arg3: HexFormat?, _ arg4: Int32, _ arg5: JavaObject?) -> String

  @JavaStaticMethod
  public func formattedStringLength(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: Int32) -> Int32

  @JavaStaticMethod
  public func hexToByteArray$default(_ arg0: String, _ arg1: HexFormat?, _ arg2: Int32, _ arg3: JavaObject?) -> [Int8]

  @JavaStaticMethod
  public func parsedByteArrayMaxSize(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: Int32) -> Int32

  @JavaStaticMethod
  public func getBYTE_TO_LOWER_CASE_HEX_DIGITS() -> [Int32]

  @JavaStaticMethod
  public func getBYTE_TO_LOWER_CASE_HEX_DIGITS$annotations()

  @JavaStaticMethod
  public func toHexString(_ arg0: Int16, _ arg1: HexFormat?) -> String

  @JavaStaticMethod
  public func toHexString(_ arg0: Int8, _ arg1: HexFormat?) -> String

  @JavaStaticMethod
  public func toHexString(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32, _ arg3: HexFormat?) -> String

  @JavaStaticMethod
  public func toHexString(_ arg0: [Int8], _ arg1: HexFormat?) -> String

  @JavaStaticMethod
  public func toHexString(_ arg0: Int32, _ arg1: HexFormat?) -> String

  @JavaStaticMethod
  public func toHexString(_ arg0: Int64, _ arg1: HexFormat?) -> String
}

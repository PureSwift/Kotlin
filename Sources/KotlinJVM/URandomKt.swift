// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.random.URandomKt")
open class URandomKt: JavaObject {

}
extension JavaClass<URandomKt> {
  @JavaStaticMethod
  public func`checkUIntRangeBounds-J1ME1BU`(_ arg0: Int32, _ arg1: Int32)

@JavaStaticMethod
  public func`checkULongRangeBounds-eb3DHEI`(_ arg0: Int64, _ arg1: Int64)

@JavaStaticMethod
  public func`nextUBytes-Wvrt4B4$default`(_ arg0: Random?, _ arg1: [Int8], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> [Int8]

@JavaStaticMethod
  public func nextUInt(_ arg0: Random?) -> Int32

  @JavaStaticMethod
  public func nextUInt(_ arg0: Random?, _ arg1: UIntRange?) -> Int32

  @JavaStaticMethod
  public func`nextUInt-qCasIEU`(_ arg0: Random?, _ arg1: Int32) -> Int32

@JavaStaticMethod
  public func`nextUInt-a8DCA5k`(_ arg0: Random?, _ arg1: Int32, _ arg2: Int32) -> Int32

@JavaStaticMethod
  public func nextULong(_ arg0: Random?, _ arg1: ULongRange?) -> Int64

  @JavaStaticMethod
  public func nextULong(_ arg0: Random?) -> Int64

  @JavaStaticMethod
  public func`nextULong-V1Xi4fY`(_ arg0: Random?, _ arg1: Int64) -> Int64

@JavaStaticMethod
  public func`nextULong-jmpaW-c`(_ arg0: Random?, _ arg1: Int64, _ arg2: Int64) -> Int64

@JavaStaticMethod
  public func`nextUBytes-EVgfTAA`(_ arg0: Random?, _ arg1: [Int8]) -> [Int8]

@JavaStaticMethod
  public func nextUBytes(_ arg0: Random?, _ arg1: Int32) -> [Int8]

  @JavaStaticMethod
  public func `nextUBytes-Wvrt4B4`(_ arg0: Random?, _ arg1: [Int8], _ arg2: Int32, _ arg3: Int32) -> [Int8]
}

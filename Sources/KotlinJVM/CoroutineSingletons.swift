// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaLang
import JavaRuntime

@JavaClass("kotlin.coroutines.intrinsics.CoroutineSingletons")
open class CoroutineSingletons: Enum {
  public enum CoroutineSingletonsCases: Equatable {
    case COROUTINE_SUSPENDED
    case UNDECIDED
    case RESUMED
  }

  public var enumValue: CoroutineSingletonsCases! {
    let classObj = self.javaClass
    if self.equals(classObj.COROUTINE_SUSPENDED?.as(JavaObject.self)) {
      return CoroutineSingletonsCases.COROUTINE_SUSPENDED
    } else if self.equals(classObj.UNDECIDED?.as(JavaObject.self)) {
      return CoroutineSingletonsCases.UNDECIDED
    } else if self.equals(classObj.RESUMED?.as(JavaObject.self)) {
      return CoroutineSingletonsCases.RESUMED
    } else {
      return nil
    }
  }

  public convenience init(_ enumValue: CoroutineSingletonsCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<CoroutineSingletons>(environment: _environment)
    switch enumValue {
      case .COROUTINE_SUSPENDED:
        if let COROUTINE_SUSPENDED = classObj.COROUTINE_SUSPENDED {
          self.init(javaHolder: COROUTINE_SUSPENDED.javaHolder)
        } else {
          fatalError("Enum value COROUTINE_SUSPENDED was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .UNDECIDED:
        if let UNDECIDED = classObj.UNDECIDED {
          self.init(javaHolder: UNDECIDED.javaHolder)
        } else {
          fatalError("Enum value UNDECIDED was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .RESUMED:
        if let RESUMED = classObj.RESUMED {
          self.init(javaHolder: RESUMED.javaHolder)
        } else {
          fatalError("Enum value RESUMED was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
}
extension JavaClass<CoroutineSingletons> {
  @JavaStaticField(isFinal: true)
  public var COROUTINE_SUSPENDED: CoroutineSingletons!

  @JavaStaticField(isFinal: true)
  public var UNDECIDED: CoroutineSingletons!

  @JavaStaticField(isFinal: true)
  public var RESUMED: CoroutineSingletons!

  @JavaStaticMethod
  public func values() -> [CoroutineSingletons?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> CoroutineSingletons!

  @JavaStaticMethod
  public func getEntries() -> EnumEntries<CoroutineSingletons>!
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.collections.CollectionsKt__MutableCollectionsKt")
open class CollectionsKt__MutableCollectionsKt: CollectionsKt__MutableCollectionsJVMKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<CollectionsKt__MutableCollectionsKt> {
  @JavaStaticMethod
  public func removeFirstOrNull(_ arg0: List<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func removeLastOrNull(_ arg0: List<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func addAll(_ arg0: JavaCollection<JavaObject>?, _ arg1: Sequence<JavaObject>?) -> Bool

  @JavaStaticMethod
  public func addAll(_ arg0: JavaCollection<JavaObject>?, _ arg1: [JavaObject?]) -> Bool

  @JavaStaticMethod
  public func removeFirst(_ arg0: List<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func removeLast(_ arg0: List<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func removeAll(_ arg0: JavaCollection<JavaObject>?, _ arg1: Sequence<JavaObject>?) -> Bool

  @JavaStaticMethod
  public func removeAll(_ arg0: JavaCollection<JavaObject>?, _ arg1: [JavaObject?]) -> Bool

  @JavaStaticMethod
  public func removeAll(_ arg0: List<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func retainAll(_ arg0: JavaCollection<JavaObject>?, _ arg1: [JavaObject?]) -> Bool

  @JavaStaticMethod
  public func retainAll(_ arg0: List<JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func retainAll(_ arg0: JavaCollection<JavaObject>?, _ arg1: Sequence<JavaObject>?) -> Bool
}

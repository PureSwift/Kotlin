// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaLang
import JavaRuntime

@JavaClass("kotlin.time.Duration", implements: Comparable<Duration>.self)
open class Duration: JavaObject {
  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func compareTo(_ arg0: JavaObject?) -> Int32

  // @JavaMethod
//  open func`unbox-impl`() -> Int64

@JavaMethod
  open func `compareTo-LRDsOJo`(_ arg0: Int64) -> Int32
}
extension JavaClass<Duration> {
  @JavaStaticField(isFinal: true)
  public var Companion: Duration.Companion!

  @JavaStaticMethod
  public func getNanosecondsComponent$annotations()

@JavaStaticMethod
  public func getHoursComponent$annotations()

  @JavaStaticMethod
  public func getMinutesComponent$annotations()

  @JavaStaticMethod
  public func getSecondsComponent$annotations()

  @JavaStaticMethod
  public func getInDays$annotations()

  @JavaStaticMethod
  public func getInHours$annotations()

  @JavaStaticMethod
  public func getInMinutes$annotations()

  @JavaStaticMethod
  public func getInSeconds$annotations()

@JavaStaticMethod
  public func getInMilliseconds$annotations()

@JavaStaticMethod
  public func getInMicroseconds$annotations()

@JavaStaticMethod
  public func getInNanoseconds$annotations()

@JavaStaticMethod
  public func access$getINFINITE$cp() -> Int64

  @JavaStaticMethod
  public func access$getNEG_INFINITE$cp() -> Int64
}

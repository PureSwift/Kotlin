// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaLang
import JavaRuntime

@JavaClass("kotlin.reflect.KVisibility")
open class KVisibility: Enum {
  public enum KVisibilityCases: Equatable {
    case PUBLIC
    case PROTECTED
    case INTERNAL
    case PRIVATE
  }

  public var enumValue: KVisibilityCases! {
    let classObj = self.javaClass
    if self.equals(classObj.PUBLIC?.as(JavaObject.self)) {
      return KVisibilityCases.PUBLIC
    } else if self.equals(classObj.PROTECTED?.as(JavaObject.self)) {
      return KVisibilityCases.PROTECTED
    } else if self.equals(classObj.INTERNAL?.as(JavaObject.self)) {
      return KVisibilityCases.INTERNAL
    } else if self.equals(classObj.PRIVATE?.as(JavaObject.self)) {
      return KVisibilityCases.PRIVATE
    } else {
      return nil
    }
  }

  public convenience init(_ enumValue: KVisibilityCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<KVisibility>(environment: _environment)
    switch enumValue {
      case .PUBLIC:
        if let PUBLIC = classObj.PUBLIC {
          self.init(javaHolder: PUBLIC.javaHolder)
        } else {
          fatalError("Enum value PUBLIC was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .PROTECTED:
        if let PROTECTED = classObj.PROTECTED {
          self.init(javaHolder: PROTECTED.javaHolder)
        } else {
          fatalError("Enum value PROTECTED was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .INTERNAL:
        if let INTERNAL = classObj.INTERNAL {
          self.init(javaHolder: INTERNAL.javaHolder)
        } else {
          fatalError("Enum value INTERNAL was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .PRIVATE:
        if let PRIVATE = classObj.PRIVATE {
          self.init(javaHolder: PRIVATE.javaHolder)
        } else {
          fatalError("Enum value PRIVATE was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
}
extension JavaClass<KVisibility> {
  @JavaStaticField(isFinal: true)
  public var PUBLIC: KVisibility!

  @JavaStaticField(isFinal: true)
  public var PROTECTED: KVisibility!

  @JavaStaticField(isFinal: true)
  public var INTERNAL: KVisibility!

  @JavaStaticField(isFinal: true)
  public var PRIVATE: KVisibility!

  @JavaStaticMethod
  public func values() -> [KVisibility?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> KVisibility!

  @JavaStaticMethod
  public func getEntries() -> EnumEntries<KVisibility>!
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaLang
import JavaRuntime

@JavaClass("kotlin.UShort", implements: Comparable<UShort>.self)
open class UShort: JavaObject {
  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open func `unbox-impl`() -> Int16
}
extension JavaClass<UShort> {
  @JavaStaticField(isFinal: true)
  public var Companion: UShort.Companion!

  @JavaStaticField(isFinal: true)
  public var MIN_VALUE: Int16

  @JavaStaticField(isFinal: true)
  public var MAX_VALUE: Int16

  @JavaStaticField(isFinal: true)
  public var SIZE_BYTES: Int32

  @JavaStaticField(isFinal: true)
  public var SIZE_BITS: Int32

  @JavaStaticMethod
  public func getData$annotations()

}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.random.AbstractPlatformRandom")
open class AbstractPlatformRandom: Random {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func nextBits(_ arg0: Int32) -> Int32

  @JavaMethod
  open override func nextDouble() -> Double

  @JavaMethod
  open override func nextInt(_ arg0: Int32) -> Int32

  @JavaMethod
  open override func nextInt() -> Int32

  @JavaMethod
  open override func nextBytes(_ arg0: [Int8]) -> [Int8]

  @JavaMethod
  open override func nextLong() -> Int64

  @JavaMethod
  open override func nextBoolean() -> Bool

  @JavaMethod
  open override func nextFloat() -> Float
}
extension JavaClass<AbstractPlatformRandom> {
  @JavaStaticField(isFinal: true)
  public var Default: Random.Default!
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.text.DelimitedRangesSequence", implements: Sequence<IntRange>.self)
open class DelimitedRangesSequence: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32, _ arg3: Function2<JavaObject, JavaObject, Pair<JavaInteger, JavaInteger>>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func iterator() -> JavaIterator<IntRange>!
}
extension JavaClass<DelimitedRangesSequence> {
  @JavaStaticMethod
  public func access$getStartIndex$p(_ arg0: DelimitedRangesSequence?) -> Int32

  @JavaStaticMethod
  public func access$getGetNextMatch$p(_ arg0: DelimitedRangesSequence?) -> Function2!

  @JavaStaticMethod
  public func access$getInput$p(_ arg0: DelimitedRangesSequence?) -> CharSequence!

  @JavaStaticMethod
  public func access$getLimit$p(_ arg0: DelimitedRangesSequence?) -> Int32
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaKitIO
import JavaRuntime

@JavaClass("kotlin.io.path.PathsKt__PathRecursiveFunctionsKt")
open class PathsKt__PathRecursiveFunctionsKt: PathsKt__PathReadWriteKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<PathsKt__PathRecursiveFunctionsKt> {
  @JavaStaticMethod
  public func copyToRecursively$default(_ arg0: Path?, _ arg1: Path?, _ arg2: Function3?, _ arg3: Bool, _ arg4: Bool, _ arg5: Int32, _ arg6: JavaObject?) -> Path!

  @JavaStaticMethod
  public func copyToRecursively$default(_ arg0: Path?, _ arg1: Path?, _ arg2: Function3?, _ arg3: Bool, _ arg4: Function3?, _ arg5: Int32, _ arg6: JavaObject?) -> Path!

  @JavaStaticMethod
  public func copyToRecursively(_ arg0: Path?, _ arg1: Path?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, OnErrorResult>?, _ arg3: Bool, _ arg4: Bool) -> Path!

  @JavaStaticMethod
  public func copyToRecursively(_ arg0: Path?, _ arg1: Path?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, OnErrorResult>?, _ arg3: Bool, _ arg4: Function3<JavaObject, JavaObject, JavaObject, CopyActionResult>?) -> Path!

  @JavaStaticMethod
  public func checkFileName(_ arg0: Path?)

  @JavaStaticMethod
  public func deleteRecursively(_ arg0: Path?)
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaKitReflection
import JavaRuntime

@JavaInterface("kotlin.reflect.KClass", extends: KDeclarationContainer.self, KAnnotatedElement.self, KClassifier.self)
public struct KClass<T: AnyJavaObject> {
  @JavaMethod
  public func getVisibility() -> KVisibility!

  @JavaMethod
  public func getQualifiedName() -> String

  @JavaMethod
  public func getMembers() -> JavaCollection<KCallable<JavaObject>>!

  @JavaMethod
  public func getNestedClasses() -> JavaCollection<KClass<JavaObject>>!

  @JavaMethod
  public func getObjectInstance() -> JavaObject!

  @JavaMethod
  public func getSupertypes() -> List<KType>!

  @JavaMethod
  public func getSealedSubclasses() -> List<KClass<JavaObject>>!

  @JavaMethod
  public func isData() -> Bool

  @JavaMethod
  public func isInner() -> Bool

  @JavaMethod
  public func isCompanion() -> Bool

  @JavaMethod
  public func isFun() -> Bool

  @JavaMethod
  public func isValue() -> Bool

  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func isInstance(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func getTypeParameters() -> List<KTypeParameter>!

  @JavaMethod
  public func isFinal() -> Bool

  @JavaMethod
  public func isSealed() -> Bool

  @JavaMethod
  public func getSimpleName() -> String

  @JavaMethod
  public func isOpen() -> Bool

  @JavaMethod
  public func getConstructors() -> JavaCollection<KFunction<JavaObject>>!

  @JavaMethod
  public func isAbstract() -> Bool

  @JavaMethod
  public func getAnnotations() -> List<Annotation>!
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.TypeAliasesKt")
open class TypeAliasesKt: JavaObject {

}
extension JavaClass<TypeAliasesKt> {
  @JavaStaticMethod
  public func Exception$annotations()

  @JavaStaticMethod
  public func Error$annotations()

  @JavaStaticMethod
  public func RuntimeException$annotations()

  @JavaStaticMethod
  public func IllegalArgumentException$annotations()

  @JavaStaticMethod
  public func IllegalStateException$annotations()

  @JavaStaticMethod
  public func IndexOutOfBoundsException$annotations()

  @JavaStaticMethod
  public func UnsupportedOperationException$annotations()

  @JavaStaticMethod
  public func ArithmeticException$annotations()

  @JavaStaticMethod
  public func NumberFormatException$annotations()

  @JavaStaticMethod
  public func NullPointerException$annotations()

  @JavaStaticMethod
  public func ClassCastException$annotations()

  @JavaStaticMethod
  public func AssertionError$annotations()

  @JavaStaticMethod
  public func NoSuchElementException$annotations()

  @JavaStaticMethod
  public func ConcurrentModificationException$annotations()

  @JavaStaticMethod
  public func Comparator$annotations()
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension Random {
  @JavaClass("kotlin.random.Random$Default")
  open class Default: Random {
  @JavaMethod
  open override func nextBits(_ arg0: Int32) -> Int32

  @JavaMethod
  open override func nextDouble(_ arg0: Double, _ arg1: Double) -> Double

  @JavaMethod
  open override func nextDouble() -> Double

  @JavaMethod
  open override func nextDouble(_ arg0: Double) -> Double

  @JavaMethod
  open override func nextInt(_ arg0: Int32) -> Int32

  @JavaMethod
  open override func nextInt(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaMethod
  open override func nextInt() -> Int32

  @JavaMethod
  open override func nextBytes(_ arg0: [Int8]) -> [Int8]

  @JavaMethod
  open override func nextBytes(_ arg0: Int32) -> [Int8]

  @JavaMethod
  open override func nextBytes(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) -> [Int8]

  @JavaMethod
  open override func nextLong() -> Int64

  @JavaMethod
  open override func nextLong(_ arg0: Int64) -> Int64

  @JavaMethod
  open override func nextLong(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaMethod
  open override func nextBoolean() -> Bool

  @JavaMethod
  open override func nextFloat() -> Float
  }
}
extension JavaClass<Random.Default> {
  @JavaStaticField(isFinal: true)
  public var Default: Random.Default!
}

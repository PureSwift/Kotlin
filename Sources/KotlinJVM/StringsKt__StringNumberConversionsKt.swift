// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.text.StringsKt__StringNumberConversionsKt")
open class StringsKt__StringNumberConversionsKt: StringsKt__StringNumberConversionsJVMKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<StringsKt__StringNumberConversionsKt> {
  @JavaStaticMethod
  public func toByteOrNull(_ arg0: String) -> JavaByte!

  @JavaStaticMethod
  public func toByteOrNull(_ arg0: String, _ arg1: Int32) -> JavaByte!

  @JavaStaticMethod
  public func toIntOrNull(_ arg0: String) -> JavaInteger!

  @JavaStaticMethod
  public func toIntOrNull(_ arg0: String, _ arg1: Int32) -> JavaInteger!

  @JavaStaticMethod
  public func toShortOrNull(_ arg0: String, _ arg1: Int32) -> JavaShort!

  @JavaStaticMethod
  public func toShortOrNull(_ arg0: String) -> JavaShort!

  @JavaStaticMethod
  public func toLongOrNull(_ arg0: String, _ arg1: Int32) -> JavaLong!

  @JavaStaticMethod
  public func toLongOrNull(_ arg0: String) -> JavaLong!

  @JavaStaticMethod
  public func numberFormatError(_ arg0: String) -> JavaVoid!
}

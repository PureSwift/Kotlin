// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.jvm.internal.TypeParameterReference", implements: KTypeParameter.self)
open class TypeParameterReference: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, _ arg1: String, _ arg2: KVariance?, _ arg3: Bool, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getName() -> String

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func setUpperBounds(_ arg0: List<KType>?)

  @JavaMethod
  open func getUpperBounds() -> List<KType>!

  @JavaMethod
  open func getVariance() -> KVariance!

  @JavaMethod
  open func isReified() -> Bool
}
extension JavaClass<TypeParameterReference> {
  @JavaStaticField(isFinal: true)
  public var Companion: TypeParameterReference.Companion!

  @JavaStaticMethod
  public func getUpperBounds$annotations()
}

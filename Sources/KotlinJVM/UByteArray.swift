// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.UByteArray", implements: JavaCollection<UByte>.self, KMappedMarker.self)
open class UByteArray: JavaObject {
  @JavaMethod
  open func remove(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func clear()

  @JavaMethod
  open func isEmpty() -> Bool

  @JavaMethod
  open func add(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func toArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaMethod
  open func toArray() -> [JavaObject?]

  @JavaMethod
  open func iterator() -> JavaIterator<UByte>!

  @JavaMethod
  open func contains(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func addAll(_ arg0: JavaCollection<UByte>?) -> Bool

  @JavaMethod
  open func getSize() -> Int32

  @JavaMethod
  open func removeAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func retainAll(_ arg0: JavaCollection<JavaObject>?) -> Bool

  @JavaMethod
  open func containsAll(_ arg0: JavaCollection<JavaObject>?) -> Bool
}
extension JavaClass<UByteArray> {
  @JavaStaticMethod
  public func getStorage$annotations()

}

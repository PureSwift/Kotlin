// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.time.TimedValue")
open class TimedValue<T: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, _ arg1: Int64, _ arg2: DefaultConstructorMarker?, environment: JNIEnvironment? = nil)

  // @JavaMethod
//  open func`getDuration-UwyO8pc`() -> Int64

@JavaMethod
  open func component1() -> JavaObject!

  // @JavaMethod
//  open func`component2-UwyO8pc`() -> Int64

// @JavaMethod
//  open func`copy-RFiDyg4`(_ arg0: JavaObject?, _ arg1: Int64) -> TimedValue<JavaObject>!

@JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getValue() -> JavaObject!
}
extension JavaClass {
  @JavaStaticMethod
  public func `copy-RFiDyg4$default`<T: AnyJavaObject>(_ arg0: TimedValue?, _ arg1: JavaObject?, _ arg2: Int64, _ arg3: Int32, _ arg4: JavaObject?) -> TimedValue! where ObjectType == TimedValue<T>
}

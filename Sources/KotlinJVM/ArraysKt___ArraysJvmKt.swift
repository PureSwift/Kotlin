// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.collections.ArraysKt___ArraysJvmKt")
open class ArraysKt___ArraysJvmKt: ArraysKt__ArraysKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<ArraysKt___ArraysJvmKt> {
  @JavaStaticMethod
  public func filterIsInstance(_ arg0: [JavaObject?], _ arg1: JavaClass<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterIsInstanceTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?, _ arg2: JavaClass<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toTypedArray(_ arg0: [Int64]) -> [JavaLong?]

  @JavaStaticMethod
  public func toTypedArray(_ arg0: [Float]) -> [JavaFloat?]

  @JavaStaticMethod
  public func toTypedArray(_ arg0: [UInt16]) -> [JavaCharacter?]

  @JavaStaticMethod
  public func toTypedArray(_ arg0: [Bool]) -> [JavaBoolean?]

  @JavaStaticMethod
  public func toTypedArray(_ arg0: [Int32]) -> [JavaInteger?]

  @JavaStaticMethod
  public func toTypedArray(_ arg0: [Int8]) -> [JavaByte?]

  @JavaStaticMethod
  public func toTypedArray(_ arg0: [Int16]) -> [JavaShort?]

  @JavaStaticMethod
  public func toTypedArray(_ arg0: [Double]) -> [JavaDouble?]

  @JavaStaticMethod
  public func copyInto$default(_ arg0: [Double], _ arg1: [Double], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: JavaObject?) -> [Double]

  @JavaStaticMethod
  public func copyInto$default(_ arg0: [Float], _ arg1: [Float], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: JavaObject?) -> [Float]

  @JavaStaticMethod
  public func copyInto$default(_ arg0: [UInt16], _ arg1: [UInt16], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: JavaObject?) -> [UInt16]

  @JavaStaticMethod
  public func copyInto$default(_ arg0: [Bool], _ arg1: [Bool], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: JavaObject?) -> [Bool]

  @JavaStaticMethod
  public func copyInto$default(_ arg0: [Int8], _ arg1: [Int8], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: JavaObject?) -> [Int8]

  @JavaStaticMethod
  public func copyInto$default(_ arg0: [Int16], _ arg1: [Int16], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: JavaObject?) -> [Int16]

  @JavaStaticMethod
  public func copyInto$default(_ arg0: [JavaObject?], _ arg1: [JavaObject?], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: JavaObject?) -> [JavaObject?]

  @JavaStaticMethod
  public func copyInto$default(_ arg0: [Int64], _ arg1: [Int64], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: JavaObject?) -> [Int64]

  @JavaStaticMethod
  public func copyInto$default(_ arg0: [Int32], _ arg1: [Int32], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: Int32, _ arg6: JavaObject?) -> [Int32]

  @JavaStaticMethod
  public func fill$default(_ arg0: [Bool], _ arg1: Bool, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?)

  @JavaStaticMethod
  public func fill$default(_ arg0: [Double], _ arg1: Double, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?)

  @JavaStaticMethod
  public func fill$default(_ arg0: [Float], _ arg1: Float, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?)

  @JavaStaticMethod
  public func fill$default(_ arg0: [UInt16], _ arg1: UInt16, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?)

  @JavaStaticMethod
  public func fill$default(_ arg0: [Int8], _ arg1: Int8, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?)

  @JavaStaticMethod
  public func fill$default(_ arg0: [Int16], _ arg1: Int16, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?)

  @JavaStaticMethod
  public func fill$default(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?)

  @JavaStaticMethod
  public func fill$default(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?)

  @JavaStaticMethod
  public func fill$default(_ arg0: [Int64], _ arg1: Int64, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?)

  @JavaStaticMethod
  public func sort$default(_ arg0: [Double], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func sort$default(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func sort$default(_ arg0: [JavaObject?], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func sort$default(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func sort$default(_ arg0: [Float], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func sort$default(_ arg0: [Int64], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func sort$default(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func sort$default(_ arg0: [Int16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: JavaObject?)

  @JavaStaticMethod
  public func binarySearch$default(_ arg0: [UInt16], _ arg1: UInt16, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func binarySearch$default(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func binarySearch$default(_ arg0: [Int8], _ arg1: Int8, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func binarySearch$default(_ arg0: [Double], _ arg1: Double, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func binarySearch$default(_ arg0: [Float], _ arg1: Float, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func binarySearch$default(_ arg0: [Int16], _ arg1: Int16, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func binarySearch$default(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func binarySearch$default(_ arg0: [Int64], _ arg1: Int64, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func min(_ arg0: [Int16]) -> JavaShort!

  @JavaStaticMethod
  public func min(_ arg0: [Int8]) -> JavaByte!

  @JavaStaticMethod
  public func min(_ arg0: [JavaFloat?]) -> JavaFloat!

  @JavaStaticMethod
  public func min(_ arg0: [JavaDouble?]) -> JavaDouble!

  @JavaStaticMethod
  public func min(_ arg0: [Int64]) -> JavaLong!

  @JavaStaticMethod
  public func min(_ arg0: [Float]) -> JavaFloat!

  @JavaStaticMethod
  public func min(_ arg0: [Double]) -> JavaDouble!

  @JavaStaticMethod
  public func min(_ arg0: [UInt16]) -> JavaCharacter!

  @JavaStaticMethod
  public func min(_ arg0: [Int32]) -> JavaInteger!

  @JavaStaticMethod
  public func max(_ arg0: [Int32]) -> JavaInteger!

  @JavaStaticMethod
  public func max(_ arg0: [Int16]) -> JavaShort!

  @JavaStaticMethod
  public func max(_ arg0: [Int8]) -> JavaByte!

  @JavaStaticMethod
  public func max(_ arg0: [UInt16]) -> JavaCharacter!

  @JavaStaticMethod
  public func max(_ arg0: [Double]) -> JavaDouble!

  @JavaStaticMethod
  public func max(_ arg0: [Float]) -> JavaFloat!

  @JavaStaticMethod
  public func max(_ arg0: [Int64]) -> JavaLong!

  @JavaStaticMethod
  public func max(_ arg0: [JavaFloat?]) -> JavaFloat!

  @JavaStaticMethod
  public func max(_ arg0: [JavaDouble?]) -> JavaDouble!

  @JavaStaticMethod
  public func sort(_ arg0: [Int16], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sort(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sort(_ arg0: [JavaObject?])

  @JavaStaticMethod
  public func sort(_ arg0: [JavaObject?], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sort(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sort(_ arg0: [Double], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sort(_ arg0: [Float], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sort(_ arg0: [Int64], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sort(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sort(_ arg0: [Int16])

  @JavaStaticMethod
  public func sort(_ arg0: [Int8])

  @JavaStaticMethod
  public func sort(_ arg0: [Int64])

  @JavaStaticMethod
  public func sort(_ arg0: [Int32])

  @JavaStaticMethod
  public func sort(_ arg0: [UInt16])

  @JavaStaticMethod
  public func sort(_ arg0: [Float])

  @JavaStaticMethod
  public func sort(_ arg0: [Double])

  @JavaStaticMethod
  public func copyOfRange(_ arg0: [Double], _ arg1: Int32, _ arg2: Int32) -> [Double]

  @JavaStaticMethod
  public func copyOfRange(_ arg0: [Float], _ arg1: Int32, _ arg2: Int32) -> [Float]

  @JavaStaticMethod
  public func copyOfRange(_ arg0: [Int64], _ arg1: Int32, _ arg2: Int32) -> [Int64]

  @JavaStaticMethod
  public func copyOfRange(_ arg0: [Bool], _ arg1: Int32, _ arg2: Int32) -> [Bool]

  @JavaStaticMethod
  public func copyOfRange(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) -> [UInt16]

  @JavaStaticMethod
  public func copyOfRange(_ arg0: [JavaObject?], _ arg1: Int32, _ arg2: Int32) -> [JavaObject?]

  @JavaStaticMethod
  public func copyOfRange(_ arg0: [Int16], _ arg1: Int32, _ arg2: Int32) -> [Int16]

  @JavaStaticMethod
  public func copyOfRange(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32) -> [Int32]

  @JavaStaticMethod
  public func copyOfRange(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) -> [Int8]

  @JavaStaticMethod
  public func fill(_ arg0: [Int8], _ arg1: Int8, _ arg2: Int32, _ arg3: Int32)

  @JavaStaticMethod
  public func fill(_ arg0: [Int16], _ arg1: Int16, _ arg2: Int32, _ arg3: Int32)

  @JavaStaticMethod
  public func fill(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32)

  @JavaStaticMethod
  public func fill(_ arg0: [Bool], _ arg1: Bool, _ arg2: Int32, _ arg3: Int32)

  @JavaStaticMethod
  public func fill(_ arg0: [Double], _ arg1: Double, _ arg2: Int32, _ arg3: Int32)

  @JavaStaticMethod
  public func fill(_ arg0: [UInt16], _ arg1: UInt16, _ arg2: Int32, _ arg3: Int32)

  @JavaStaticMethod
  public func fill(_ arg0: [Float], _ arg1: Float, _ arg2: Int32, _ arg3: Int32)

  @JavaStaticMethod
  public func fill(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Int32, _ arg3: Int32)

  @JavaStaticMethod
  public func fill(_ arg0: [Int64], _ arg1: Int64, _ arg2: Int32, _ arg3: Int32)

  @JavaStaticMethod
  public func asList(_ arg0: [Int8]) -> List<JavaByte>!

  @JavaStaticMethod
  public func asList(_ arg0: [Int16]) -> List<JavaShort>!

  @JavaStaticMethod
  public func asList(_ arg0: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func asList(_ arg0: [Int64]) -> List<JavaLong>!

  @JavaStaticMethod
  public func asList(_ arg0: [UInt16]) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func asList(_ arg0: [Bool]) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func asList(_ arg0: [Double]) -> List<JavaDouble>!

  @JavaStaticMethod
  public func asList(_ arg0: [Float]) -> List<JavaFloat>!

  @JavaStaticMethod
  public func asList(_ arg0: [Int32]) -> List<JavaInteger>!

  @JavaStaticMethod
  public func binarySearch(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Int32, _ arg3: Int32) -> Int32

  @JavaStaticMethod
  public func binarySearch(_ arg0: [Int8], _ arg1: Int8, _ arg2: Int32, _ arg3: Int32) -> Int32

  @JavaStaticMethod
  public func binarySearch(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> Int32

  @JavaStaticMethod
  public func binarySearch(_ arg0: [UInt16], _ arg1: UInt16, _ arg2: Int32, _ arg3: Int32) -> Int32

  @JavaStaticMethod
  public func binarySearch(_ arg0: [Double], _ arg1: Double, _ arg2: Int32, _ arg3: Int32) -> Int32

  @JavaStaticMethod
  public func binarySearch(_ arg0: [Float], _ arg1: Float, _ arg2: Int32, _ arg3: Int32) -> Int32

  @JavaStaticMethod
  public func binarySearch(_ arg0: [Int64], _ arg1: Int64, _ arg2: Int32, _ arg3: Int32) -> Int32

  @JavaStaticMethod
  public func binarySearch(_ arg0: [Int16], _ arg1: Int16, _ arg2: Int32, _ arg3: Int32) -> Int32

  @JavaStaticMethod
  public func copyInto(_ arg0: [Int8], _ arg1: [Int8], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> [Int8]

  @JavaStaticMethod
  public func copyInto(_ arg0: [JavaObject?], _ arg1: [JavaObject?], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> [JavaObject?]

  @JavaStaticMethod
  public func copyInto(_ arg0: [UInt16], _ arg1: [UInt16], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> [UInt16]

  @JavaStaticMethod
  public func copyInto(_ arg0: [Bool], _ arg1: [Bool], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> [Bool]

  @JavaStaticMethod
  public func copyInto(_ arg0: [Double], _ arg1: [Double], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> [Double]

  @JavaStaticMethod
  public func copyInto(_ arg0: [Float], _ arg1: [Float], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> [Float]

  @JavaStaticMethod
  public func copyInto(_ arg0: [Int64], _ arg1: [Int64], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> [Int64]

  @JavaStaticMethod
  public func copyInto(_ arg0: [Int32], _ arg1: [Int32], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> [Int32]

  @JavaStaticMethod
  public func copyInto(_ arg0: [Int16], _ arg1: [Int16], _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> [Int16]

  @JavaStaticMethod
  public func plus(_ arg0: [Int64], _ arg1: Int64) -> [Int64]

  @JavaStaticMethod
  public func plus(_ arg0: [Bool], _ arg1: JavaCollection<JavaBoolean>?) -> [Bool]

  @JavaStaticMethod
  public func plus(_ arg0: [UInt16], _ arg1: JavaCollection<JavaCharacter>?) -> [UInt16]

  @JavaStaticMethod
  public func plus(_ arg0: [JavaObject?], _ arg1: [JavaObject?]) -> [JavaObject?]

  @JavaStaticMethod
  public func plus(_ arg0: [Int8], _ arg1: [Int8]) -> [Int8]

  @JavaStaticMethod
  public func plus(_ arg0: [Double], _ arg1: JavaCollection<JavaDouble>?) -> [Double]

  @JavaStaticMethod
  public func plus(_ arg0: [Float], _ arg1: JavaCollection<JavaFloat>?) -> [Float]

  @JavaStaticMethod
  public func plus(_ arg0: [Int64], _ arg1: JavaCollection<JavaLong>?) -> [Int64]

  @JavaStaticMethod
  public func plus(_ arg0: [Bool], _ arg1: [Bool]) -> [Bool]

  @JavaStaticMethod
  public func plus(_ arg0: [Double], _ arg1: [Double]) -> [Double]

  @JavaStaticMethod
  public func plus(_ arg0: [Float], _ arg1: [Float]) -> [Float]

  @JavaStaticMethod
  public func plus(_ arg0: [Int64], _ arg1: [Int64]) -> [Int64]

  @JavaStaticMethod
  public func plus(_ arg0: [Int32], _ arg1: [Int32]) -> [Int32]

  @JavaStaticMethod
  public func plus(_ arg0: [Int16], _ arg1: [Int16]) -> [Int16]

  @JavaStaticMethod
  public func plus(_ arg0: [Int16], _ arg1: Int16) -> [Int16]

  @JavaStaticMethod
  public func plus(_ arg0: [Int32], _ arg1: Int32) -> [Int32]

  @JavaStaticMethod
  public func plus(_ arg0: [Float], _ arg1: Float) -> [Float]

  @JavaStaticMethod
  public func plus(_ arg0: [Double], _ arg1: Double) -> [Double]

  @JavaStaticMethod
  public func plus(_ arg0: [Int8], _ arg1: Int8) -> [Int8]

  @JavaStaticMethod
  public func plus(_ arg0: [UInt16], _ arg1: [UInt16]) -> [UInt16]

  @JavaStaticMethod
  public func plus(_ arg0: [JavaObject?], _ arg1: JavaObject?) -> [JavaObject?]

  @JavaStaticMethod
  public func plus(_ arg0: [Int32], _ arg1: JavaCollection<JavaInteger>?) -> [Int32]

  @JavaStaticMethod
  public func plus(_ arg0: [Int16], _ arg1: JavaCollection<JavaShort>?) -> [Int16]

  @JavaStaticMethod
  public func plus(_ arg0: [Int8], _ arg1: JavaCollection<JavaByte>?) -> [Int8]

  @JavaStaticMethod
  public func plus(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?) -> [JavaObject?]

  @JavaStaticMethod
  public func plus(_ arg0: [UInt16], _ arg1: UInt16) -> [UInt16]

  @JavaStaticMethod
  public func plus(_ arg0: [Bool], _ arg1: Bool) -> [Bool]
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.jvm.internal.PropertyReference0", implements: KProperty0.self)
open class PropertyReference0: PropertyReference {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, _ arg1: JavaClass?, _ arg2: String, _ arg3: String, _ arg4: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getGetter() -> KProperty0.Getter!

  @JavaMethod
  open func getGetter() -> KProperty.Getter!

  @JavaMethod
  open override func computeReflected() -> KCallable!

  @JavaMethod
  open func getDelegate() -> JavaObject!

  @JavaMethod
  open func invoke() -> JavaObject!
}
extension JavaClass<PropertyReference0> {
  @JavaStaticField(isFinal: true)
  public var NO_RECEIVER: JavaObject!
}

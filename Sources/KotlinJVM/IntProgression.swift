// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaLang
import JavaRuntime

@JavaClass("kotlin.ranges.IntProgression", implements: Iterable<JavaInteger>.self, KMappedMarker.self)
open class IntProgression: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func isEmpty() -> Bool

  @JavaMethod
  open func iterator() -> IntIterator!

  @JavaMethod
  open func iterator() -> JavaIterator!

  @JavaMethod
  open func getFirst() -> Int32

  @JavaMethod
  open func getLast() -> Int32

  @JavaMethod
  open func getStep() -> Int32
}
extension JavaClass<IntProgression> {
  @JavaStaticField(isFinal: true)
  public var Companion: IntProgression.Companion!
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.DeprecationLevel")
open class DeprecationLevel: JavaObject {
  public enum DeprecationLevelCases: Equatable {
    case WARNING
    case ERROR
    case HIDDEN
  }

  public var enumValue: DeprecationLevelCases! {
    let classObj = self.javaClass
    if self.equals(classObj.WARNING?.as(JavaObject.self)) {
      return DeprecationLevelCases.WARNING
    } else if self.equals(classObj.ERROR?.as(JavaObject.self)) {
      return DeprecationLevelCases.ERROR
    } else if self.equals(classObj.HIDDEN?.as(JavaObject.self)) {
      return DeprecationLevelCases.HIDDEN
    } else {
      return nil
    }
  }

  public convenience init(_ enumValue: DeprecationLevelCases, environment: JNIEnvironment? = nil) {
    let _environment = if let environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    let classObj = try! JavaClass<DeprecationLevel>(environment: _environment)
    switch enumValue {
      case .WARNING:
        if let WARNING = classObj.WARNING {
          self.init(javaHolder: WARNING.javaHolder)
        } else {
          fatalError("Enum value WARNING was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .ERROR:
        if let ERROR = classObj.ERROR {
          self.init(javaHolder: ERROR.javaHolder)
        } else {
          fatalError("Enum value ERROR was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
      case .HIDDEN:
        if let HIDDEN = classObj.HIDDEN {
          self.init(javaHolder: HIDDEN.javaHolder)
        } else {
          fatalError("Enum value HIDDEN was unexpectedly nil, please re-run Java2Swift on the most updated Java class")
        }
    }
  }
}
extension JavaClass<DeprecationLevel> {
  @JavaStaticField(isFinal: true)
  public var WARNING: DeprecationLevel!

  @JavaStaticField(isFinal: true)
  public var ERROR: DeprecationLevel!

  @JavaStaticField(isFinal: true)
  public var HIDDEN: DeprecationLevel!

  @JavaStaticMethod
  public func values() -> [DeprecationLevel?]

  @JavaStaticMethod
  public func valueOf(_ arg0: String) -> DeprecationLevel!

  @JavaStaticMethod
  public func getEntries() -> EnumEntries<DeprecationLevel>!
}

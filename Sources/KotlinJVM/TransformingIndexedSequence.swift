// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.sequences.TransformingIndexedSequence", implements: Sequence<JavaObject>.self)
open class TransformingIndexedSequence<T: AnyJavaObject, R: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Sequence<JavaObject>?, _ arg1: Function2<JavaObject, JavaObject, JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func iterator() -> JavaIterator<JavaObject>!
}
extension JavaClass {
  @JavaStaticMethod
  public func access$getSequence$p<T: AnyJavaObject, R: AnyJavaObject>(_ arg0: TransformingIndexedSequence?) -> Sequence! where ObjectType == TransformingIndexedSequence<T, R>

  @JavaStaticMethod
  public func access$getTransformer$p<T: AnyJavaObject, R: AnyJavaObject>(_ arg0: TransformingIndexedSequence?) -> Function2! where ObjectType == TransformingIndexedSequence<T, R>
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaKitReflection
import JavaRuntime

@JavaClass("kotlin.jvm.internal.TypeReference", implements: KType.self)
open class TypeReference: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: KClassifier?, _ arg1: List<KTypeProjection>?, _ arg2: KType?, _ arg3: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: KClassifier?, _ arg1: List<KTypeProjection>?, _ arg2: Bool, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getAnnotations() -> List<Annotation>!

  @JavaMethod
  open func getPlatformTypeUpperBound$kotlin_stdlib() -> KType!

  @JavaMethod
  open func getFlags$kotlin_stdlib() -> Int32

  @JavaMethod
  open func getClassifier() -> KClassifier!

  @JavaMethod
  open func getArguments() -> List<KTypeProjection>!

  @JavaMethod
  open func isMarkedNullable() -> Bool
}
extension JavaClass<TypeReference> {
  @JavaStaticField(isFinal: true)
  public var Companion: TypeReference.Companion!

  @JavaStaticField(isFinal: true)
  public var IS_MARKED_NULLABLE: Int32

  @JavaStaticField(isFinal: true)
  public var IS_MUTABLE_COLLECTION_TYPE: Int32

  @JavaStaticField(isFinal: true)
  public var IS_NOTHING_TYPE: Int32

  @JavaStaticMethod
  public func getPlatformTypeUpperBound$kotlin_stdlib$annotations()

  @JavaStaticMethod
  public func getFlags$kotlin_stdlib$annotations()

  @JavaStaticMethod
  public func access$asString(_ arg0: TypeReference?, _ arg1: KTypeProjection?) -> String
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitReflection
import JavaRuntime

@JavaClass("kotlin.reflect.WildcardTypeImpl", implements: WildcardType.self, TypeImpl.self)
open class WildcardTypeImpl: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Type?, _ arg1: Type?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getUpperBounds() -> [Type?]

  @JavaMethod
  open func getLowerBounds() -> [Type?]

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func getTypeName() -> String
}
extension JavaClass<WildcardTypeImpl> {
  @JavaStaticField(isFinal: true)
  public var Companion: WildcardTypeImpl.Companion!

  @JavaStaticMethod
  public func access$getSTAR$cp() -> WildcardTypeImpl!
}

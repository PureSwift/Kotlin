// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.properties.ObservableProperty", implements: ReadWriteProperty<JavaObject, JavaObject>.self)
open class ObservableProperty<V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: JavaObject?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func beforeChange(_ arg0: KProperty<JavaObject>?, _ arg1: JavaObject?, _ arg2: JavaObject?) -> Bool

  @JavaMethod
  open func afterChange(_ arg0: KProperty<JavaObject>?, _ arg1: JavaObject?, _ arg2: JavaObject?)

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func getValue(_ arg0: JavaObject?, _ arg1: KProperty<JavaObject>?) -> JavaObject!

  @JavaMethod
  open func setValue(_ arg0: JavaObject?, _ arg1: KProperty<JavaObject>?, _ arg2: JavaObject?)
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaLang
import JavaRuntime
import JavaUtil

@JavaClass("kotlin.collections.ArraysKt___ArraysKt")
open class ArraysKt___ArraysKt: ArraysKt___ArraysJvmKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<ArraysKt___ArraysKt> {
  @JavaStaticMethod
  public func reverse(_ arg0: [Int64])

  @JavaStaticMethod
  public func reverse(_ arg0: [Float], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func reverse(_ arg0: [Int64], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func reverse(_ arg0: [Float])

  @JavaStaticMethod
  public func reverse(_ arg0: [Double])

  @JavaStaticMethod
  public func reverse(_ arg0: [Int8])

  @JavaStaticMethod
  public func reverse(_ arg0: [Int16])

  @JavaStaticMethod
  public func reverse(_ arg0: [Int32])

  @JavaStaticMethod
  public func reverse(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func reverse(_ arg0: [Bool], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func reverse(_ arg0: [Double], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func reverse(_ arg0: [JavaObject?], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func reverse(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func reverse(_ arg0: [Int16], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func reverse(_ arg0: [Bool])

  @JavaStaticMethod
  public func reverse(_ arg0: [UInt16])

  @JavaStaticMethod
  public func reverse(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func reverse(_ arg0: [JavaObject?])

  @JavaStaticMethod
  public func partition(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Pair<List<JavaFloat>, List<JavaFloat>>!

  @JavaStaticMethod
  public func partition(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Pair<List<JavaLong>, List<JavaLong>>!

  @JavaStaticMethod
  public func partition(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Pair<List<JavaInteger>, List<JavaInteger>>!

  @JavaStaticMethod
  public func partition(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Pair<List<JavaDouble>, List<JavaDouble>>!

  @JavaStaticMethod
  public func partition(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Pair<List<JavaCharacter>, List<JavaCharacter>>!

  @JavaStaticMethod
  public func partition(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Pair<List<JavaBoolean>, List<JavaBoolean>>!

  @JavaStaticMethod
  public func partition(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Pair<List<JavaObject>, List<JavaObject>>!

  @JavaStaticMethod
  public func partition(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Pair<List<JavaByte>, List<JavaByte>>!

  @JavaStaticMethod
  public func partition(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Pair<List<JavaShort>, List<JavaShort>>!

  @JavaStaticMethod
  public func indexOf(_ arg0: [JavaObject?], _ arg1: JavaObject?) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: [Int64], _ arg1: Int64) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: [Int32], _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: [Int16], _ arg1: Int16) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: [Bool], _ arg1: Bool) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: [Double], _ arg1: Double) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: [Int8], _ arg1: Int8) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: [UInt16], _ arg1: UInt16) -> Int32

  @JavaStaticMethod
  public func indexOf(_ arg0: [Float], _ arg1: Float) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: [Double], _ arg1: Double) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: [Int32], _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: [Int16], _ arg1: Int16) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: [Int8], _ arg1: Int8) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: [JavaObject?], _ arg1: JavaObject?) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: [Bool], _ arg1: Bool) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: [UInt16], _ arg1: UInt16) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: [Float], _ arg1: Float) -> Int32

  @JavaStaticMethod
  public func lastIndexOf(_ arg0: [Int64], _ arg1: Int64) -> Int32

  @JavaStaticMethod
  public func map(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func map(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func map(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func map(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func map(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func map(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func map(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func map(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func map(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func toList(_ arg0: [Int64]) -> List<JavaLong>!

  @JavaStaticMethod
  public func toList(_ arg0: [Float]) -> List<JavaFloat>!

  @JavaStaticMethod
  public func toList(_ arg0: [Int32]) -> List<JavaInteger>!

  @JavaStaticMethod
  public func toList(_ arg0: [UInt16]) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func toList(_ arg0: [Bool]) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func toList(_ arg0: [Double]) -> List<JavaDouble>!

  @JavaStaticMethod
  public func toList(_ arg0: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func toList(_ arg0: [Int8]) -> List<JavaByte>!

  @JavaStaticMethod
  public func toList(_ arg0: [Int16]) -> List<JavaShort>!

  @JavaStaticMethod
  public func toCharArray(_ arg0: [JavaCharacter?]) -> [UInt16]

  @JavaStaticMethod
  public func count(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func count(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func count(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func count(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func count(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func count(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func count(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func count(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func count(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func contains(_ arg0: [Int16], _ arg1: Int16) -> Bool

  @JavaStaticMethod
  public func contains(_ arg0: [Int32], _ arg1: Int32) -> Bool

  @JavaStaticMethod
  public func contains(_ arg0: [Int64], _ arg1: Int64) -> Bool

  @JavaStaticMethod
  public func contains(_ arg0: [Float], _ arg1: Float) -> Bool

  @JavaStaticMethod
  public func contains(_ arg0: [Double], _ arg1: Double) -> Bool

  @JavaStaticMethod
  public func contains(_ arg0: [Bool], _ arg1: Bool) -> Bool

  @JavaStaticMethod
  public func contains(_ arg0: [Int8], _ arg1: Int8) -> Bool

  @JavaStaticMethod
  public func contains(_ arg0: [UInt16], _ arg1: UInt16) -> Bool

  @JavaStaticMethod
  public func contains(_ arg0: [JavaObject?], _ arg1: JavaObject?) -> Bool

  @JavaStaticMethod
  public func last(_ arg0: [Int16]) -> Int16

  @JavaStaticMethod
  public func last(_ arg0: [Int32]) -> Int32

  @JavaStaticMethod
  public func last(_ arg0: [Int64]) -> Int64

  @JavaStaticMethod
  public func last(_ arg0: [JavaObject?]) -> JavaObject!

  @JavaStaticMethod
  public func last(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func last(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Double

  @JavaStaticMethod
  public func last(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Float

  @JavaStaticMethod
  public func last(_ arg0: [Int8]) -> Int8

  @JavaStaticMethod
  public func last(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int8

  @JavaStaticMethod
  public func last(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func last(_ arg0: [UInt16]) -> UInt16

  @JavaStaticMethod
  public func last(_ arg0: [Double]) -> Double

  @JavaStaticMethod
  public func last(_ arg0: [Bool]) -> Bool

  @JavaStaticMethod
  public func last(_ arg0: [Float]) -> Float

  @JavaStaticMethod
  public func last(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int64

  @JavaStaticMethod
  public func last(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func last(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int16

  @JavaStaticMethod
  public func last(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> UInt16

  @JavaStaticMethod
  public func single(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> UInt16

  @JavaStaticMethod
  public func single(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int16

  @JavaStaticMethod
  public func single(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int8

  @JavaStaticMethod
  public func single(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func single(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Float

  @JavaStaticMethod
  public func single(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Double

  @JavaStaticMethod
  public func single(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func single(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int64

  @JavaStaticMethod
  public func single(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func single(_ arg0: [Float]) -> Float

  @JavaStaticMethod
  public func single(_ arg0: [Int64]) -> Int64

  @JavaStaticMethod
  public func single(_ arg0: [Int32]) -> Int32

  @JavaStaticMethod
  public func single(_ arg0: [Int16]) -> Int16

  @JavaStaticMethod
  public func single(_ arg0: [Int8]) -> Int8

  @JavaStaticMethod
  public func single(_ arg0: [JavaObject?]) -> JavaObject!

  @JavaStaticMethod
  public func single(_ arg0: [UInt16]) -> UInt16

  @JavaStaticMethod
  public func single(_ arg0: [Double]) -> Double

  @JavaStaticMethod
  public func single(_ arg0: [Bool]) -> Bool

  @JavaStaticMethod
  public func filter(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func filter(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func filter(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func filter(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func filter(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func filter(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func filter(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func filter(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func filter(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func first(_ arg0: [Float]) -> Float

  @JavaStaticMethod
  public func first(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func first(_ arg0: [Int16]) -> Int16

  @JavaStaticMethod
  public func first(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int16

  @JavaStaticMethod
  public func first(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func first(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int64

  @JavaStaticMethod
  public func first(_ arg0: [Int32]) -> Int32

  @JavaStaticMethod
  public func first(_ arg0: [Int64]) -> Int64

  @JavaStaticMethod
  public func first(_ arg0: [Double]) -> Double

  @JavaStaticMethod
  public func first(_ arg0: [Bool]) -> Bool

  @JavaStaticMethod
  public func first(_ arg0: [UInt16]) -> UInt16

  @JavaStaticMethod
  public func first(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> UInt16

  @JavaStaticMethod
  public func first(_ arg0: [Int8]) -> Int8

  @JavaStaticMethod
  public func first(_ arg0: [JavaObject?]) -> JavaObject!

  @JavaStaticMethod
  public func first(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int8

  @JavaStaticMethod
  public func first(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Float

  @JavaStaticMethod
  public func first(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Double

  @JavaStaticMethod
  public func first(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func forEach(_ arg0: [Float], _ arg1: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEach(_ arg0: [Int64], _ arg1: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEach(_ arg0: [Int32], _ arg1: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEach(_ arg0: [Int16], _ arg1: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEach(_ arg0: [Int8], _ arg1: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEach(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEach(_ arg0: [UInt16], _ arg1: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEach(_ arg0: [Bool], _ arg1: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEach(_ arg0: [Double], _ arg1: Function1<JavaObject, Unit>?)

  @JavaStaticMethod
  public func toSet(_ arg0: [Float]) -> JavaSet<JavaFloat>!

  @JavaStaticMethod
  public func toSet(_ arg0: [Bool]) -> JavaSet<JavaBoolean>!

  @JavaStaticMethod
  public func toSet(_ arg0: [Int64]) -> JavaSet<JavaLong>!

  @JavaStaticMethod
  public func toSet(_ arg0: [Double]) -> JavaSet<JavaDouble>!

  @JavaStaticMethod
  public func toSet(_ arg0: [UInt16]) -> JavaSet<JavaCharacter>!

  @JavaStaticMethod
  public func toSet(_ arg0: [JavaObject?]) -> JavaSet<JavaObject>!

  @JavaStaticMethod
  public func toSet(_ arg0: [Int8]) -> JavaSet<JavaByte>!

  @JavaStaticMethod
  public func toSet(_ arg0: [Int16]) -> JavaSet<JavaShort>!

  @JavaStaticMethod
  public func toSet(_ arg0: [Int32]) -> JavaSet<JavaInteger>!

  @JavaStaticMethod
  public func withIndex(_ arg0: [Int64]) -> Iterable<IndexedValue<JavaLong>>!

  @JavaStaticMethod
  public func withIndex(_ arg0: [Float]) -> Iterable<IndexedValue<JavaFloat>>!

  @JavaStaticMethod
  public func withIndex(_ arg0: [Double]) -> Iterable<IndexedValue<JavaDouble>>!

  @JavaStaticMethod
  public func withIndex(_ arg0: [Bool]) -> Iterable<IndexedValue<JavaBoolean>>!

  @JavaStaticMethod
  public func withIndex(_ arg0: [UInt16]) -> Iterable<IndexedValue<JavaCharacter>>!

  @JavaStaticMethod
  public func withIndex(_ arg0: [JavaObject?]) -> Iterable<IndexedValue<JavaObject>>!

  @JavaStaticMethod
  public func withIndex(_ arg0: [Int8]) -> Iterable<IndexedValue<JavaByte>>!

  @JavaStaticMethod
  public func withIndex(_ arg0: [Int16]) -> Iterable<IndexedValue<JavaShort>>!

  @JavaStaticMethod
  public func withIndex(_ arg0: [Int32]) -> Iterable<IndexedValue<JavaInteger>>!

  @JavaStaticMethod
  public func sum(_ arg0: [Int32]) -> Int32

  @JavaStaticMethod
  public func sum(_ arg0: [Int64]) -> Int64

  @JavaStaticMethod
  public func sum(_ arg0: [Int16]) -> Int32

  @JavaStaticMethod
  public func sum(_ arg0: [Int8]) -> Int32

  @JavaStaticMethod
  public func sum(_ arg0: [Float]) -> Float

  @JavaStaticMethod
  public func sum(_ arg0: [Double]) -> Double

  @JavaStaticMethod
  public func reduce(_ arg0: [Int8], _ arg1: Function2<JavaObject, JavaObject, JavaByte>?) -> Int8

  @JavaStaticMethod
  public func reduce(_ arg0: [Int16], _ arg1: Function2<JavaObject, JavaObject, JavaShort>?) -> Int16

  @JavaStaticMethod
  public func reduce(_ arg0: [JavaObject?], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduce(_ arg0: [Float], _ arg1: Function2<JavaObject, JavaObject, JavaFloat>?) -> Float

  @JavaStaticMethod
  public func reduce(_ arg0: [Int64], _ arg1: Function2<JavaObject, JavaObject, JavaLong>?) -> Int64

  @JavaStaticMethod
  public func reduce(_ arg0: [Int32], _ arg1: Function2<JavaObject, JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func reduce(_ arg0: [UInt16], _ arg1: Function2<JavaObject, JavaObject, JavaCharacter>?) -> UInt16

  @JavaStaticMethod
  public func reduce(_ arg0: [Bool], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func reduce(_ arg0: [Double], _ arg1: Function2<JavaObject, JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func reversed(_ arg0: [Float]) -> List<JavaFloat>!

  @JavaStaticMethod
  public func reversed(_ arg0: [Double]) -> List<JavaDouble>!

  @JavaStaticMethod
  public func reversed(_ arg0: [Bool]) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func reversed(_ arg0: [UInt16]) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func reversed(_ arg0: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func reversed(_ arg0: [Int8]) -> List<JavaByte>!

  @JavaStaticMethod
  public func reversed(_ arg0: [Int16]) -> List<JavaShort>!

  @JavaStaticMethod
  public func reversed(_ arg0: [Int32]) -> List<JavaInteger>!

  @JavaStaticMethod
  public func reversed(_ arg0: [Int64]) -> List<JavaLong>!

  @JavaStaticMethod
  public func slice(_ arg0: [Int32], _ arg1: Iterable<JavaInteger>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func slice(_ arg0: [Int16], _ arg1: Iterable<JavaInteger>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func slice(_ arg0: [Int64], _ arg1: Iterable<JavaInteger>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func slice(_ arg0: [Int8], _ arg1: Iterable<JavaInteger>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func slice(_ arg0: [Int8], _ arg1: IntRange?) -> List<JavaByte>!

  @JavaStaticMethod
  public func slice(_ arg0: [UInt16], _ arg1: Iterable<JavaInteger>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func slice(_ arg0: [Bool], _ arg1: Iterable<JavaInteger>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func slice(_ arg0: [Double], _ arg1: Iterable<JavaInteger>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func slice(_ arg0: [Float], _ arg1: Iterable<JavaInteger>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func slice(_ arg0: [Double], _ arg1: IntRange?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func slice(_ arg0: [JavaObject?], _ arg1: Iterable<JavaInteger>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func slice(_ arg0: [UInt16], _ arg1: IntRange?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func slice(_ arg0: [Bool], _ arg1: IntRange?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func slice(_ arg0: [Int16], _ arg1: IntRange?) -> List<JavaShort>!

  @JavaStaticMethod
  public func slice(_ arg0: [Int32], _ arg1: IntRange?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func slice(_ arg0: [Int64], _ arg1: IntRange?) -> List<JavaLong>!

  @JavaStaticMethod
  public func slice(_ arg0: [Float], _ arg1: IntRange?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func slice(_ arg0: [JavaObject?], _ arg1: IntRange?) -> List<JavaObject>!

  @JavaStaticMethod
  public func toByteArray(_ arg0: [JavaByte?]) -> [Int8]

  @JavaStaticMethod
  public func all(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func all(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func all(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func all(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func all(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func all(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func all(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func all(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func all(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func random(_ arg0: [JavaObject?], _ arg1: Random?) -> JavaObject!

  @JavaStaticMethod
  public func random(_ arg0: [Int8], _ arg1: Random?) -> Int8

  @JavaStaticMethod
  public func random(_ arg0: [Int16], _ arg1: Random?) -> Int16

  @JavaStaticMethod
  public func random(_ arg0: [Int32], _ arg1: Random?) -> Int32

  @JavaStaticMethod
  public func random(_ arg0: [Bool], _ arg1: Random?) -> Bool

  @JavaStaticMethod
  public func random(_ arg0: [UInt16], _ arg1: Random?) -> UInt16

  @JavaStaticMethod
  public func random(_ arg0: [Int64], _ arg1: Random?) -> Int64

  @JavaStaticMethod
  public func random(_ arg0: [Float], _ arg1: Random?) -> Float

  @JavaStaticMethod
  public func random(_ arg0: [Double], _ arg1: Random?) -> Double

  @JavaStaticMethod
  public func shuffle(_ arg0: [Int8], _ arg1: Random?)

  @JavaStaticMethod
  public func shuffle(_ arg0: [UInt16], _ arg1: Random?)

  @JavaStaticMethod
  public func shuffle(_ arg0: [Bool], _ arg1: Random?)

  @JavaStaticMethod
  public func shuffle(_ arg0: [Int32])

  @JavaStaticMethod
  public func shuffle(_ arg0: [Int64])

  @JavaStaticMethod
  public func shuffle(_ arg0: [Float])

  @JavaStaticMethod
  public func shuffle(_ arg0: [Double])

  @JavaStaticMethod
  public func shuffle(_ arg0: [JavaObject?])

  @JavaStaticMethod
  public func shuffle(_ arg0: [Int8])

  @JavaStaticMethod
  public func shuffle(_ arg0: [Int16], _ arg1: Random?)

  @JavaStaticMethod
  public func shuffle(_ arg0: [Int16])

  @JavaStaticMethod
  public func shuffle(_ arg0: [Int32], _ arg1: Random?)

  @JavaStaticMethod
  public func shuffle(_ arg0: [Int64], _ arg1: Random?)

  @JavaStaticMethod
  public func shuffle(_ arg0: [Float], _ arg1: Random?)

  @JavaStaticMethod
  public func shuffle(_ arg0: [Double], _ arg1: Random?)

  @JavaStaticMethod
  public func shuffle(_ arg0: [Bool])

  @JavaStaticMethod
  public func shuffle(_ arg0: [UInt16])

  @JavaStaticMethod
  public func shuffle(_ arg0: [JavaObject?], _ arg1: Random?)

  @JavaStaticMethod
  public func flatMap(_ arg0: [UInt16], _ arg1: Function1<JavaObject, Iterable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func flatMap(_ arg0: [Double], _ arg1: Function1<JavaObject, Iterable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func flatMap(_ arg0: [Bool], _ arg1: Function1<JavaObject, Iterable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func flatMap(_ arg0: [Float], _ arg1: Function1<JavaObject, Iterable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func flatMap(_ arg0: [Int8], _ arg1: Function1<JavaObject, Iterable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func flatMap(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Iterable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func flatMap(_ arg0: [Int16], _ arg1: Function1<JavaObject, Iterable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func flatMap(_ arg0: [Int64], _ arg1: Function1<JavaObject, Iterable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func flatMap(_ arg0: [Int32], _ arg1: Function1<JavaObject, Iterable<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func distinct(_ arg0: [Int64]) -> List<JavaLong>!

  @JavaStaticMethod
  public func distinct(_ arg0: [Float]) -> List<JavaFloat>!

  @JavaStaticMethod
  public func distinct(_ arg0: [Int32]) -> List<JavaInteger>!

  @JavaStaticMethod
  public func distinct(_ arg0: [Int8]) -> List<JavaByte>!

  @JavaStaticMethod
  public func distinct(_ arg0: [Int16]) -> List<JavaShort>!

  @JavaStaticMethod
  public func distinct(_ arg0: [UInt16]) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func distinct(_ arg0: [Bool]) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func distinct(_ arg0: [Double]) -> List<JavaDouble>!

  @JavaStaticMethod
  public func distinct(_ arg0: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func sorted(_ arg0: [Int64]) -> List<JavaLong>!

  @JavaStaticMethod
  public func sorted(_ arg0: [Float]) -> List<JavaFloat>!

  @JavaStaticMethod
  public func sorted(_ arg0: [Double]) -> List<JavaDouble>!

  @JavaStaticMethod
  public func sorted(_ arg0: [UInt16]) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func sorted(_ arg0: [Comparable?]) -> List<Comparable>!

  @JavaStaticMethod
  public func sorted(_ arg0: [Int8]) -> List<JavaByte>!

  @JavaStaticMethod
  public func sorted(_ arg0: [Int16]) -> List<JavaShort>!

  @JavaStaticMethod
  public func sorted(_ arg0: [Int32]) -> List<JavaInteger>!

  @JavaStaticMethod
  public func scan(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func takeWhile(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func takeWhile(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func takeWhile(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func takeWhile(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func takeWhile(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func takeWhile(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func takeWhile(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func takeWhile(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func takeWhile(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func dropWhile(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func dropWhile(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func dropWhile(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func dropWhile(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func dropWhile(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func dropWhile(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func dropWhile(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func dropWhile(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func dropWhile(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func groupingBy(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaObject>?) -> Grouping<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func subtract(_ arg0: [Int32], _ arg1: Iterable<JavaInteger>?) -> JavaSet<JavaInteger>!

  @JavaStaticMethod
  public func subtract(_ arg0: [Int64], _ arg1: Iterable<JavaLong>?) -> JavaSet<JavaLong>!

  @JavaStaticMethod
  public func subtract(_ arg0: [Float], _ arg1: Iterable<JavaFloat>?) -> JavaSet<JavaFloat>!

  @JavaStaticMethod
  public func subtract(_ arg0: [Double], _ arg1: Iterable<JavaDouble>?) -> JavaSet<JavaDouble>!

  @JavaStaticMethod
  public func subtract(_ arg0: [UInt16], _ arg1: Iterable<JavaCharacter>?) -> JavaSet<JavaCharacter>!

  @JavaStaticMethod
  public func subtract(_ arg0: [Bool], _ arg1: Iterable<JavaBoolean>?) -> JavaSet<JavaBoolean>!

  @JavaStaticMethod
  public func subtract(_ arg0: [Int16], _ arg1: Iterable<JavaShort>?) -> JavaSet<JavaShort>!

  @JavaStaticMethod
  public func subtract(_ arg0: [Int8], _ arg1: Iterable<JavaByte>?) -> JavaSet<JavaByte>!

  @JavaStaticMethod
  public func subtract(_ arg0: [JavaObject?], _ arg1: Iterable<JavaObject>?) -> JavaSet<JavaObject>!

  @JavaStaticMethod
  public func toIntArray(_ arg0: [JavaInteger?]) -> [Int32]

  @JavaStaticMethod
  public func toLongArray(_ arg0: [JavaLong?]) -> [Int64]

  @JavaStaticMethod
  public func take(_ arg0: [Bool], _ arg1: Int32) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func take(_ arg0: [Float], _ arg1: Int32) -> List<JavaFloat>!

  @JavaStaticMethod
  public func take(_ arg0: [Double], _ arg1: Int32) -> List<JavaDouble>!

  @JavaStaticMethod
  public func take(_ arg0: [JavaObject?], _ arg1: Int32) -> List<JavaObject>!

  @JavaStaticMethod
  public func take(_ arg0: [Int8], _ arg1: Int32) -> List<JavaByte>!

  @JavaStaticMethod
  public func take(_ arg0: [Int16], _ arg1: Int32) -> List<JavaShort>!

  @JavaStaticMethod
  public func take(_ arg0: [Int32], _ arg1: Int32) -> List<JavaInteger>!

  @JavaStaticMethod
  public func take(_ arg0: [Int64], _ arg1: Int32) -> List<JavaLong>!

  @JavaStaticMethod
  public func take(_ arg0: [UInt16], _ arg1: Int32) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func toCollection(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toCollection(_ arg0: [Int8], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toCollection(_ arg0: [Int16], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toCollection(_ arg0: [Float], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toCollection(_ arg0: [Double], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toCollection(_ arg0: [Bool], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toCollection(_ arg0: [UInt16], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toCollection(_ arg0: [Int32], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toCollection(_ arg0: [Int64], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func union(_ arg0: [Int32], _ arg1: Iterable<JavaInteger>?) -> JavaSet<JavaInteger>!

  @JavaStaticMethod
  public func union(_ arg0: [Int16], _ arg1: Iterable<JavaShort>?) -> JavaSet<JavaShort>!

  @JavaStaticMethod
  public func union(_ arg0: [Bool], _ arg1: Iterable<JavaBoolean>?) -> JavaSet<JavaBoolean>!

  @JavaStaticMethod
  public func union(_ arg0: [Int64], _ arg1: Iterable<JavaLong>?) -> JavaSet<JavaLong>!

  @JavaStaticMethod
  public func union(_ arg0: [Int8], _ arg1: Iterable<JavaByte>?) -> JavaSet<JavaByte>!

  @JavaStaticMethod
  public func union(_ arg0: [Double], _ arg1: Iterable<JavaDouble>?) -> JavaSet<JavaDouble>!

  @JavaStaticMethod
  public func union(_ arg0: [Float], _ arg1: Iterable<JavaFloat>?) -> JavaSet<JavaFloat>!

  @JavaStaticMethod
  public func union(_ arg0: [JavaObject?], _ arg1: Iterable<JavaObject>?) -> JavaSet<JavaObject>!

  @JavaStaticMethod
  public func union(_ arg0: [UInt16], _ arg1: Iterable<JavaCharacter>?) -> JavaSet<JavaCharacter>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int8], _ arg1: [Int8], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [UInt16], _ arg1: [UInt16]) -> List<Pair<JavaCharacter, JavaCharacter>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Double], _ arg1: [Double]) -> List<Pair<JavaDouble, JavaDouble>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Bool], _ arg1: [Bool]) -> List<Pair<JavaBoolean, JavaBoolean>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int16], _ arg1: [Int16], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int32], _ arg1: [Int32], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int8], _ arg1: [Int8]) -> List<Pair<JavaByte, JavaByte>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Bool], _ arg1: Iterable<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [UInt16], _ arg1: Iterable<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int16], _ arg1: [Int16]) -> List<Pair<JavaShort, JavaShort>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int32], _ arg1: [Int32]) -> List<Pair<JavaInteger, JavaInteger>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int64], _ arg1: [Int64]) -> List<Pair<JavaLong, JavaLong>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Float], _ arg1: [Float]) -> List<Pair<JavaFloat, JavaFloat>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int32], _ arg1: [JavaObject?], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int16], _ arg1: [JavaObject?], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int8], _ arg1: [JavaObject?], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [JavaObject?], _ arg1: [JavaObject?], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [UInt16], _ arg1: [JavaObject?]) -> List<Pair<JavaCharacter, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Bool], _ arg1: [JavaObject?], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Double], _ arg1: [JavaObject?], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Float], _ arg1: [JavaObject?], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int64], _ arg1: [JavaObject?], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int32], _ arg1: [JavaObject?]) -> List<Pair<JavaInteger, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int16], _ arg1: [JavaObject?]) -> List<Pair<JavaShort, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int8], _ arg1: [JavaObject?]) -> List<Pair<JavaByte, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [JavaObject?], _ arg1: [JavaObject?]) -> List<Pair<JavaObject, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Bool], _ arg1: [JavaObject?]) -> List<Pair<JavaBoolean, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Double], _ arg1: [JavaObject?]) -> List<Pair<JavaDouble, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Float], _ arg1: [JavaObject?]) -> List<Pair<JavaFloat, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int64], _ arg1: [JavaObject?]) -> List<Pair<JavaLong, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int16], _ arg1: Iterable<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int8], _ arg1: Iterable<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [JavaObject?], _ arg1: Iterable<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [UInt16], _ arg1: Iterable<JavaObject>?) -> List<Pair<JavaCharacter, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Bool], _ arg1: Iterable<JavaObject>?) -> List<Pair<JavaBoolean, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Double], _ arg1: Iterable<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Float], _ arg1: Iterable<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int64], _ arg1: Iterable<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int32], _ arg1: Iterable<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int16], _ arg1: Iterable<JavaObject>?) -> List<Pair<JavaShort, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int8], _ arg1: Iterable<JavaObject>?) -> List<Pair<JavaByte, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [JavaObject?], _ arg1: Iterable<JavaObject>?) -> List<Pair<JavaObject, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [UInt16], _ arg1: [JavaObject?], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Double], _ arg1: Iterable<JavaObject>?) -> List<Pair<JavaDouble, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Float], _ arg1: Iterable<JavaObject>?) -> List<Pair<JavaFloat, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int64], _ arg1: Iterable<JavaObject>?) -> List<Pair<JavaLong, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int32], _ arg1: Iterable<JavaObject>?) -> List<Pair<JavaInteger, JavaObject>>!

  @JavaStaticMethod
  public func zip(_ arg0: [UInt16], _ arg1: [UInt16], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Bool], _ arg1: [Bool], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Double], _ arg1: [Double], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Float], _ arg1: [Float], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func zip(_ arg0: [Int64], _ arg1: [Int64], _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func any(_ arg0: [Int8]) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [JavaObject?]) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Int16]) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Int32]) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [UInt16]) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Bool]) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Double]) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Float]) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Int64]) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func any(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func sortedArrayDescending(_ arg0: [Int32]) -> [Int32]

  @JavaStaticMethod
  public func sortedArrayDescending(_ arg0: [Int16]) -> [Int16]

  @JavaStaticMethod
  public func sortedArrayDescending(_ arg0: [Int64]) -> [Int64]

  @JavaStaticMethod
  public func sortedArrayDescending(_ arg0: [Float]) -> [Float]

  @JavaStaticMethod
  public func sortedArrayDescending(_ arg0: [Double]) -> [Double]

  @JavaStaticMethod
  public func sortedArrayDescending(_ arg0: [UInt16]) -> [UInt16]

  @JavaStaticMethod
  public func sortedArrayDescending(_ arg0: [Comparable?]) -> [Comparable?]

  @JavaStaticMethod
  public func sortedArrayDescending(_ arg0: [Int8]) -> [Int8]

  @JavaStaticMethod
  public func mapIndexedNotNullTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func reduceIndexedOrNull(_ arg0: [Int64], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaLong>?) -> JavaLong!

  @JavaStaticMethod
  public func reduceIndexedOrNull(_ arg0: [Float], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaFloat>?) -> JavaFloat!

  @JavaStaticMethod
  public func reduceIndexedOrNull(_ arg0: [Double], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaDouble>?) -> JavaDouble!

  @JavaStaticMethod
  public func reduceIndexedOrNull(_ arg0: [Bool], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaBoolean>?) -> JavaBoolean!

  @JavaStaticMethod
  public func reduceIndexedOrNull(_ arg0: [Int8], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaByte>?) -> JavaByte!

  @JavaStaticMethod
  public func reduceIndexedOrNull(_ arg0: [JavaObject?], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceIndexedOrNull(_ arg0: [Int32], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaInteger>?) -> JavaInteger!

  @JavaStaticMethod
  public func reduceIndexedOrNull(_ arg0: [Int16], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaShort>?) -> JavaShort!

  @JavaStaticMethod
  public func reduceIndexedOrNull(_ arg0: [UInt16], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaCharacter>?) -> JavaCharacter!

  @JavaStaticMethod
  public func reduceRightIndexedOrNull(_ arg0: [Int16], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaShort>?) -> JavaShort!

  @JavaStaticMethod
  public func reduceRightIndexedOrNull(_ arg0: [Int32], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaInteger>?) -> JavaInteger!

  @JavaStaticMethod
  public func reduceRightIndexedOrNull(_ arg0: [Int64], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaLong>?) -> JavaLong!

  @JavaStaticMethod
  public func reduceRightIndexedOrNull(_ arg0: [Int8], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaByte>?) -> JavaByte!

  @JavaStaticMethod
  public func reduceRightIndexedOrNull(_ arg0: [JavaObject?], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceRightIndexedOrNull(_ arg0: [UInt16], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaCharacter>?) -> JavaCharacter!

  @JavaStaticMethod
  public func reduceRightIndexedOrNull(_ arg0: [Bool], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaBoolean>?) -> JavaBoolean!

  @JavaStaticMethod
  public func reduceRightIndexedOrNull(_ arg0: [Double], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaDouble>?) -> JavaDouble!

  @JavaStaticMethod
  public func reduceRightIndexedOrNull(_ arg0: [Float], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaFloat>?) -> JavaFloat!

  @JavaStaticMethod
  public func runningReduceIndexed(_ arg0: [JavaObject?], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func joinToString$default(_ arg0: [Float], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1?, _ arg7: Int32, _ arg8: JavaObject?) -> String

  @JavaStaticMethod
  public func joinToString$default(_ arg0: [Int64], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1?, _ arg7: Int32, _ arg8: JavaObject?) -> String

  @JavaStaticMethod
  public func joinToString$default(_ arg0: [Int32], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1?, _ arg7: Int32, _ arg8: JavaObject?) -> String

  @JavaStaticMethod
  public func joinToString$default(_ arg0: [Int16], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1?, _ arg7: Int32, _ arg8: JavaObject?) -> String

  @JavaStaticMethod
  public func joinToString$default(_ arg0: [JavaObject?], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1?, _ arg7: Int32, _ arg8: JavaObject?) -> String

  @JavaStaticMethod
  public func joinToString$default(_ arg0: [Int8], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1?, _ arg7: Int32, _ arg8: JavaObject?) -> String

  @JavaStaticMethod
  public func joinToString$default(_ arg0: [UInt16], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1?, _ arg7: Int32, _ arg8: JavaObject?) -> String

  @JavaStaticMethod
  public func joinToString$default(_ arg0: [Bool], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1?, _ arg7: Int32, _ arg8: JavaObject?) -> String

  @JavaStaticMethod
  public func joinToString$default(_ arg0: [Double], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1?, _ arg7: Int32, _ arg8: JavaObject?) -> String

  @JavaStaticMethod
  public func foldIndexed(_ arg0: [Int8], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldIndexed(_ arg0: [Int32], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldIndexed(_ arg0: [Int16], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldIndexed(_ arg0: [Int64], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldIndexed(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldIndexed(_ arg0: [UInt16], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldIndexed(_ arg0: [Bool], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldIndexed(_ arg0: [Double], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldIndexed(_ arg0: [Float], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRight(_ arg0: [Double], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRight(_ arg0: [Int32], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRight(_ arg0: [Float], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRight(_ arg0: [Int64], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRight(_ arg0: [UInt16], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRight(_ arg0: [Bool], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRight(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRight(_ arg0: [Int8], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRight(_ arg0: [Int16], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRightIndexed(_ arg0: [Int64], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRightIndexed(_ arg0: [Int32], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRightIndexed(_ arg0: [Int16], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRightIndexed(_ arg0: [Int8], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRightIndexed(_ arg0: [Float], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRightIndexed(_ arg0: [Double], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRightIndexed(_ arg0: [Bool], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRightIndexed(_ arg0: [UInt16], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func foldRightIndexed(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func forEachIndexed(_ arg0: [Int64], _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEachIndexed(_ arg0: [UInt16], _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEachIndexed(_ arg0: [Bool], _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEachIndexed(_ arg0: [Double], _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEachIndexed(_ arg0: [Float], _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEachIndexed(_ arg0: [JavaObject?], _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEachIndexed(_ arg0: [Int8], _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEachIndexed(_ arg0: [Int32], _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func forEachIndexed(_ arg0: [Int16], _ arg1: Function2<JavaObject, JavaObject, Unit>?)

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: [Float]) -> Float

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: [Int64]) -> Int64

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: [Int32]) -> Int32

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: [Double]) -> Double

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: [UInt16]) -> UInt16

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: [JavaDouble?]) -> Double

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: [JavaFloat?]) -> Float

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: [Comparable?]) -> Comparable!

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: [Int8]) -> Int8

  @JavaStaticMethod
  public func maxOrThrow(_ arg0: [Int16]) -> Int16

  @JavaStaticMethod
  public func maxByOrThrow(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Comparable>?) -> JavaObject!

  @JavaStaticMethod
  public func maxByOrThrow(_ arg0: [Int32], _ arg1: Function1<JavaObject, Comparable>?) -> Int32

  @JavaStaticMethod
  public func maxByOrThrow(_ arg0: [Float], _ arg1: Function1<JavaObject, Comparable>?) -> Float

  @JavaStaticMethod
  public func maxByOrThrow(_ arg0: [Double], _ arg1: Function1<JavaObject, Comparable>?) -> Double

  @JavaStaticMethod
  public func maxByOrThrow(_ arg0: [Bool], _ arg1: Function1<JavaObject, Comparable>?) -> Bool

  @JavaStaticMethod
  public func maxByOrThrow(_ arg0: [UInt16], _ arg1: Function1<JavaObject, Comparable>?) -> UInt16

  @JavaStaticMethod
  public func maxByOrThrow(_ arg0: [Int8], _ arg1: Function1<JavaObject, Comparable>?) -> Int8

  @JavaStaticMethod
  public func maxByOrThrow(_ arg0: [Int16], _ arg1: Function1<JavaObject, Comparable>?) -> Int16

  @JavaStaticMethod
  public func maxByOrThrow(_ arg0: [Int64], _ arg1: Function1<JavaObject, Comparable>?) -> Int64

  @JavaStaticMethod
  public func maxByOrNull(_ arg0: [Double], _ arg1: Function1<JavaObject, Comparable>?) -> JavaDouble!

  @JavaStaticMethod
  public func maxByOrNull(_ arg0: [Float], _ arg1: Function1<JavaObject, Comparable>?) -> JavaFloat!

  @JavaStaticMethod
  public func maxByOrNull(_ arg0: [Int64], _ arg1: Function1<JavaObject, Comparable>?) -> JavaLong!

  @JavaStaticMethod
  public func maxByOrNull(_ arg0: [Bool], _ arg1: Function1<JavaObject, Comparable>?) -> JavaBoolean!

  @JavaStaticMethod
  public func maxByOrNull(_ arg0: [UInt16], _ arg1: Function1<JavaObject, Comparable>?) -> JavaCharacter!

  @JavaStaticMethod
  public func maxByOrNull(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Comparable>?) -> JavaObject!

  @JavaStaticMethod
  public func maxByOrNull(_ arg0: [Int8], _ arg1: Function1<JavaObject, Comparable>?) -> JavaByte!

  @JavaStaticMethod
  public func maxByOrNull(_ arg0: [Int16], _ arg1: Function1<JavaObject, Comparable>?) -> JavaShort!

  @JavaStaticMethod
  public func maxByOrNull(_ arg0: [Int32], _ arg1: Function1<JavaObject, Comparable>?) -> JavaInteger!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: [Int64]) -> JavaLong!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: [Float]) -> JavaFloat!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: [Int32]) -> JavaInteger!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: [Double]) -> JavaDouble!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: [UInt16]) -> JavaCharacter!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: [JavaDouble?]) -> JavaDouble!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: [JavaFloat?]) -> JavaFloat!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: [Comparable?]) -> Comparable!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: [Int8]) -> JavaByte!

  @JavaStaticMethod
  public func maxOrNull(_ arg0: [Int16]) -> JavaShort!

  @JavaStaticMethod
  public func minOrThrow(_ arg0: [Int64]) -> Int64

  @JavaStaticMethod
  public func minOrThrow(_ arg0: [Float]) -> Float

  @JavaStaticMethod
  public func minOrThrow(_ arg0: [Int32]) -> Int32

  @JavaStaticMethod
  public func minOrThrow(_ arg0: [Double]) -> Double

  @JavaStaticMethod
  public func minOrThrow(_ arg0: [UInt16]) -> UInt16

  @JavaStaticMethod
  public func minOrThrow(_ arg0: [JavaDouble?]) -> Double

  @JavaStaticMethod
  public func minOrThrow(_ arg0: [JavaFloat?]) -> Float

  @JavaStaticMethod
  public func minOrThrow(_ arg0: [Comparable?]) -> Comparable!

  @JavaStaticMethod
  public func minOrThrow(_ arg0: [Int8]) -> Int8

  @JavaStaticMethod
  public func minOrThrow(_ arg0: [Int16]) -> Int16

  @JavaStaticMethod
  public func minByOrThrow(_ arg0: [Float], _ arg1: Function1<JavaObject, Comparable>?) -> Float

  @JavaStaticMethod
  public func minByOrThrow(_ arg0: [Double], _ arg1: Function1<JavaObject, Comparable>?) -> Double

  @JavaStaticMethod
  public func minByOrThrow(_ arg0: [Int64], _ arg1: Function1<JavaObject, Comparable>?) -> Int64

  @JavaStaticMethod
  public func minByOrThrow(_ arg0: [Bool], _ arg1: Function1<JavaObject, Comparable>?) -> Bool

  @JavaStaticMethod
  public func minByOrThrow(_ arg0: [UInt16], _ arg1: Function1<JavaObject, Comparable>?) -> UInt16

  @JavaStaticMethod
  public func minByOrThrow(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Comparable>?) -> JavaObject!

  @JavaStaticMethod
  public func minByOrThrow(_ arg0: [Int8], _ arg1: Function1<JavaObject, Comparable>?) -> Int8

  @JavaStaticMethod
  public func minByOrThrow(_ arg0: [Int16], _ arg1: Function1<JavaObject, Comparable>?) -> Int16

  @JavaStaticMethod
  public func minByOrThrow(_ arg0: [Int32], _ arg1: Function1<JavaObject, Comparable>?) -> Int32

  @JavaStaticMethod
  public func minByOrNull(_ arg0: [Float], _ arg1: Function1<JavaObject, Comparable>?) -> JavaFloat!

  @JavaStaticMethod
  public func minByOrNull(_ arg0: [Double], _ arg1: Function1<JavaObject, Comparable>?) -> JavaDouble!

  @JavaStaticMethod
  public func minByOrNull(_ arg0: [Int64], _ arg1: Function1<JavaObject, Comparable>?) -> JavaLong!

  @JavaStaticMethod
  public func minByOrNull(_ arg0: [Bool], _ arg1: Function1<JavaObject, Comparable>?) -> JavaBoolean!

  @JavaStaticMethod
  public func minByOrNull(_ arg0: [UInt16], _ arg1: Function1<JavaObject, Comparable>?) -> JavaCharacter!

  @JavaStaticMethod
  public func minByOrNull(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Comparable>?) -> JavaObject!

  @JavaStaticMethod
  public func minByOrNull(_ arg0: [Int8], _ arg1: Function1<JavaObject, Comparable>?) -> JavaByte!

  @JavaStaticMethod
  public func minByOrNull(_ arg0: [Int16], _ arg1: Function1<JavaObject, Comparable>?) -> JavaShort!

  @JavaStaticMethod
  public func minByOrNull(_ arg0: [Int32], _ arg1: Function1<JavaObject, Comparable>?) -> JavaInteger!

  @JavaStaticMethod
  public func minOrNull(_ arg0: [Double]) -> JavaDouble!

  @JavaStaticMethod
  public func minOrNull(_ arg0: [Float]) -> JavaFloat!

  @JavaStaticMethod
  public func minOrNull(_ arg0: [Int32]) -> JavaInteger!

  @JavaStaticMethod
  public func minOrNull(_ arg0: [UInt16]) -> JavaCharacter!

  @JavaStaticMethod
  public func minOrNull(_ arg0: [Int8]) -> JavaByte!

  @JavaStaticMethod
  public func minOrNull(_ arg0: [Comparable?]) -> Comparable!

  @JavaStaticMethod
  public func minOrNull(_ arg0: [Int64]) -> JavaLong!

  @JavaStaticMethod
  public func minOrNull(_ arg0: [JavaDouble?]) -> JavaDouble!

  @JavaStaticMethod
  public func minOrNull(_ arg0: [Int16]) -> JavaShort!

  @JavaStaticMethod
  public func minOrNull(_ arg0: [JavaFloat?]) -> JavaFloat!

  @JavaStaticMethod
  public func none(_ arg0: [Float]) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Int64]) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Int32]) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Double]) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Bool]) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [UInt16]) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [JavaObject?]) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Int8]) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Int16]) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func none(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func reduceIndexed(_ arg0: [Int8], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaByte>?) -> Int8

  @JavaStaticMethod
  public func reduceIndexed(_ arg0: [Int16], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaShort>?) -> Int16

  @JavaStaticMethod
  public func reduceIndexed(_ arg0: [Int32], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func reduceIndexed(_ arg0: [JavaObject?], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceIndexed(_ arg0: [Bool], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func reduceIndexed(_ arg0: [UInt16], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaCharacter>?) -> UInt16

  @JavaStaticMethod
  public func reduceIndexed(_ arg0: [Double], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func reduceIndexed(_ arg0: [Int64], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaLong>?) -> Int64

  @JavaStaticMethod
  public func reduceIndexed(_ arg0: [Float], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaFloat>?) -> Float

  @JavaStaticMethod
  public func reduceOrNull(_ arg0: [Double], _ arg1: Function2<JavaObject, JavaObject, JavaDouble>?) -> JavaDouble!

  @JavaStaticMethod
  public func reduceOrNull(_ arg0: [Float], _ arg1: Function2<JavaObject, JavaObject, JavaFloat>?) -> JavaFloat!

  @JavaStaticMethod
  public func reduceOrNull(_ arg0: [Int64], _ arg1: Function2<JavaObject, JavaObject, JavaLong>?) -> JavaLong!

  @JavaStaticMethod
  public func reduceOrNull(_ arg0: [Bool], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaBoolean!

  @JavaStaticMethod
  public func reduceOrNull(_ arg0: [UInt16], _ arg1: Function2<JavaObject, JavaObject, JavaCharacter>?) -> JavaCharacter!

  @JavaStaticMethod
  public func reduceOrNull(_ arg0: [JavaObject?], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceOrNull(_ arg0: [Int8], _ arg1: Function2<JavaObject, JavaObject, JavaByte>?) -> JavaByte!

  @JavaStaticMethod
  public func reduceOrNull(_ arg0: [Int16], _ arg1: Function2<JavaObject, JavaObject, JavaShort>?) -> JavaShort!

  @JavaStaticMethod
  public func reduceOrNull(_ arg0: [Int32], _ arg1: Function2<JavaObject, JavaObject, JavaInteger>?) -> JavaInteger!

  @JavaStaticMethod
  public func reduceRight(_ arg0: [Int64], _ arg1: Function2<JavaObject, JavaObject, JavaLong>?) -> Int64

  @JavaStaticMethod
  public func reduceRight(_ arg0: [Int32], _ arg1: Function2<JavaObject, JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func reduceRight(_ arg0: [Float], _ arg1: Function2<JavaObject, JavaObject, JavaFloat>?) -> Float

  @JavaStaticMethod
  public func reduceRight(_ arg0: [Int16], _ arg1: Function2<JavaObject, JavaObject, JavaShort>?) -> Int16

  @JavaStaticMethod
  public func reduceRight(_ arg0: [Int8], _ arg1: Function2<JavaObject, JavaObject, JavaByte>?) -> Int8

  @JavaStaticMethod
  public func reduceRight(_ arg0: [JavaObject?], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceRight(_ arg0: [UInt16], _ arg1: Function2<JavaObject, JavaObject, JavaCharacter>?) -> UInt16

  @JavaStaticMethod
  public func reduceRight(_ arg0: [Bool], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func reduceRight(_ arg0: [Double], _ arg1: Function2<JavaObject, JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func reduceRightIndexed(_ arg0: [Float], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaFloat>?) -> Float

  @JavaStaticMethod
  public func reduceRightIndexed(_ arg0: [JavaObject?], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceRightIndexed(_ arg0: [Int8], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaByte>?) -> Int8

  @JavaStaticMethod
  public func reduceRightIndexed(_ arg0: [Int16], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaShort>?) -> Int16

  @JavaStaticMethod
  public func reduceRightIndexed(_ arg0: [Int32], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func reduceRightIndexed(_ arg0: [Int64], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaLong>?) -> Int64

  @JavaStaticMethod
  public func reduceRightIndexed(_ arg0: [Bool], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaBoolean>?) -> Bool

  @JavaStaticMethod
  public func reduceRightIndexed(_ arg0: [UInt16], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaCharacter>?) -> UInt16

  @JavaStaticMethod
  public func reduceRightIndexed(_ arg0: [Double], _ arg1: Function3<JavaObject, JavaObject, JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func reduceRightOrNull(_ arg0: [Int64], _ arg1: Function2<JavaObject, JavaObject, JavaLong>?) -> JavaLong!

  @JavaStaticMethod
  public func reduceRightOrNull(_ arg0: [Int16], _ arg1: Function2<JavaObject, JavaObject, JavaShort>?) -> JavaShort!

  @JavaStaticMethod
  public func reduceRightOrNull(_ arg0: [Int8], _ arg1: Function2<JavaObject, JavaObject, JavaByte>?) -> JavaByte!

  @JavaStaticMethod
  public func reduceRightOrNull(_ arg0: [JavaObject?], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func reduceRightOrNull(_ arg0: [UInt16], _ arg1: Function2<JavaObject, JavaObject, JavaCharacter>?) -> JavaCharacter!

  @JavaStaticMethod
  public func reduceRightOrNull(_ arg0: [Bool], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaBoolean!

  @JavaStaticMethod
  public func reduceRightOrNull(_ arg0: [Double], _ arg1: Function2<JavaObject, JavaObject, JavaDouble>?) -> JavaDouble!

  @JavaStaticMethod
  public func reduceRightOrNull(_ arg0: [Float], _ arg1: Function2<JavaObject, JavaObject, JavaFloat>?) -> JavaFloat!

  @JavaStaticMethod
  public func reduceRightOrNull(_ arg0: [Int32], _ arg1: Function2<JavaObject, JavaObject, JavaInteger>?) -> JavaInteger!

  @JavaStaticMethod
  public func runningFold(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func runningFoldIndexed(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func runningReduce(_ arg0: [JavaObject?], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func scanIndexed(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Function3<JavaObject, JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func sumBy(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumBy(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumBy(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumBy(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumBy(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumBy(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumBy(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumBy(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumBy(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func sumByDouble(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumByDouble(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumByDouble(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumByDouble(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumByDouble(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumByDouble(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumByDouble(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumByDouble(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumByDouble(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaDouble>?) -> Double

  @JavaStaticMethod
  public func sumOfDouble(_ arg0: [JavaDouble?]) -> Double

  @JavaStaticMethod
  public func sumOfInt(_ arg0: [JavaInteger?]) -> Int32

  @JavaStaticMethod
  public func sumOfLong(_ arg0: [JavaLong?]) -> Int64

  @JavaStaticMethod
  public func requireNoNulls(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaStaticMethod
  public func joinTo(_ arg0: [Float], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1<JavaObject, CharSequence>?) -> Appendable!

  @JavaStaticMethod
  public func joinTo(_ arg0: [UInt16], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1<JavaObject, CharSequence>?) -> Appendable!

  @JavaStaticMethod
  public func joinTo(_ arg0: [Double], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1<JavaObject, CharSequence>?) -> Appendable!

  @JavaStaticMethod
  public func joinTo(_ arg0: [Bool], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1<JavaObject, CharSequence>?) -> Appendable!

  @JavaStaticMethod
  public func joinTo(_ arg0: [Int16], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1<JavaObject, CharSequence>?) -> Appendable!

  @JavaStaticMethod
  public func joinTo(_ arg0: [Int8], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1<JavaObject, CharSequence>?) -> Appendable!

  @JavaStaticMethod
  public func joinTo(_ arg0: [JavaObject?], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1<JavaObject, CharSequence>?) -> Appendable!

  @JavaStaticMethod
  public func joinTo(_ arg0: [Int64], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1<JavaObject, CharSequence>?) -> Appendable!

  @JavaStaticMethod
  public func joinTo(_ arg0: [Int32], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1<JavaObject, CharSequence>?) -> Appendable!

  @JavaStaticMethod
  public func joinTo$default(_ arg0: [JavaObject?], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1?, _ arg8: Int32, _ arg9: JavaObject?) -> Appendable!

  @JavaStaticMethod
  public func joinTo$default(_ arg0: [UInt16], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1?, _ arg8: Int32, _ arg9: JavaObject?) -> Appendable!

  @JavaStaticMethod
  public func joinTo$default(_ arg0: [Double], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1?, _ arg8: Int32, _ arg9: JavaObject?) -> Appendable!

  @JavaStaticMethod
  public func joinTo$default(_ arg0: [Bool], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1?, _ arg8: Int32, _ arg9: JavaObject?) -> Appendable!

  @JavaStaticMethod
  public func joinTo$default(_ arg0: [Int64], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1?, _ arg8: Int32, _ arg9: JavaObject?) -> Appendable!

  @JavaStaticMethod
  public func joinTo$default(_ arg0: [Int16], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1?, _ arg8: Int32, _ arg9: JavaObject?) -> Appendable!

  @JavaStaticMethod
  public func joinTo$default(_ arg0: [Float], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1?, _ arg8: Int32, _ arg9: JavaObject?) -> Appendable!

  @JavaStaticMethod
  public func joinTo$default(_ arg0: [Int8], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1?, _ arg8: Int32, _ arg9: JavaObject?) -> Appendable!

  @JavaStaticMethod
  public func joinTo$default(_ arg0: [Int32], _ arg1: Appendable?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: CharSequence?, _ arg5: Int32, _ arg6: CharSequence?, _ arg7: Function1?, _ arg8: Int32, _ arg9: JavaObject?) -> Appendable!

  @JavaStaticMethod
  public func joinToString(_ arg0: [Int64], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1<JavaObject, CharSequence>?) -> String

  @JavaStaticMethod
  public func joinToString(_ arg0: [Float], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1<JavaObject, CharSequence>?) -> String

  @JavaStaticMethod
  public func joinToString(_ arg0: [Double], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1<JavaObject, CharSequence>?) -> String

  @JavaStaticMethod
  public func joinToString(_ arg0: [Bool], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1<JavaObject, CharSequence>?) -> String

  @JavaStaticMethod
  public func joinToString(_ arg0: [UInt16], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1<JavaObject, CharSequence>?) -> String

  @JavaStaticMethod
  public func joinToString(_ arg0: [JavaObject?], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1<JavaObject, CharSequence>?) -> String

  @JavaStaticMethod
  public func joinToString(_ arg0: [Int8], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1<JavaObject, CharSequence>?) -> String

  @JavaStaticMethod
  public func joinToString(_ arg0: [Int16], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1<JavaObject, CharSequence>?) -> String

  @JavaStaticMethod
  public func joinToString(_ arg0: [Int32], _ arg1: CharSequence?, _ arg2: CharSequence?, _ arg3: CharSequence?, _ arg4: Int32, _ arg5: CharSequence?, _ arg6: Function1<JavaObject, CharSequence>?) -> String

  @JavaStaticMethod
  public func asIterable(_ arg0: [Int64]) -> Iterable<JavaLong>!

  @JavaStaticMethod
  public func asIterable(_ arg0: [Float]) -> Iterable<JavaFloat>!

  @JavaStaticMethod
  public func asIterable(_ arg0: [Int32]) -> Iterable<JavaInteger>!

  @JavaStaticMethod
  public func asIterable(_ arg0: [Int16]) -> Iterable<JavaShort>!

  @JavaStaticMethod
  public func asIterable(_ arg0: [Double]) -> Iterable<JavaDouble>!

  @JavaStaticMethod
  public func asIterable(_ arg0: [Bool]) -> Iterable<JavaBoolean>!

  @JavaStaticMethod
  public func asIterable(_ arg0: [UInt16]) -> Iterable<JavaCharacter>!

  @JavaStaticMethod
  public func asIterable(_ arg0: [JavaObject?]) -> Iterable<JavaObject>!

  @JavaStaticMethod
  public func asIterable(_ arg0: [Int8]) -> Iterable<JavaByte>!

  @JavaStaticMethod
  public func asSequence(_ arg0: [Int16]) -> Sequence<JavaShort>!

  @JavaStaticMethod
  public func asSequence(_ arg0: [Int32]) -> Sequence<JavaInteger>!

  @JavaStaticMethod
  public func asSequence(_ arg0: [Int64]) -> Sequence<JavaLong>!

  @JavaStaticMethod
  public func asSequence(_ arg0: [JavaObject?]) -> Sequence<JavaObject>!

  @JavaStaticMethod
  public func asSequence(_ arg0: [Int8]) -> Sequence<JavaByte>!

  @JavaStaticMethod
  public func asSequence(_ arg0: [UInt16]) -> Sequence<JavaCharacter>!

  @JavaStaticMethod
  public func asSequence(_ arg0: [Bool]) -> Sequence<JavaBoolean>!

  @JavaStaticMethod
  public func asSequence(_ arg0: [Double]) -> Sequence<JavaDouble>!

  @JavaStaticMethod
  public func asSequence(_ arg0: [Float]) -> Sequence<JavaFloat>!

  @JavaStaticMethod
  public func averageOfByte(_ arg0: [JavaByte?]) -> Double

  @JavaStaticMethod
  public func averageOfShort(_ arg0: [JavaShort?]) -> Double

  @JavaStaticMethod
  public func averageOfInt(_ arg0: [JavaInteger?]) -> Double

  @JavaStaticMethod
  public func averageOfLong(_ arg0: [JavaLong?]) -> Double

  @JavaStaticMethod
  public func averageOfFloat(_ arg0: [JavaFloat?]) -> Double

  @JavaStaticMethod
  public func averageOfDouble(_ arg0: [JavaDouble?]) -> Double

  @JavaStaticMethod
  public func average(_ arg0: [Int32]) -> Double

  @JavaStaticMethod
  public func average(_ arg0: [Int16]) -> Double

  @JavaStaticMethod
  public func average(_ arg0: [Int64]) -> Double

  @JavaStaticMethod
  public func average(_ arg0: [Int8]) -> Double

  @JavaStaticMethod
  public func average(_ arg0: [Float]) -> Double

  @JavaStaticMethod
  public func average(_ arg0: [Double]) -> Double

  @JavaStaticMethod
  public func sumOfByte(_ arg0: [JavaByte?]) -> Int32

  @JavaStaticMethod
  public func sumOfShort(_ arg0: [JavaShort?]) -> Int32

  @JavaStaticMethod
  public func sumOfFloat(_ arg0: [JavaFloat?]) -> Float

  @JavaStaticMethod
  public func getOrNull(_ arg0: [Int32], _ arg1: Int32) -> JavaInteger!

  @JavaStaticMethod
  public func getOrNull(_ arg0: [Int16], _ arg1: Int32) -> JavaShort!

  @JavaStaticMethod
  public func getOrNull(_ arg0: [Int64], _ arg1: Int32) -> JavaLong!

  @JavaStaticMethod
  public func getOrNull(_ arg0: [Int8], _ arg1: Int32) -> JavaByte!

  @JavaStaticMethod
  public func getOrNull(_ arg0: [JavaObject?], _ arg1: Int32) -> JavaObject!

  @JavaStaticMethod
  public func getOrNull(_ arg0: [UInt16], _ arg1: Int32) -> JavaCharacter!

  @JavaStaticMethod
  public func getOrNull(_ arg0: [Bool], _ arg1: Int32) -> JavaBoolean!

  @JavaStaticMethod
  public func getOrNull(_ arg0: [Double], _ arg1: Int32) -> JavaDouble!

  @JavaStaticMethod
  public func getOrNull(_ arg0: [Float], _ arg1: Int32) -> JavaFloat!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [UInt16]) -> JavaCharacter!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Bool]) -> JavaBoolean!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Double]) -> JavaDouble!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaInteger!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaLong!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaShort!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaByte!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [JavaObject?]) -> JavaObject!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaFloat!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaDouble!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaBoolean!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaCharacter!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Float]) -> JavaFloat!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Int64]) -> JavaLong!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Int32]) -> JavaInteger!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Int8]) -> JavaByte!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: [Int16]) -> JavaShort!

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfFirst(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func indexOfLast(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> Int32

  @JavaStaticMethod
  public func getLastIndex(_ arg0: [Int16]) -> Int32

  @JavaStaticMethod
  public func getLastIndex(_ arg0: [Int32]) -> Int32

  @JavaStaticMethod
  public func getLastIndex(_ arg0: [Int64]) -> Int32

  @JavaStaticMethod
  public func getLastIndex(_ arg0: [Int8]) -> Int32

  @JavaStaticMethod
  public func getLastIndex(_ arg0: [JavaObject?]) -> Int32

  @JavaStaticMethod
  public func getLastIndex(_ arg0: [Bool]) -> Int32

  @JavaStaticMethod
  public func getLastIndex(_ arg0: [UInt16]) -> Int32

  @JavaStaticMethod
  public func getLastIndex(_ arg0: [Double]) -> Int32

  @JavaStaticMethod
  public func getLastIndex(_ arg0: [Float]) -> Int32

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaShort!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaInteger!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaByte!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaDouble!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaBoolean!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaCharacter!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaFloat!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaLong!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Double]) -> JavaDouble!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Float]) -> JavaFloat!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Int8]) -> JavaByte!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Int16]) -> JavaShort!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Int64]) -> JavaLong!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [UInt16]) -> JavaCharacter!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [JavaObject?]) -> JavaObject!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Int32]) -> JavaInteger!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: [Bool]) -> JavaBoolean!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: [Int64], _ arg1: Random?) -> JavaLong!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: [Int32], _ arg1: Random?) -> JavaInteger!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: [Int16], _ arg1: Random?) -> JavaShort!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: [Int8], _ arg1: Random?) -> JavaByte!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: [Bool], _ arg1: Random?) -> JavaBoolean!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: [UInt16], _ arg1: Random?) -> JavaCharacter!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: [Double], _ arg1: Random?) -> JavaDouble!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: [Float], _ arg1: Random?) -> JavaFloat!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: [JavaObject?], _ arg1: Random?) -> JavaObject!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Float]) -> JavaFloat!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Double]) -> JavaDouble!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Bool]) -> JavaBoolean!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [UInt16]) -> JavaCharacter!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Int64]) -> JavaLong!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Int32]) -> JavaInteger!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Int16]) -> JavaShort!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaLong!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaFloat!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaDouble!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaBoolean!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaCharacter!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaObject!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaByte!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaShort!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> JavaInteger!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [Int8]) -> JavaByte!

  @JavaStaticMethod
  public func singleOrNull(_ arg0: [JavaObject?]) -> JavaObject!

  @JavaStaticMethod
  public func drop(_ arg0: [Int32], _ arg1: Int32) -> List<JavaInteger>!

  @JavaStaticMethod
  public func drop(_ arg0: [Int16], _ arg1: Int32) -> List<JavaShort>!

  @JavaStaticMethod
  public func drop(_ arg0: [Int64], _ arg1: Int32) -> List<JavaLong>!

  @JavaStaticMethod
  public func drop(_ arg0: [Int8], _ arg1: Int32) -> List<JavaByte>!

  @JavaStaticMethod
  public func drop(_ arg0: [JavaObject?], _ arg1: Int32) -> List<JavaObject>!

  @JavaStaticMethod
  public func drop(_ arg0: [UInt16], _ arg1: Int32) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func drop(_ arg0: [Bool], _ arg1: Int32) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func drop(_ arg0: [Double], _ arg1: Int32) -> List<JavaDouble>!

  @JavaStaticMethod
  public func drop(_ arg0: [Float], _ arg1: Int32) -> List<JavaFloat>!

  @JavaStaticMethod
  public func takeLast(_ arg0: [Int8], _ arg1: Int32) -> List<JavaByte>!

  @JavaStaticMethod
  public func takeLast(_ arg0: [Int16], _ arg1: Int32) -> List<JavaShort>!

  @JavaStaticMethod
  public func takeLast(_ arg0: [Int32], _ arg1: Int32) -> List<JavaInteger>!

  @JavaStaticMethod
  public func takeLast(_ arg0: [Int64], _ arg1: Int32) -> List<JavaLong>!

  @JavaStaticMethod
  public func takeLast(_ arg0: [Double], _ arg1: Int32) -> List<JavaDouble>!

  @JavaStaticMethod
  public func takeLast(_ arg0: [Bool], _ arg1: Int32) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func takeLast(_ arg0: [UInt16], _ arg1: Int32) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func takeLast(_ arg0: [Float], _ arg1: Int32) -> List<JavaFloat>!

  @JavaStaticMethod
  public func takeLast(_ arg0: [JavaObject?], _ arg1: Int32) -> List<JavaObject>!

  @JavaStaticMethod
  public func dropLast(_ arg0: [Int8], _ arg1: Int32) -> List<JavaByte>!

  @JavaStaticMethod
  public func dropLast(_ arg0: [Double], _ arg1: Int32) -> List<JavaDouble>!

  @JavaStaticMethod
  public func dropLast(_ arg0: [Int16], _ arg1: Int32) -> List<JavaShort>!

  @JavaStaticMethod
  public func dropLast(_ arg0: [Int64], _ arg1: Int32) -> List<JavaLong>!

  @JavaStaticMethod
  public func dropLast(_ arg0: [Int32], _ arg1: Int32) -> List<JavaInteger>!

  @JavaStaticMethod
  public func dropLast(_ arg0: [UInt16], _ arg1: Int32) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func dropLast(_ arg0: [Bool], _ arg1: Int32) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func dropLast(_ arg0: [Float], _ arg1: Int32) -> List<JavaFloat>!

  @JavaStaticMethod
  public func dropLast(_ arg0: [JavaObject?], _ arg1: Int32) -> List<JavaObject>!

  @JavaStaticMethod
  public func dropLastWhile(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func dropLastWhile(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func dropLastWhile(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func dropLastWhile(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func dropLastWhile(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func dropLastWhile(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func dropLastWhile(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func dropLastWhile(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func dropLastWhile(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func filterIndexed(_ arg0: [JavaObject?], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterIndexed(_ arg0: [Int32], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func filterIndexed(_ arg0: [Int8], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func filterIndexed(_ arg0: [Int16], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func filterIndexed(_ arg0: [Bool], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func filterIndexed(_ arg0: [UInt16], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func filterIndexed(_ arg0: [Double], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func filterIndexed(_ arg0: [Float], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func filterIndexed(_ arg0: [Int64], _ arg1: Function2<JavaObject, JavaObject, JavaBoolean>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func filterIndexedTo(_ arg0: [Int64], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterIndexedTo(_ arg0: [Float], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterIndexedTo(_ arg0: [Double], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterIndexedTo(_ arg0: [Bool], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterIndexedTo(_ arg0: [UInt16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterIndexedTo(_ arg0: [Int32], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterIndexedTo(_ arg0: [Int8], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterIndexedTo(_ arg0: [Int16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterIndexedTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterIsInstance(_ arg0: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterIsInstanceTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNot(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func filterNot(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func filterNot(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func filterNot(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func filterNot(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func filterNot(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterNot(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func filterNot(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func filterNot(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func filterNotNull(_ arg0: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterNotNullTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: [Float], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: [Double], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: [Int64], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: [Bool], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: [UInt16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: [Int8], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: [Int16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: [Int32], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: [Int64], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: [Int32], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: [Float], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: [Int16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: [Int8], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: [Bool], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: [UInt16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: [Double], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Int32], _ arg1: JavaCollection<JavaInteger>?) -> [Int32]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Int16], _ arg1: JavaCollection<JavaInteger>?) -> [Int16]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Int8], _ arg1: JavaCollection<JavaInteger>?) -> [Int8]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaInteger>?) -> [JavaObject?]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [JavaObject?], _ arg1: IntRange?) -> [JavaObject?]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [UInt16], _ arg1: JavaCollection<JavaInteger>?) -> [UInt16]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Bool], _ arg1: JavaCollection<JavaInteger>?) -> [Bool]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Double], _ arg1: JavaCollection<JavaInteger>?) -> [Double]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Float], _ arg1: JavaCollection<JavaInteger>?) -> [Float]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Int64], _ arg1: JavaCollection<JavaInteger>?) -> [Int64]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [UInt16], _ arg1: IntRange?) -> [UInt16]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Bool], _ arg1: IntRange?) -> [Bool]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Double], _ arg1: IntRange?) -> [Double]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Float], _ arg1: IntRange?) -> [Float]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Int16], _ arg1: IntRange?) -> [Int16]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Int32], _ arg1: IntRange?) -> [Int32]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Int64], _ arg1: IntRange?) -> [Int64]

  @JavaStaticMethod
  public func sliceArray(_ arg0: [Int8], _ arg1: IntRange?) -> [Int8]

  @JavaStaticMethod
  public func takeLastWhile(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func takeLastWhile(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func takeLastWhile(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func takeLastWhile(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func takeLastWhile(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func takeLastWhile(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func takeLastWhile(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func takeLastWhile(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func takeLastWhile(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaBoolean>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: [Float]) -> List<JavaFloat>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: [Int64]) -> List<JavaLong>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: [Int32]) -> List<JavaInteger>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: [Int16]) -> List<JavaShort>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: [Int8]) -> List<JavaByte>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: [UInt16]) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: [Bool]) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func toMutableList(_ arg0: [Double]) -> List<JavaDouble>!

  @JavaStaticMethod
  public func reversedArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaStaticMethod
  public func reversedArray(_ arg0: [Int8]) -> [Int8]

  @JavaStaticMethod
  public func reversedArray(_ arg0: [Int64]) -> [Int64]

  @JavaStaticMethod
  public func reversedArray(_ arg0: [Float]) -> [Float]

  @JavaStaticMethod
  public func reversedArray(_ arg0: [Double]) -> [Double]

  @JavaStaticMethod
  public func reversedArray(_ arg0: [Bool]) -> [Bool]

  @JavaStaticMethod
  public func reversedArray(_ arg0: [UInt16]) -> [UInt16]

  @JavaStaticMethod
  public func reversedArray(_ arg0: [Int32]) -> [Int32]

  @JavaStaticMethod
  public func reversedArray(_ arg0: [Int16]) -> [Int16]

  @JavaStaticMethod
  public func sortBy(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Comparable>?)

  @JavaStaticMethod
  public func sortByDescending(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Comparable>?)

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Double])

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Int16])

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Float])

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Int32])

  @JavaStaticMethod
  public func sortDescending(_ arg0: [UInt16])

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Int64])

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Int32], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Int64], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Float], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Double], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sortDescending(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Int8])

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Comparable?])

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Comparable?], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sortDescending(_ arg0: [Int16], _ arg1: Int32, _ arg2: Int32)

  @JavaStaticMethod
  public func sortedArray(_ arg0: [Int64]) -> [Int64]

  @JavaStaticMethod
  public func sortedArray(_ arg0: [Comparable?]) -> [Comparable?]

  @JavaStaticMethod
  public func sortedArray(_ arg0: [Int32]) -> [Int32]

  @JavaStaticMethod
  public func sortedArray(_ arg0: [Int16]) -> [Int16]

  @JavaStaticMethod
  public func sortedArray(_ arg0: [Int8]) -> [Int8]

  @JavaStaticMethod
  public func sortedArray(_ arg0: [UInt16]) -> [UInt16]

  @JavaStaticMethod
  public func sortedArray(_ arg0: [Float]) -> [Float]

  @JavaStaticMethod
  public func sortedArray(_ arg0: [Double]) -> [Double]

  @JavaStaticMethod
  public func sortedBy(_ arg0: [Int16], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func sortedBy(_ arg0: [Int32], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func sortedBy(_ arg0: [Float], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func sortedBy(_ arg0: [Int64], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func sortedBy(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func sortedBy(_ arg0: [UInt16], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func sortedBy(_ arg0: [Bool], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func sortedBy(_ arg0: [Double], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func sortedBy(_ arg0: [Int8], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func sortedByDescending(_ arg0: [UInt16], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func sortedByDescending(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func sortedByDescending(_ arg0: [Bool], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func sortedByDescending(_ arg0: [Double], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func sortedByDescending(_ arg0: [Int8], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func sortedByDescending(_ arg0: [Int16], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func sortedByDescending(_ arg0: [Int32], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func sortedByDescending(_ arg0: [Int64], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func sortedByDescending(_ arg0: [Float], _ arg1: Function1<JavaObject, Comparable>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func sortedDescending(_ arg0: [Int8]) -> List<JavaByte>!

  @JavaStaticMethod
  public func sortedDescending(_ arg0: [Comparable?]) -> List<Comparable>!

  @JavaStaticMethod
  public func sortedDescending(_ arg0: [UInt16]) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func sortedDescending(_ arg0: [Double]) -> List<JavaDouble>!

  @JavaStaticMethod
  public func sortedDescending(_ arg0: [Float]) -> List<JavaFloat>!

  @JavaStaticMethod
  public func sortedDescending(_ arg0: [Int64]) -> List<JavaLong>!

  @JavaStaticMethod
  public func sortedDescending(_ arg0: [Int32]) -> List<JavaInteger>!

  @JavaStaticMethod
  public func sortedDescending(_ arg0: [Int16]) -> List<JavaShort>!

  @JavaStaticMethod
  public func getIndices(_ arg0: [Int8]) -> IntRange!

  @JavaStaticMethod
  public func getIndices(_ arg0: [JavaObject?]) -> IntRange!

  @JavaStaticMethod
  public func getIndices(_ arg0: [Double]) -> IntRange!

  @JavaStaticMethod
  public func getIndices(_ arg0: [UInt16]) -> IntRange!

  @JavaStaticMethod
  public func getIndices(_ arg0: [Int16]) -> IntRange!

  @JavaStaticMethod
  public func getIndices(_ arg0: [Float]) -> IntRange!

  @JavaStaticMethod
  public func getIndices(_ arg0: [Int64]) -> IntRange!

  @JavaStaticMethod
  public func getIndices(_ arg0: [Int32]) -> IntRange!

  @JavaStaticMethod
  public func getIndices(_ arg0: [Bool]) -> IntRange!

  @JavaStaticMethod
  public func toBooleanArray(_ arg0: [JavaBoolean?]) -> [Bool]

  @JavaStaticMethod
  public func toDoubleArray(_ arg0: [JavaDouble?]) -> [Double]

  @JavaStaticMethod
  public func toFloatArray(_ arg0: [JavaFloat?]) -> [Float]

  @JavaStaticMethod
  public func toShortArray(_ arg0: [JavaShort?]) -> [Int16]

  @JavaStaticMethod
  public func associate(_ arg0: [Int64], _ arg1: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associate(_ arg0: [Float], _ arg1: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associate(_ arg0: [Double], _ arg1: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associate(_ arg0: [Bool], _ arg1: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associate(_ arg0: [Int16], _ arg1: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associate(_ arg0: [Int8], _ arg1: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associate(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associate(_ arg0: [UInt16], _ arg1: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associate(_ arg0: [Int32], _ arg1: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaCharacter>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaBoolean>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaByte>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaShort>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaInteger>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaLong>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaFloat>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaDouble>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateBy(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Double], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Bool], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Float], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [UInt16], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Int16], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Double], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Bool], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [UInt16], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [JavaObject?], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Int8], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Int8], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [JavaObject?], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Int32], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Int64], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Float], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Int16], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Int32], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateByTo(_ arg0: [Int64], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateTo(_ arg0: [Int8], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateTo(_ arg0: [Int16], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateTo(_ arg0: [Int32], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateTo(_ arg0: [JavaObject?], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateTo(_ arg0: [Bool], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateTo(_ arg0: [UInt16], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateTo(_ arg0: [Double], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateTo(_ arg0: [Int64], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateTo(_ arg0: [Float], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateWith(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func associateWithTo(_ arg0: [JavaObject?], _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func toHashSet(_ arg0: [Double]) -> HashSet<JavaDouble>!

  @JavaStaticMethod
  public func toHashSet(_ arg0: [Float]) -> HashSet<JavaFloat>!

  @JavaStaticMethod
  public func toHashSet(_ arg0: [Bool]) -> HashSet<JavaBoolean>!

  @JavaStaticMethod
  public func toHashSet(_ arg0: [UInt16]) -> HashSet<JavaCharacter>!

  @JavaStaticMethod
  public func toHashSet(_ arg0: [JavaObject?]) -> HashSet<JavaObject>!

  @JavaStaticMethod
  public func toHashSet(_ arg0: [Int8]) -> HashSet<JavaByte>!

  @JavaStaticMethod
  public func toHashSet(_ arg0: [Int16]) -> HashSet<JavaShort>!

  @JavaStaticMethod
  public func toHashSet(_ arg0: [Int64]) -> HashSet<JavaLong>!

  @JavaStaticMethod
  public func toHashSet(_ arg0: [Int32]) -> HashSet<JavaInteger>!

  @JavaStaticMethod
  public func flatMapSequence(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, Sequence<JavaObject>>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func flatMapTo(_ arg0: [Double], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Iterable<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func flatMapTo(_ arg0: [Float], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Iterable<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func flatMapTo(_ arg0: [Bool], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Iterable<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func flatMapTo(_ arg0: [UInt16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Iterable<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func flatMapTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Iterable<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func flatMapTo(_ arg0: [Int8], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Iterable<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func flatMapTo(_ arg0: [Int16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Iterable<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func flatMapTo(_ arg0: [Int32], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Iterable<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func flatMapTo(_ arg0: [Int64], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Iterable<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func flatMapSequenceTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, Sequence<JavaObject>>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaBoolean>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaInteger>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaShort>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaByte>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaCharacter>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaDouble>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaFloat>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaLong>>!

  @JavaStaticMethod
  public func groupBy(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Float], _ arg1: Map<JavaObject, List<JavaFloat>>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaFloat>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Int64], _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Int32], _ arg1: Map<JavaObject, List<JavaInteger>>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaInteger>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Double], _ arg1: Map<JavaObject, List<JavaDouble>>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaDouble>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Bool], _ arg1: Map<JavaObject, List<JavaBoolean>>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaBoolean>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Int32], _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Bool], _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [JavaObject?], _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Int8], _ arg1: Map<JavaObject, List<JavaByte>>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaByte>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Int16], _ arg1: Map<JavaObject, List<JavaShort>>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaShort>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Float], _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Double], _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [UInt16], _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Int64], _ arg1: Map<JavaObject, List<JavaLong>>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaLong>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [UInt16], _ arg1: Map<JavaObject, List<JavaCharacter>>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaCharacter>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [JavaObject?], _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Int8], _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func groupByTo(_ arg0: [Int16], _ arg1: Map<JavaObject, List<JavaObject>>?, _ arg2: Function1<JavaObject, JavaObject>?, _ arg3: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, List<JavaObject>>!

  @JavaStaticMethod
  public func mapIndexed(_ arg0: [Int8], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexed(_ arg0: [JavaObject?], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexed(_ arg0: [Bool], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexed(_ arg0: [Double], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexed(_ arg0: [Float], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexed(_ arg0: [Int64], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexed(_ arg0: [UInt16], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexed(_ arg0: [Int32], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexed(_ arg0: [Int16], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedNotNull(_ arg0: [JavaObject?], _ arg1: Function2<JavaObject, JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedTo(_ arg0: [Int8], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedTo(_ arg0: [Int64], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedTo(_ arg0: [Float], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedTo(_ arg0: [Int16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedTo(_ arg0: [Int32], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedTo(_ arg0: [UInt16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedTo(_ arg0: [Bool], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapIndexedTo(_ arg0: [Double], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapNotNull(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func mapNotNullTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapTo(_ arg0: [Float], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapTo(_ arg0: [Double], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapTo(_ arg0: [Int64], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapTo(_ arg0: [Bool], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapTo(_ arg0: [UInt16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapTo(_ arg0: [JavaObject?], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapTo(_ arg0: [Int8], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapTo(_ arg0: [Int16], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mapTo(_ arg0: [Int32], _ arg1: JavaCollection<JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func toMutableSet(_ arg0: [Bool]) -> JavaSet<JavaBoolean>!

  @JavaStaticMethod
  public func toMutableSet(_ arg0: [Float]) -> JavaSet<JavaFloat>!

  @JavaStaticMethod
  public func toMutableSet(_ arg0: [Int64]) -> JavaSet<JavaLong>!

  @JavaStaticMethod
  public func toMutableSet(_ arg0: [Int32]) -> JavaSet<JavaInteger>!

  @JavaStaticMethod
  public func toMutableSet(_ arg0: [Int16]) -> JavaSet<JavaShort>!

  @JavaStaticMethod
  public func toMutableSet(_ arg0: [Int8]) -> JavaSet<JavaByte>!

  @JavaStaticMethod
  public func toMutableSet(_ arg0: [JavaObject?]) -> JavaSet<JavaObject>!

  @JavaStaticMethod
  public func toMutableSet(_ arg0: [UInt16]) -> JavaSet<JavaCharacter>!

  @JavaStaticMethod
  public func toMutableSet(_ arg0: [Double]) -> JavaSet<JavaDouble>!

  @JavaStaticMethod
  public func distinctBy(_ arg0: [Int32], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaInteger>!

  @JavaStaticMethod
  public func distinctBy(_ arg0: [Int8], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaByte>!

  @JavaStaticMethod
  public func distinctBy(_ arg0: [Int16], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaShort>!

  @JavaStaticMethod
  public func distinctBy(_ arg0: [Double], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaDouble>!

  @JavaStaticMethod
  public func distinctBy(_ arg0: [Int64], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaLong>!

  @JavaStaticMethod
  public func distinctBy(_ arg0: [Float], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaFloat>!

  @JavaStaticMethod
  public func distinctBy(_ arg0: [UInt16], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaCharacter>!

  @JavaStaticMethod
  public func distinctBy(_ arg0: [Bool], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaBoolean>!

  @JavaStaticMethod
  public func distinctBy(_ arg0: [JavaObject?], _ arg1: Function1<JavaObject, JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func intersect(_ arg0: [Double], _ arg1: Iterable<JavaDouble>?) -> JavaSet<JavaDouble>!

  @JavaStaticMethod
  public func intersect(_ arg0: [Bool], _ arg1: Iterable<JavaBoolean>?) -> JavaSet<JavaBoolean>!

  @JavaStaticMethod
  public func intersect(_ arg0: [JavaObject?], _ arg1: Iterable<JavaObject>?) -> JavaSet<JavaObject>!

  @JavaStaticMethod
  public func intersect(_ arg0: [UInt16], _ arg1: Iterable<JavaCharacter>?) -> JavaSet<JavaCharacter>!

  @JavaStaticMethod
  public func intersect(_ arg0: [Int16], _ arg1: Iterable<JavaShort>?) -> JavaSet<JavaShort>!

  @JavaStaticMethod
  public func intersect(_ arg0: [Int32], _ arg1: Iterable<JavaInteger>?) -> JavaSet<JavaInteger>!

  @JavaStaticMethod
  public func intersect(_ arg0: [Int64], _ arg1: Iterable<JavaLong>?) -> JavaSet<JavaLong>!

  @JavaStaticMethod
  public func intersect(_ arg0: [Float], _ arg1: Iterable<JavaFloat>?) -> JavaSet<JavaFloat>!

  @JavaStaticMethod
  public func intersect(_ arg0: [Int8], _ arg1: Iterable<JavaByte>?) -> JavaSet<JavaByte>!

  @JavaStaticMethod
  public func fold(_ arg0: [Float], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func fold(_ arg0: [Double], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func fold(_ arg0: [Bool], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func fold(_ arg0: [UInt16], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func fold(_ arg0: [JavaObject?], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func fold(_ arg0: [Int8], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func fold(_ arg0: [Int16], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func fold(_ arg0: [Int32], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func fold(_ arg0: [Int64], _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!
}

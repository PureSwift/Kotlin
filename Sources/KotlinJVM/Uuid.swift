// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.uuid.Uuid")
open class Uuid: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int64, _ arg1: Int64, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getMostSignificantBits() -> Int64

  @JavaMethod
  open func getLeastSignificantBits() -> Int64

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func toHexString() -> String

  @JavaMethod
  open func toByteArray() -> [Int8]
}
extension JavaClass<Uuid> {
  @JavaStaticField(isFinal: true)
  public var Companion: Uuid.Companion!

  @JavaStaticField(isFinal: true)
  public var SIZE_BYTES: Int32

  @JavaStaticField(isFinal: true)
  public var SIZE_BITS: Int32

  @JavaStaticMethod
  public func access$getNIL$cp() -> Uuid!

  @JavaStaticMethod
  public func getMostSignificantBits$annotations()

  @JavaStaticMethod
  public func getLeastSignificantBits$annotations()
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaLang
import JavaRuntime

@JavaClass("kotlin.collections.CollectionsKt__CollectionsKt")
open class CollectionsKt__CollectionsKt: CollectionsKt__CollectionsJVMKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<CollectionsKt__CollectionsKt> {
  @JavaStaticMethod
  public func emptyList() -> List<JavaObject>!

  @JavaStaticMethod
  public func binarySearch(_ arg0: List<JavaObject>?, _ arg1: Int32, _ arg2: Int32, _ arg3: Function1<JavaObject, JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func binarySearch(_ arg0: List<Comparable>?, _ arg1: Comparable?, _ arg2: Int32, _ arg3: Int32) -> Int32

  @JavaStaticMethod
  public func binarySearch$default(_ arg0: List?, _ arg1: Comparable?, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func binarySearch$default(_ arg0: List?, _ arg1: Int32, _ arg2: Int32, _ arg3: Function1?, _ arg4: Int32, _ arg5: JavaObject?) -> Int32

  @JavaStaticMethod
  public func optimizeReadOnlyList(_ arg0: List<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func binarySearchBy$default(_ arg0: List?, _ arg1: Comparable?, _ arg2: Int32, _ arg3: Int32, _ arg4: Function1?, _ arg5: Int32, _ arg6: JavaObject?) -> Int32

  @JavaStaticMethod
  public func collectionToArrayCommonImpl(_ arg0: JavaCollection<JavaObject>?, _ arg1: [JavaObject?]) -> [JavaObject?]

  @JavaStaticMethod
  public func collectionToArrayCommonImpl(_ arg0: JavaCollection<JavaObject>?) -> [JavaObject?]

  @JavaStaticMethod
  public func throwIndexOverflow()

  @JavaStaticMethod
  public func getLastIndex(_ arg0: List<JavaObject>?) -> Int32

  @JavaStaticMethod
  public func listOf(_ arg0: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func getIndices(_ arg0: JavaCollection<JavaObject>?) -> IntRange!

  @JavaStaticMethod
  public func asCollection(_ arg0: [JavaObject?]) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func mutableListOf(_ arg0: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func arrayListOf(_ arg0: [JavaObject?]) -> ArrayList<JavaObject>!

  @JavaStaticMethod
  public func listOfNotNull(_ arg0: JavaObject?) -> List<JavaObject>!

  @JavaStaticMethod
  public func listOfNotNull(_ arg0: [JavaObject?]) -> List<JavaObject>!

  @JavaStaticMethod
  public func shuffled(_ arg0: Iterable<JavaObject>?, _ arg1: Random?) -> List<JavaObject>!

  @JavaStaticMethod
  public func binarySearchBy(_ arg0: List<JavaObject>?, _ arg1: Comparable?, _ arg2: Int32, _ arg3: Int32, _ arg4: Function1<JavaObject, Comparable>?) -> Int32

  @JavaStaticMethod
  public func throwCountOverflow()
}

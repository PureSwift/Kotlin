// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.jvm.internal.FloatCompanionObject")
open class FloatCompanionObject: JavaObject {
  @JavaMethod
  open func getMIN_VALUE() -> Float

  @JavaMethod
  open func getMAX_VALUE() -> Float

  @JavaMethod
  open func getPOSITIVE_INFINITY() -> Float

  @JavaMethod
  open func getNEGATIVE_INFINITY() -> Float

  @JavaMethod
  open func getNaN() -> Float
}
extension JavaClass<FloatCompanionObject> {
  @JavaStaticField(isFinal: true)
  public var INSTANCE: FloatCompanionObject!

  @JavaStaticField(isFinal: true)
  public var MIN_VALUE: Float

  @JavaStaticField(isFinal: true)
  public var MAX_VALUE: Float

  @JavaStaticField(isFinal: true)
  public var POSITIVE_INFINITY: Float

  @JavaStaticField(isFinal: true)
  public var NEGATIVE_INFINITY: Float

  @JavaStaticField(isFinal: true)
  public var NaN: Float

  @JavaStaticField(isFinal: true)
  public var SIZE_BYTES: Int32

  @JavaStaticField(isFinal: true)
  public var SIZE_BITS: Int32

  @JavaStaticMethod
  public func getMIN_VALUE$annotations()

  @JavaStaticMethod
  public func getMAX_VALUE$annotations()

  @JavaStaticMethod
  public func getSIZE_BYTES$annotations()

  @JavaStaticMethod
  public func getSIZE_BITS$annotations()

  @JavaStaticMethod
  public func getPOSITIVE_INFINITY$annotations()

  @JavaStaticMethod
  public func getNEGATIVE_INFINITY$annotations()

  @JavaStaticMethod
  public func getNaN$annotations()
}

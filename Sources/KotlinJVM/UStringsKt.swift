// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.text.UStringsKt")
open class UStringsKt: JavaObject {

}
extension JavaClass<UStringsKt> {
  @JavaStaticMethod
  public func`toString-LxnNnR4`(_ arg0: Int8, _ arg1: Int32) -> String

@JavaStaticMethod
  public func`toString-olVBNx4`(_ arg0: Int16, _ arg1: Int32) -> String

@JavaStaticMethod
  public func`toString-V7xB4Y4`(_ arg0: Int32, _ arg1: Int32) -> String

@JavaStaticMethod
  public func`toString-JSWoG40`(_ arg0: Int64, _ arg1: Int32) -> String

@JavaStaticMethod
  public func toUByte(_ arg0: String, _ arg1: Int32) -> Int8

  @JavaStaticMethod
  public func toUByte(_ arg0: String) -> Int8

  @JavaStaticMethod
  public func toUByteOrNull(_ arg0: String, _ arg1: Int32) -> UByte!

  @JavaStaticMethod
  public func toUByteOrNull(_ arg0: String) -> UByte!

  @JavaStaticMethod
  public func toUShort(_ arg0: String, _ arg1: Int32) -> Int16

  @JavaStaticMethod
  public func toUShort(_ arg0: String) -> Int16

  @JavaStaticMethod
  public func toUShortOrNull(_ arg0: String) -> UShort!

  @JavaStaticMethod
  public func toUShortOrNull(_ arg0: String, _ arg1: Int32) -> UShort!

  @JavaStaticMethod
  public func toUInt(_ arg0: String) -> Int32

  @JavaStaticMethod
  public func toUInt(_ arg0: String, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func toUIntOrNull(_ arg0: String, _ arg1: Int32) -> UInt!

  @JavaStaticMethod
  public func toUIntOrNull(_ arg0: String) -> UInt!

  @JavaStaticMethod
  public func toULong(_ arg0: String, _ arg1: Int32) -> Int64

  @JavaStaticMethod
  public func toULong(_ arg0: String) -> Int64

  @JavaStaticMethod
  public func toULongOrNull(_ arg0: String, _ arg1: Int32) -> ULong!

  @JavaStaticMethod
  public func toULongOrNull(_ arg0: String) -> ULong!
}

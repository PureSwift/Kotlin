// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("kotlin.sequences.SequenceBuilderIterator", implements: JavaIterator<JavaObject>.self, Continuation<Unit>.self)
open class SequenceBuilderIterator<T: AnyJavaObject>: SequenceScope {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getNextStep() -> Continuation<Unit>!

  @JavaMethod
  open func setNextStep(_ arg0: Continuation<JavaObject>?)

  @JavaMethod
  open func resumeWith(_ arg0: JavaObject?)

  @JavaMethod
  open override func yieldAll(_ arg0: JavaIterator<JavaObject>?, _ arg1: Continuation<JavaObject>?) -> JavaObject!

  @JavaMethod
  open func remove()

  @JavaMethod
  open func hasNext() -> Bool

  @JavaMethod
  open func next() -> JavaObject!

  @JavaMethod
  open override func yield(_ arg0: JavaObject?, _ arg1: Continuation<JavaObject>?) -> JavaObject!

  @JavaMethod
  open func getContext() -> CoroutineContext!
}

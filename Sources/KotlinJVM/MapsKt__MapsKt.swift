// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaLang
import JavaRuntime
import JavaUtil

@JavaClass("kotlin.collections.MapsKt__MapsKt")
open class MapsKt__MapsKt: MapsKt__MapsJVMKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<MapsKt__MapsKt> {
  @JavaStaticMethod
  public func getValue(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: JavaObject?) -> JavaObject!

  @JavaStaticMethod
  public func filter(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func putAll(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Iterable<Pair<JavaObject, JavaObject>>?)

  @JavaStaticMethod
  public func putAll(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Sequence<Pair<JavaObject, JavaObject>>?)

  @JavaStaticMethod
  public func putAll(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: [Pair<JavaObject, JavaObject>?])

  @JavaStaticMethod
  public func toMap(_ arg0: Map<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func toMap(_ arg0: Iterable<Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func toMap(_ arg0: [Pair<JavaObject, JavaObject>?], _ arg1: Map<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func toMap(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func toMap(_ arg0: Sequence<Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func toMap(_ arg0: [Pair<JavaObject, JavaObject>?]) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func toMap(_ arg0: Iterable<Pair<JavaObject, JavaObject>>?, _ arg1: Map<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func toMap(_ arg0: Sequence<Pair<JavaObject, JavaObject>>?, _ arg1: Map<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func emptyMap() -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func filterValues(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func minus(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Iterable<JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func minus(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: [JavaObject?]) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func minus(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: JavaObject?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func minus(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Sequence<JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Sequence<Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Iterable<Pair<JavaObject, JavaObject>>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Pair<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func plus(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: [Pair<JavaObject, JavaObject>?]) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func optimizeReadOnlyMap(_ arg0: Map<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func filterNot(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func filterNotTo(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func filterTo(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaBoolean>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func mapOf(_ arg0: [Pair<JavaObject, JavaObject>?]) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func mutableMapOf(_ arg0: [Pair<JavaObject, JavaObject>?]) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func hashMapOf(_ arg0: [Pair<JavaObject, JavaObject>?]) -> HashMap<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func getOrElseNullable(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: JavaObject?, _ arg2: Function0<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func getOrPut(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: JavaObject?, _ arg2: Function0<JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func mapValuesTo(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func mapKeysTo(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Map<JavaObject, JavaObject>?, _ arg2: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func mapValues(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func mapKeys(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func filterKeys(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Function1<JavaObject, JavaBoolean>?) -> Map<JavaObject, JavaObject>!

  @JavaStaticMethod
  public func toMutableMap(_ arg0: Map<JavaObject, JavaObject>?) -> Map<JavaObject, JavaObject>!
}

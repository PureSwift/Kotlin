// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaLang
import JavaRuntime

@JavaClass("kotlin.ranges.RangesKt__RangesKt")
open class RangesKt__RangesKt: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<RangesKt__RangesKt> {
  @JavaStaticMethod
  public func checkStepIsPositive(_ arg0: Bool, _ arg1: JavaNumber?)

  @JavaStaticMethod
  public func rangeTo(_ arg0: Comparable?, _ arg1: Comparable?) -> ClosedRange<Comparable>!

  @JavaStaticMethod
  public func rangeTo(_ arg0: Double, _ arg1: Double) -> ClosedFloatingPointRange<JavaDouble>!

  @JavaStaticMethod
  public func rangeTo(_ arg0: Float, _ arg1: Float) -> ClosedFloatingPointRange<JavaFloat>!

  @JavaStaticMethod
  public func rangeUntil(_ arg0: Float, _ arg1: Float) -> OpenEndRange<JavaFloat>!

  @JavaStaticMethod
  public func rangeUntil(_ arg0: Comparable?, _ arg1: Comparable?) -> OpenEndRange<Comparable>!

  @JavaStaticMethod
  public func rangeUntil(_ arg0: Double, _ arg1: Double) -> OpenEndRange<JavaDouble>!
}

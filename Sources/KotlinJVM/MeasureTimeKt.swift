// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.time.MeasureTimeKt")
open class MeasureTimeKt: JavaObject {

}
extension JavaClass<MeasureTimeKt> {
  @JavaStaticMethod
  public func measureTime(_ arg0: TimeSource.Monotonic?, _ arg1: Function0<Unit>?) -> Int64

  @JavaStaticMethod
  public func measureTime(_ arg0: TimeSource?, _ arg1: Function0<Unit>?) -> Int64

  @JavaStaticMethod
  public func measureTime(_ arg0: Function0<Unit>?) -> Int64

  @JavaStaticMethod
  public func measureTimedValue(_ arg0: TimeSource.Monotonic?, _ arg1: Function0<JavaObject>?) -> TimedValue<JavaObject>!

  @JavaStaticMethod
  public func measureTimedValue(_ arg0: TimeSource?, _ arg1: Function0<JavaObject>?) -> TimedValue<JavaObject>!

  @JavaStaticMethod
  public func measureTimedValue(_ arg0: Function0<JavaObject>?) -> TimedValue<JavaObject>!
}

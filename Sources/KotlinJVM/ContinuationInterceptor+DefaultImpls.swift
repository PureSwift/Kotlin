// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

extension ContinuationInterceptor {
  @JavaClass("kotlin.coroutines.ContinuationInterceptor$DefaultImpls")
  open class DefaultImpls: JavaObject {

  }
}
extension JavaClass<ContinuationInterceptor.DefaultImpls> {
  @JavaStaticMethod
  public func fold(_ arg0: ContinuationInterceptor?, _ arg1: JavaObject?, _ arg2: Function2<JavaObject, JavaObject, JavaObject>?) -> JavaObject!

  @JavaStaticMethod
  public func minusKey(_ arg0: ContinuationInterceptor?, _ arg1: CoroutineContext.Key<JavaObject>?) -> CoroutineContext!

  @JavaStaticMethod
  public func releaseInterceptedContinuation(_ arg0: ContinuationInterceptor?, _ arg1: Continuation<JavaObject>?)

  @JavaStaticMethod
  public func get(_ arg0: ContinuationInterceptor?, _ arg1: CoroutineContext.Key<CoroutineContext.Element>?) -> CoroutineContext.Element!

  @JavaStaticMethod
  public func plus(_ arg0: ContinuationInterceptor?, _ arg1: CoroutineContext?) -> CoroutineContext!
}

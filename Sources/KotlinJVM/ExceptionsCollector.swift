// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaKitIO
import JavaRuntime

@JavaClass("kotlin.io.path.ExceptionsCollector")
open class ExceptionsCollector: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, _ arg1: Int32, _ arg2: DefaultConstructorMarker?, environment: JNIEnvironment? = nil)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Int32, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func collect(_ arg0: Exception?)

  @JavaMethod
  open func getPath() -> Path!

  @JavaMethod
  open func getCollectedExceptions() -> List<Exception>!

  @JavaMethod
  open func setPath(_ arg0: Path?)

  @JavaMethod
  open func enterEntry(_ arg0: Path?)

  @JavaMethod
  open func getTotalExceptions() -> Int32

  @JavaMethod
  open func exitEntry(_ arg0: Path?)
}

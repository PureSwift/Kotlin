// Auto-generated by Java-to-Swift wrapper generator.
import JavaIO
import JavaKit
import JavaLang
import JavaRuntime

@JavaClass("kotlin.coroutines.jvm.internal.BaseContinuationImpl", implements: Continuation<JavaObject>.self, CoroutineStackFrame.self, Serializable.self)
open class BaseContinuationImpl: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Continuation<JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func create(_ arg0: Continuation<JavaObject>?) -> Continuation<Unit>!

  @JavaMethod
  open func create(_ arg0: JavaObject?, _ arg1: Continuation<JavaObject>?) -> Continuation<Unit>!

  @JavaMethod
  open func getStackTraceElement() -> StackTraceElement!

  @JavaMethod
  open func resumeWith(_ arg0: JavaObject?)

  @JavaMethod
  open func getCompletion() -> Continuation<JavaObject>!

  @JavaMethod
  open func invokeSuspend(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func releaseIntercepted()

  @JavaMethod
  open func getCallerFrame() -> CoroutineStackFrame!
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaLang
import JavaRuntime

@JavaClass("kotlin.collections.CollectionsKt___CollectionsJvmKt")
open class CollectionsKt___CollectionsJvmKt: CollectionsKt__ReversedViewsKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<CollectionsKt___CollectionsJvmKt> {
  @JavaStaticMethod
  public func filterIsInstance(_ arg0: Iterable<JavaObject>?, _ arg1: JavaClass<JavaObject>?) -> List<JavaObject>!

  @JavaStaticMethod
  public func filterIsInstanceTo(_ arg0: Iterable<JavaObject>?, _ arg1: JavaCollection<JavaObject>?, _ arg2: JavaClass<JavaObject>?) -> JavaCollection<JavaObject>!

  @JavaStaticMethod
  public func min(_ arg0: Iterable?) -> JavaFloat!

  @JavaStaticMethod
  public func min(_ arg0: Iterable?) -> Comparable!

  @JavaStaticMethod
  public func min(_ arg0: Iterable?) -> JavaDouble!

  @JavaStaticMethod
  public func max(_ arg0: Iterable?) -> Comparable!

  @JavaStaticMethod
  public func max(_ arg0: Iterable?) -> JavaDouble!

  @JavaStaticMethod
  public func max(_ arg0: Iterable?) -> JavaFloat!

  @JavaStaticMethod
  public func reverse(_ arg0: List<JavaObject>?)

  @JavaStaticMethod
  public func maxBy(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Comparable<JavaObject>>?) -> JavaObject!

  @JavaStaticMethod
  public func minBy(_ arg0: Iterable<JavaObject>?, _ arg1: Function1<JavaObject, Comparable<JavaObject>>?) -> JavaObject!
}

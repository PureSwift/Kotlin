// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaRuntime

@JavaClass("kotlin.ranges.RangesKt___RangesKt")
open class RangesKt___RangesKt: RangesKt__RangesKt {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = nil)
}
extension JavaClass<RangesKt___RangesKt> {
  @JavaStaticMethod
  public func intRangeContains(_ arg0: ClosedRange?, _ arg1: Double) -> Bool

  @JavaStaticMethod
  public func intRangeContains(_ arg0: OpenEndRange<JavaInteger>?, _ arg1: Int64) -> Bool

  @JavaStaticMethod
  public func intRangeContains(_ arg0: ClosedRange<JavaInteger>?, _ arg1: Int64) -> Bool

  @JavaStaticMethod
  public func intRangeContains(_ arg0: OpenEndRange<JavaInteger>?, _ arg1: Int16) -> Bool

  @JavaStaticMethod
  public func intRangeContains(_ arg0: ClosedRange<JavaInteger>?, _ arg1: Int8) -> Bool

  @JavaStaticMethod
  public func intRangeContains(_ arg0: ClosedRange<JavaInteger>?, _ arg1: Int16) -> Bool

  @JavaStaticMethod
  public func intRangeContains(_ arg0: ClosedRange?, _ arg1: Float) -> Bool

  @JavaStaticMethod
  public func intRangeContains(_ arg0: OpenEndRange<JavaInteger>?, _ arg1: Int8) -> Bool

  @JavaStaticMethod
  public func longRangeContains(_ arg0: OpenEndRange<JavaLong>?, _ arg1: Int16) -> Bool

  @JavaStaticMethod
  public func longRangeContains(_ arg0: ClosedRange<JavaLong>?, _ arg1: Int16) -> Bool

  @JavaStaticMethod
  public func longRangeContains(_ arg0: ClosedRange<JavaLong>?, _ arg1: Int8) -> Bool

  @JavaStaticMethod
  public func longRangeContains(_ arg0: OpenEndRange<JavaLong>?, _ arg1: Int32) -> Bool

  @JavaStaticMethod
  public func longRangeContains(_ arg0: ClosedRange<JavaLong>?, _ arg1: Int32) -> Bool

  @JavaStaticMethod
  public func longRangeContains(_ arg0: ClosedRange?, _ arg1: Double) -> Bool

  @JavaStaticMethod
  public func longRangeContains(_ arg0: OpenEndRange<JavaLong>?, _ arg1: Int8) -> Bool

  @JavaStaticMethod
  public func longRangeContains(_ arg0: ClosedRange?, _ arg1: Float) -> Bool

  @JavaStaticMethod
  public func shortRangeContains(_ arg0: ClosedRange<JavaShort>?, _ arg1: Int32) -> Bool

  @JavaStaticMethod
  public func shortRangeContains(_ arg0: ClosedRange<JavaShort>?, _ arg1: Int64) -> Bool

  @JavaStaticMethod
  public func shortRangeContains(_ arg0: OpenEndRange<JavaShort>?, _ arg1: Int8) -> Bool

  @JavaStaticMethod
  public func shortRangeContains(_ arg0: ClosedRange?, _ arg1: Float) -> Bool

  @JavaStaticMethod
  public func shortRangeContains(_ arg0: ClosedRange<JavaShort>?, _ arg1: Int8) -> Bool

  @JavaStaticMethod
  public func shortRangeContains(_ arg0: ClosedRange?, _ arg1: Double) -> Bool

  @JavaStaticMethod
  public func shortRangeContains(_ arg0: OpenEndRange<JavaShort>?, _ arg1: Int32) -> Bool

  @JavaStaticMethod
  public func shortRangeContains(_ arg0: OpenEndRange<JavaShort>?, _ arg1: Int64) -> Bool

  @JavaStaticMethod
  public func floatRangeContains(_ arg0: ClosedRange?, _ arg1: Int32) -> Bool

  @JavaStaticMethod
  public func floatRangeContains(_ arg0: ClosedRange?, _ arg1: Int16) -> Bool

  @JavaStaticMethod
  public func floatRangeContains(_ arg0: ClosedRange?, _ arg1: Int8) -> Bool

  @JavaStaticMethod
  public func floatRangeContains(_ arg0: ClosedRange?, _ arg1: Int64) -> Bool

  @JavaStaticMethod
  public func floatRangeContains(_ arg0: ClosedRange<JavaFloat>?, _ arg1: Double) -> Bool

  @JavaStaticMethod
  public func toIntExactOrNull(_ arg0: Double) -> JavaInteger!

  @JavaStaticMethod
  public func toIntExactOrNull(_ arg0: Float) -> JavaInteger!

  @JavaStaticMethod
  public func toIntExactOrNull(_ arg0: Int64) -> JavaInteger!

  @JavaStaticMethod
  public func toLongExactOrNull(_ arg0: Float) -> JavaLong!

  @JavaStaticMethod
  public func toLongExactOrNull(_ arg0: Double) -> JavaLong!

  @JavaStaticMethod
  public func byteRangeContains(_ arg0: OpenEndRange<JavaByte>?, _ arg1: Int64) -> Bool

  @JavaStaticMethod
  public func byteRangeContains(_ arg0: ClosedRange?, _ arg1: Double) -> Bool

  @JavaStaticMethod
  public func byteRangeContains(_ arg0: ClosedRange<JavaByte>?, _ arg1: Int32) -> Bool

  @JavaStaticMethod
  public func byteRangeContains(_ arg0: ClosedRange?, _ arg1: Float) -> Bool

  @JavaStaticMethod
  public func byteRangeContains(_ arg0: OpenEndRange<JavaByte>?, _ arg1: Int16) -> Bool

  @JavaStaticMethod
  public func byteRangeContains(_ arg0: ClosedRange<JavaByte>?, _ arg1: Int64) -> Bool

  @JavaStaticMethod
  public func byteRangeContains(_ arg0: OpenEndRange<JavaByte>?, _ arg1: Int32) -> Bool

  @JavaStaticMethod
  public func byteRangeContains(_ arg0: ClosedRange<JavaByte>?, _ arg1: Int16) -> Bool

  @JavaStaticMethod
  public func toByteExactOrNull(_ arg0: Float) -> JavaByte!

  @JavaStaticMethod
  public func toByteExactOrNull(_ arg0: Int32) -> JavaByte!

  @JavaStaticMethod
  public func toByteExactOrNull(_ arg0: Double) -> JavaByte!

  @JavaStaticMethod
  public func toByteExactOrNull(_ arg0: Int16) -> JavaByte!

  @JavaStaticMethod
  public func toByteExactOrNull(_ arg0: Int64) -> JavaByte!

  @JavaStaticMethod
  public func toShortExactOrNull(_ arg0: Float) -> JavaShort!

  @JavaStaticMethod
  public func toShortExactOrNull(_ arg0: Int64) -> JavaShort!

  @JavaStaticMethod
  public func toShortExactOrNull(_ arg0: Int32) -> JavaShort!

  @JavaStaticMethod
  public func toShortExactOrNull(_ arg0: Double) -> JavaShort!

  @JavaStaticMethod
  public func coerceIn(_ arg0: Int32, _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public func coerceIn(_ arg0: Int16, _ arg1: Int16, _ arg2: Int16) -> Int16

  @JavaStaticMethod
  public func coerceIn(_ arg0: Int8, _ arg1: Int8, _ arg2: Int8) -> Int8

  @JavaStaticMethod
  public func coerceIn(_ arg0: Int64, _ arg1: Int64, _ arg2: Int64) -> Int64

  @JavaStaticMethod
  public func coerceIn(_ arg0: Float, _ arg1: Float, _ arg2: Float) -> Float

  @JavaStaticMethod
  public func coerceIn(_ arg0: Double, _ arg1: Double, _ arg2: Double) -> Double

  @JavaStaticMethod
  public func coerceIn(_ arg0: Int64, _ arg1: ClosedRange<JavaLong>?) -> Int64

  @JavaStaticMethod
  public func coerceIn(_ arg0: Int32, _ arg1: ClosedRange<JavaInteger>?) -> Int32

  @JavaStaticMethod
  public func coerceAtMost(_ arg0: Int16, _ arg1: Int16) -> Int16

  @JavaStaticMethod
  public func coerceAtMost(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func coerceAtMost(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func coerceAtMost(_ arg0: Float, _ arg1: Float) -> Float

  @JavaStaticMethod
  public func coerceAtMost(_ arg0: Int8, _ arg1: Int8) -> Int8

  @JavaStaticMethod
  public func coerceAtMost(_ arg0: Double, _ arg1: Double) -> Double

  @JavaStaticMethod
  public func firstOrNull(_ arg0: LongProgression?) -> JavaLong!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: CharProgression?) -> JavaCharacter!

  @JavaStaticMethod
  public func firstOrNull(_ arg0: IntProgression?) -> JavaInteger!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: IntProgression?) -> JavaInteger!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: LongProgression?) -> JavaLong!

  @JavaStaticMethod
  public func lastOrNull(_ arg0: CharProgression?) -> JavaCharacter!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: IntRange?, _ arg1: Random?) -> JavaInteger!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: LongRange?, _ arg1: Random?) -> JavaLong!

  @JavaStaticMethod
  public func randomOrNull(_ arg0: CharRange?, _ arg1: Random?) -> JavaCharacter!

  @JavaStaticMethod
  public func coerceAtLeast(_ arg0: Int8, _ arg1: Int8) -> Int8

  @JavaStaticMethod
  public func coerceAtLeast(_ arg0: Int16, _ arg1: Int16) -> Int16

  @JavaStaticMethod
  public func coerceAtLeast(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public func coerceAtLeast(_ arg0: Double, _ arg1: Double) -> Double

  @JavaStaticMethod
  public func coerceAtLeast(_ arg0: Float, _ arg1: Float) -> Float

  @JavaStaticMethod
  public func coerceAtLeast(_ arg0: Int64, _ arg1: Int64) -> Int64

  @JavaStaticMethod
  public func downTo(_ arg0: Int64, _ arg1: Int16) -> LongProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int8, _ arg1: Int16) -> IntProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int16, _ arg1: Int16) -> IntProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int16, _ arg1: Int8) -> IntProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: UInt16, _ arg1: UInt16) -> CharProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int8, _ arg1: Int8) -> IntProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int64, _ arg1: Int32) -> LongProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int64, _ arg1: Int8) -> LongProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int32, _ arg1: Int8) -> IntProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int32, _ arg1: Int32) -> IntProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int64, _ arg1: Int64) -> LongProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int8, _ arg1: Int64) -> LongProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int16, _ arg1: Int64) -> LongProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int32, _ arg1: Int16) -> IntProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int8, _ arg1: Int32) -> IntProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int16, _ arg1: Int32) -> IntProgression!

  @JavaStaticMethod
  public func downTo(_ arg0: Int32, _ arg1: Int64) -> LongProgression!

  @JavaStaticMethod
  public func doubleRangeContains(_ arg0: ClosedRange<JavaDouble>?, _ arg1: Float) -> Bool

  @JavaStaticMethod
  public func doubleRangeContains(_ arg0: OpenEndRange<JavaDouble>?, _ arg1: Float) -> Bool

  @JavaStaticMethod
  public func doubleRangeContains(_ arg0: ClosedRange?, _ arg1: Int32) -> Bool

  @JavaStaticMethod
  public func doubleRangeContains(_ arg0: ClosedRange?, _ arg1: Int8) -> Bool

  @JavaStaticMethod
  public func doubleRangeContains(_ arg0: ClosedRange?, _ arg1: Int64) -> Bool

  @JavaStaticMethod
  public func doubleRangeContains(_ arg0: ClosedRange?, _ arg1: Int16) -> Bool

  @JavaStaticMethod
  public func last(_ arg0: IntProgression?) -> Int32

  @JavaStaticMethod
  public func last(_ arg0: LongProgression?) -> Int64

  @JavaStaticMethod
  public func last(_ arg0: CharProgression?) -> UInt16

  @JavaStaticMethod
  public func first(_ arg0: LongProgression?) -> Int64

  @JavaStaticMethod
  public func first(_ arg0: CharProgression?) -> UInt16

  @JavaStaticMethod
  public func first(_ arg0: IntProgression?) -> Int32

  @JavaStaticMethod
  public func reversed(_ arg0: CharProgression?) -> CharProgression!

  @JavaStaticMethod
  public func reversed(_ arg0: LongProgression?) -> LongProgression!

  @JavaStaticMethod
  public func reversed(_ arg0: IntProgression?) -> IntProgression!

  @JavaStaticMethod
  public func step(_ arg0: LongProgression?, _ arg1: Int64) -> LongProgression!

  @JavaStaticMethod
  public func step(_ arg0: CharProgression?, _ arg1: Int32) -> CharProgression!

  @JavaStaticMethod
  public func step(_ arg0: IntProgression?, _ arg1: Int32) -> IntProgression!

  @JavaStaticMethod
  public func random(_ arg0: IntRange?, _ arg1: Random?) -> Int32

  @JavaStaticMethod
  public func random(_ arg0: LongRange?, _ arg1: Random?) -> Int64

  @JavaStaticMethod
  public func random(_ arg0: CharRange?, _ arg1: Random?) -> UInt16

  @JavaStaticMethod
  public func until(_ arg0: Int8, _ arg1: Int16) -> IntRange!

  @JavaStaticMethod
  public func until(_ arg0: UInt16, _ arg1: UInt16) -> CharRange!

  @JavaStaticMethod
  public func until(_ arg0: Int32, _ arg1: Int8) -> IntRange!

  @JavaStaticMethod
  public func until(_ arg0: Int64, _ arg1: Int8) -> LongRange!

  @JavaStaticMethod
  public func until(_ arg0: Int8, _ arg1: Int8) -> IntRange!

  @JavaStaticMethod
  public func until(_ arg0: Int16, _ arg1: Int8) -> IntRange!

  @JavaStaticMethod
  public func until(_ arg0: Int32, _ arg1: Int64) -> LongRange!

  @JavaStaticMethod
  public func until(_ arg0: Int64, _ arg1: Int64) -> LongRange!

  @JavaStaticMethod
  public func until(_ arg0: Int8, _ arg1: Int64) -> LongRange!

  @JavaStaticMethod
  public func until(_ arg0: Int16, _ arg1: Int64) -> LongRange!

  @JavaStaticMethod
  public func until(_ arg0: Int32, _ arg1: Int16) -> IntRange!

  @JavaStaticMethod
  public func until(_ arg0: Int64, _ arg1: Int16) -> LongRange!

  @JavaStaticMethod
  public func until(_ arg0: Int16, _ arg1: Int16) -> IntRange!

  @JavaStaticMethod
  public func until(_ arg0: Int32, _ arg1: Int32) -> IntRange!

  @JavaStaticMethod
  public func until(_ arg0: Int64, _ arg1: Int32) -> LongRange!

  @JavaStaticMethod
  public func until(_ arg0: Int8, _ arg1: Int32) -> IntRange!

  @JavaStaticMethod
  public func until(_ arg0: Int16, _ arg1: Int32) -> IntRange!
}

// Auto-generated by Java-to-Swift wrapper generator.
import JavaKit
import JavaKitCollection
import JavaRuntime
import JavaUtil

@JavaClass("kotlin.collections.MutableMapWithDefaultImpl", implements: MutableMapWithDefault<JavaObject, JavaObject>.self)
open class MutableMapWithDefaultImpl<K: AnyJavaObject, V: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Map<JavaObject, JavaObject>?, _ arg1: Function1<JavaObject, JavaObject>?, environment: JNIEnvironment? = nil)

  @JavaMethod
  open func getValues() -> JavaCollection<JavaObject>!

  @JavaMethod
  open func getOrImplicitDefault(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func remove(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func size() -> Int32

  @JavaMethod
  open func get(_ arg0: JavaObject?) -> JavaObject!

  @JavaMethod
  open func put(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaObject!

  @JavaMethod
  open override func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open override func toString() -> String

  @JavaMethod
  open func values() -> JavaCollection<JavaObject>!

  @JavaMethod
  open override func hashCode() -> Int32

  @JavaMethod
  open func clear()

  @JavaMethod
  open func isEmpty() -> Bool

  @JavaMethod
  open func entrySet() -> JavaSet<Map.Entry<JavaObject, JavaObject>>!

  @JavaMethod
  open func putAll(_ arg0: Map<JavaObject, JavaObject>?)

  @JavaMethod
  open func keySet() -> JavaSet<JavaObject>!

  @JavaMethod
  open func containsValue(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func containsKey(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  open func getSize() -> Int32

  @JavaMethod
  open func getEntries() -> JavaSet<Map.Entry<JavaObject, JavaObject>>!

  @JavaMethod
  open func getMap() -> Map<JavaObject, JavaObject>!

  @JavaMethod
  open func getKeys() -> JavaSet<JavaObject>!
}
